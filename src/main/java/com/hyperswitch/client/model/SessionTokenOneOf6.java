/*
 * Hyperswitch - API Documentation
 *  ## Get started  Hyperswitch provides a collection of APIs that enable you to process and manage payments. Our APIs accept and return JSON in the HTTP body, and return standard HTTP response codes.  You can consume the APIs directly using your favorite HTTP/REST library.  We have a testing environment referred to \"sandbox\", which you can setup to test API calls without affecting production data. Currently, our sandbox environment is live while our production environment is under development and will be available soon. You can sign up on our Dashboard to get API keys to access Hyperswitch API.  ### Environment  Use the following base URLs when making requests to the APIs:  | Environment   |  Base URL                          | |---------------|------------------------------------| | Sandbox       | <https://sandbox.hyperswitch.io>   | | Production    | <https://api.hyperswitch.io>       |  ## Authentication  When you sign up on our [dashboard](https://app.hyperswitch.io) and create a merchant account, you are given a secret key (also referred as api-key) and a publishable key. You may authenticate all API requests with Hyperswitch server by providing the appropriate key in the request Authorization header.  | Key             |  Description                                                                                  | |-----------------|-----------------------------------------------------------------------------------------------| | api-key         | Private key. Used to authenticate all API requests from your merchant server                  | | publishable key | Unique identifier for your account. Used to authenticate API requests from your app's client  |  Never share your secret api keys. Keep them guarded and secure. 
 *
 * The version of the OpenAPI document: 0.1.0
 * Contact: hyperswitch@juspay.in
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.hyperswitch.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.hyperswitch.client.model.Currency;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * SessionTokenOneOf6
 */
@JsonPropertyOrder({
  SessionTokenOneOf6.JSON_PROPERTY_CLIENT_ID,
  SessionTokenOneOf6.JSON_PROPERTY_CLIENT_NAME,
  SessionTokenOneOf6.JSON_PROPERTY_CLIENT_PROFILE_ID,
  SessionTokenOneOf6.JSON_PROPERTY_TRANSACTION_CURRENCY_CODE,
  SessionTokenOneOf6.JSON_PROPERTY_TRANSACTION_AMOUNT,
  SessionTokenOneOf6.JSON_PROPERTY_EMAIL_ADDRESS,
  SessionTokenOneOf6.JSON_PROPERTY_WALLET_NAME
})
@JsonTypeName("SessionToken_oneOf_6")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class SessionTokenOneOf6 {
  public static final String JSON_PROPERTY_CLIENT_ID = "client_id";
  private String clientId;

  public static final String JSON_PROPERTY_CLIENT_NAME = "client_name";
  private String clientName;

  public static final String JSON_PROPERTY_CLIENT_PROFILE_ID = "client_profile_id";
  private String clientProfileId;

  public static final String JSON_PROPERTY_TRANSACTION_CURRENCY_CODE = "transaction_currency_code";
  private Currency transactionCurrencyCode;

  public static final String JSON_PROPERTY_TRANSACTION_AMOUNT = "transaction_amount";
  private String transactionAmount;

  public static final String JSON_PROPERTY_EMAIL_ADDRESS = "email_address";
  private JsonNullable<String> emailAddress = JsonNullable.<String>undefined();

  /**
   * Gets or Sets walletName
   */
  public enum WalletNameEnum {
    PAZE("paze");

    private String value;

    WalletNameEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static WalletNameEnum fromValue(String value) {
      for (WalletNameEnum b : WalletNameEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_WALLET_NAME = "wallet_name";
  private WalletNameEnum walletName;

  public SessionTokenOneOf6() {
  }

  public SessionTokenOneOf6 clientId(String clientId) {
    
    this.clientId = clientId;
    return this;
  }

   /**
   * Paze Client ID
   * @return clientId
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_CLIENT_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getClientId() {
    return clientId;
  }


  @JsonProperty(JSON_PROPERTY_CLIENT_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setClientId(String clientId) {
    this.clientId = clientId;
  }


  public SessionTokenOneOf6 clientName(String clientName) {
    
    this.clientName = clientName;
    return this;
  }

   /**
   * Client Name to be displayed on the Paze screen
   * @return clientName
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_CLIENT_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getClientName() {
    return clientName;
  }


  @JsonProperty(JSON_PROPERTY_CLIENT_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setClientName(String clientName) {
    this.clientName = clientName;
  }


  public SessionTokenOneOf6 clientProfileId(String clientProfileId) {
    
    this.clientProfileId = clientProfileId;
    return this;
  }

   /**
   * Paze Client Profile ID
   * @return clientProfileId
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_CLIENT_PROFILE_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getClientProfileId() {
    return clientProfileId;
  }


  @JsonProperty(JSON_PROPERTY_CLIENT_PROFILE_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setClientProfileId(String clientProfileId) {
    this.clientProfileId = clientProfileId;
  }


  public SessionTokenOneOf6 transactionCurrencyCode(Currency transactionCurrencyCode) {
    
    this.transactionCurrencyCode = transactionCurrencyCode;
    return this;
  }

   /**
   * Get transactionCurrencyCode
   * @return transactionCurrencyCode
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_TRANSACTION_CURRENCY_CODE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Currency getTransactionCurrencyCode() {
    return transactionCurrencyCode;
  }


  @JsonProperty(JSON_PROPERTY_TRANSACTION_CURRENCY_CODE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setTransactionCurrencyCode(Currency transactionCurrencyCode) {
    this.transactionCurrencyCode = transactionCurrencyCode;
  }


  public SessionTokenOneOf6 transactionAmount(String transactionAmount) {
    
    this.transactionAmount = transactionAmount;
    return this;
  }

   /**
   * The transaction amount
   * @return transactionAmount
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_TRANSACTION_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getTransactionAmount() {
    return transactionAmount;
  }


  @JsonProperty(JSON_PROPERTY_TRANSACTION_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setTransactionAmount(String transactionAmount) {
    this.transactionAmount = transactionAmount;
  }


  public SessionTokenOneOf6 emailAddress(String emailAddress) {
    this.emailAddress = JsonNullable.<String>of(emailAddress);
    
    return this;
  }

   /**
   * Email Address
   * @return emailAddress
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public String getEmailAddress() {
        return emailAddress.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_EMAIL_ADDRESS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getEmailAddress_JsonNullable() {
    return emailAddress;
  }
  
  @JsonProperty(JSON_PROPERTY_EMAIL_ADDRESS)
  public void setEmailAddress_JsonNullable(JsonNullable<String> emailAddress) {
    this.emailAddress = emailAddress;
  }

  public void setEmailAddress(String emailAddress) {
    this.emailAddress = JsonNullable.<String>of(emailAddress);
  }


  public SessionTokenOneOf6 walletName(WalletNameEnum walletName) {
    
    this.walletName = walletName;
    return this;
  }

   /**
   * Get walletName
   * @return walletName
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_WALLET_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public WalletNameEnum getWalletName() {
    return walletName;
  }


  @JsonProperty(JSON_PROPERTY_WALLET_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setWalletName(WalletNameEnum walletName) {
    this.walletName = walletName;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SessionTokenOneOf6 sessionTokenOneOf6 = (SessionTokenOneOf6) o;
    return Objects.equals(this.clientId, sessionTokenOneOf6.clientId) &&
        Objects.equals(this.clientName, sessionTokenOneOf6.clientName) &&
        Objects.equals(this.clientProfileId, sessionTokenOneOf6.clientProfileId) &&
        Objects.equals(this.transactionCurrencyCode, sessionTokenOneOf6.transactionCurrencyCode) &&
        Objects.equals(this.transactionAmount, sessionTokenOneOf6.transactionAmount) &&
        equalsNullable(this.emailAddress, sessionTokenOneOf6.emailAddress) &&
        Objects.equals(this.walletName, sessionTokenOneOf6.walletName);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(clientId, clientName, clientProfileId, transactionCurrencyCode, transactionAmount, hashCodeNullable(emailAddress), walletName);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SessionTokenOneOf6 {\n");
    sb.append("    clientId: ").append(toIndentedString(clientId)).append("\n");
    sb.append("    clientName: ").append(toIndentedString(clientName)).append("\n");
    sb.append("    clientProfileId: ").append(toIndentedString(clientProfileId)).append("\n");
    sb.append("    transactionCurrencyCode: ").append(toIndentedString(transactionCurrencyCode)).append("\n");
    sb.append("    transactionAmount: ").append(toIndentedString(transactionAmount)).append("\n");
    sb.append("    emailAddress: ").append(toIndentedString(emailAddress)).append("\n");
    sb.append("    walletName: ").append(toIndentedString(walletName)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

