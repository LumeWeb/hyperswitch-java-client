/*
 * Hyperswitch - API Documentation
 *  ## Get started  Hyperswitch provides a collection of APIs that enable you to process and manage payments. Our APIs accept and return JSON in the HTTP body, and return standard HTTP response codes.  You can consume the APIs directly using your favorite HTTP/REST library.  We have a testing environment referred to \"sandbox\", which you can setup to test API calls without affecting production data. Currently, our sandbox environment is live while our production environment is under development and will be available soon. You can sign up on our Dashboard to get API keys to access Hyperswitch API.  ### Environment  Use the following base URLs when making requests to the APIs:  | Environment   |  Base URL                          | |---------------|------------------------------------| | Sandbox       | <https://sandbox.hyperswitch.io>   | | Production    | <https://api.hyperswitch.io>       |  ## Authentication  When you sign up on our [dashboard](https://app.hyperswitch.io) and create a merchant account, you are given a secret key (also referred as api-key) and a publishable key. You may authenticate all API requests with Hyperswitch server by providing the appropriate key in the request Authorization header.  | Key             |  Description                                                                                  | |-----------------|-----------------------------------------------------------------------------------------------| | api-key         | Private key. Used to authenticate all API requests from your merchant server                  | | publishable key | Unique identifier for your account. Used to authenticate API requests from your app's client  |  Never share your secret api keys. Keep them guarded and secure. 
 *
 * The version of the OpenAPI document: 0.1.0
 * Contact: hyperswitch@juspay.in
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.hyperswitch.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.hyperswitch.model.CustomerPaymentMethodBank;
import com.hyperswitch.model.CustomerPaymentMethodBankTransfer;
import com.hyperswitch.model.CustomerPaymentMethodBilling;
import com.hyperswitch.model.CustomerPaymentMethodCard;
import com.hyperswitch.model.CustomerPaymentMethodSurchargeDetails;
import com.hyperswitch.model.PaymentExperience;
import com.hyperswitch.model.PaymentMethod;
import com.hyperswitch.model.PaymentMethodIssuerCode;
import com.hyperswitch.model.PaymentMethodType;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.List;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * CustomerPaymentMethod
 */
@JsonPropertyOrder({
  CustomerPaymentMethod.JSON_PROPERTY_PAYMENT_TOKEN,
  CustomerPaymentMethod.JSON_PROPERTY_PAYMENT_METHOD_ID,
  CustomerPaymentMethod.JSON_PROPERTY_CUSTOMER_ID,
  CustomerPaymentMethod.JSON_PROPERTY_PAYMENT_METHOD,
  CustomerPaymentMethod.JSON_PROPERTY_PAYMENT_METHOD_TYPE,
  CustomerPaymentMethod.JSON_PROPERTY_PAYMENT_METHOD_ISSUER,
  CustomerPaymentMethod.JSON_PROPERTY_PAYMENT_METHOD_ISSUER_CODE,
  CustomerPaymentMethod.JSON_PROPERTY_RECURRING_ENABLED,
  CustomerPaymentMethod.JSON_PROPERTY_INSTALLMENT_PAYMENT_ENABLED,
  CustomerPaymentMethod.JSON_PROPERTY_PAYMENT_EXPERIENCE,
  CustomerPaymentMethod.JSON_PROPERTY_CARD,
  CustomerPaymentMethod.JSON_PROPERTY_METADATA,
  CustomerPaymentMethod.JSON_PROPERTY_CREATED,
  CustomerPaymentMethod.JSON_PROPERTY_BANK_TRANSFER,
  CustomerPaymentMethod.JSON_PROPERTY_BANK,
  CustomerPaymentMethod.JSON_PROPERTY_SURCHARGE_DETAILS,
  CustomerPaymentMethod.JSON_PROPERTY_REQUIRES_CVV,
  CustomerPaymentMethod.JSON_PROPERTY_LAST_USED_AT,
  CustomerPaymentMethod.JSON_PROPERTY_DEFAULT_PAYMENT_METHOD_SET,
  CustomerPaymentMethod.JSON_PROPERTY_BILLING
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class CustomerPaymentMethod {
  public static final String JSON_PROPERTY_PAYMENT_TOKEN = "payment_token";
  private String paymentToken;

  public static final String JSON_PROPERTY_PAYMENT_METHOD_ID = "payment_method_id";
  private String paymentMethodId;

  public static final String JSON_PROPERTY_CUSTOMER_ID = "customer_id";
  private String customerId;

  public static final String JSON_PROPERTY_PAYMENT_METHOD = "payment_method";
  private PaymentMethod paymentMethod;

  public static final String JSON_PROPERTY_PAYMENT_METHOD_TYPE = "payment_method_type";
  private JsonNullable<PaymentMethodType> paymentMethodType = JsonNullable.<PaymentMethodType>undefined();

  public static final String JSON_PROPERTY_PAYMENT_METHOD_ISSUER = "payment_method_issuer";
  private JsonNullable<String> paymentMethodIssuer = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_PAYMENT_METHOD_ISSUER_CODE = "payment_method_issuer_code";
  private JsonNullable<PaymentMethodIssuerCode> paymentMethodIssuerCode = JsonNullable.<PaymentMethodIssuerCode>undefined();

  public static final String JSON_PROPERTY_RECURRING_ENABLED = "recurring_enabled";
  private Boolean recurringEnabled;

  public static final String JSON_PROPERTY_INSTALLMENT_PAYMENT_ENABLED = "installment_payment_enabled";
  private Boolean installmentPaymentEnabled;

  public static final String JSON_PROPERTY_PAYMENT_EXPERIENCE = "payment_experience";
  private JsonNullable<List<PaymentExperience>> paymentExperience = JsonNullable.<List<PaymentExperience>>undefined();

  public static final String JSON_PROPERTY_CARD = "card";
  private JsonNullable<CustomerPaymentMethodCard> card = JsonNullable.<CustomerPaymentMethodCard>undefined();

  public static final String JSON_PROPERTY_METADATA = "metadata";
  private JsonNullable<Object> metadata = JsonNullable.<Object>undefined();

  public static final String JSON_PROPERTY_CREATED = "created";
  private JsonNullable<OffsetDateTime> created = JsonNullable.<OffsetDateTime>undefined();

  public static final String JSON_PROPERTY_BANK_TRANSFER = "bank_transfer";
  private JsonNullable<CustomerPaymentMethodBankTransfer> bankTransfer = JsonNullable.<CustomerPaymentMethodBankTransfer>undefined();

  public static final String JSON_PROPERTY_BANK = "bank";
  private JsonNullable<CustomerPaymentMethodBank> bank = JsonNullable.<CustomerPaymentMethodBank>undefined();

  public static final String JSON_PROPERTY_SURCHARGE_DETAILS = "surcharge_details";
  private JsonNullable<CustomerPaymentMethodSurchargeDetails> surchargeDetails = JsonNullable.<CustomerPaymentMethodSurchargeDetails>undefined();

  public static final String JSON_PROPERTY_REQUIRES_CVV = "requires_cvv";
  private Boolean requiresCvv;

  public static final String JSON_PROPERTY_LAST_USED_AT = "last_used_at";
  private JsonNullable<OffsetDateTime> lastUsedAt = JsonNullable.<OffsetDateTime>undefined();

  public static final String JSON_PROPERTY_DEFAULT_PAYMENT_METHOD_SET = "default_payment_method_set";
  private Boolean defaultPaymentMethodSet;

  public static final String JSON_PROPERTY_BILLING = "billing";
  private JsonNullable<CustomerPaymentMethodBilling> billing = JsonNullable.<CustomerPaymentMethodBilling>undefined();

  public CustomerPaymentMethod() { 
  }

  public CustomerPaymentMethod paymentToken(String paymentToken) {
    
    this.paymentToken = paymentToken;
    return this;
  }

   /**
   * Token for payment method in temporary card locker which gets refreshed often
   * @return paymentToken
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "7ebf443f-a050-4067-84e5-e6f6d4800aef", required = true, value = "Token for payment method in temporary card locker which gets refreshed often")
  @JsonProperty(JSON_PROPERTY_PAYMENT_TOKEN)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getPaymentToken() {
    return paymentToken;
  }


  @JsonProperty(JSON_PROPERTY_PAYMENT_TOKEN)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setPaymentToken(String paymentToken) {
    this.paymentToken = paymentToken;
  }


  public CustomerPaymentMethod paymentMethodId(String paymentMethodId) {
    
    this.paymentMethodId = paymentMethodId;
    return this;
  }

   /**
   * The unique identifier of the customer.
   * @return paymentMethodId
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "pm_iouuy468iyuowqs", required = true, value = "The unique identifier of the customer.")
  @JsonProperty(JSON_PROPERTY_PAYMENT_METHOD_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getPaymentMethodId() {
    return paymentMethodId;
  }


  @JsonProperty(JSON_PROPERTY_PAYMENT_METHOD_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setPaymentMethodId(String paymentMethodId) {
    this.paymentMethodId = paymentMethodId;
  }


  public CustomerPaymentMethod customerId(String customerId) {
    
    this.customerId = customerId;
    return this;
  }

   /**
   * The unique identifier of the customer.
   * @return customerId
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "cus_y3oqhf46pyzuxjbcn2giaqnb44", required = true, value = "The unique identifier of the customer.")
  @JsonProperty(JSON_PROPERTY_CUSTOMER_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getCustomerId() {
    return customerId;
  }


  @JsonProperty(JSON_PROPERTY_CUSTOMER_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setCustomerId(String customerId) {
    this.customerId = customerId;
  }


  public CustomerPaymentMethod paymentMethod(PaymentMethod paymentMethod) {
    
    this.paymentMethod = paymentMethod;
    return this;
  }

   /**
   * Get paymentMethod
   * @return paymentMethod
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_PAYMENT_METHOD)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public PaymentMethod getPaymentMethod() {
    return paymentMethod;
  }


  @JsonProperty(JSON_PROPERTY_PAYMENT_METHOD)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setPaymentMethod(PaymentMethod paymentMethod) {
    this.paymentMethod = paymentMethod;
  }


  public CustomerPaymentMethod paymentMethodType(PaymentMethodType paymentMethodType) {
    this.paymentMethodType = JsonNullable.<PaymentMethodType>of(paymentMethodType);
    
    return this;
  }

   /**
   * Get paymentMethodType
   * @return paymentMethodType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public PaymentMethodType getPaymentMethodType() {
        return paymentMethodType.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PAYMENT_METHOD_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<PaymentMethodType> getPaymentMethodType_JsonNullable() {
    return paymentMethodType;
  }
  
  @JsonProperty(JSON_PROPERTY_PAYMENT_METHOD_TYPE)
  public void setPaymentMethodType_JsonNullable(JsonNullable<PaymentMethodType> paymentMethodType) {
    this.paymentMethodType = paymentMethodType;
  }

  public void setPaymentMethodType(PaymentMethodType paymentMethodType) {
    this.paymentMethodType = JsonNullable.<PaymentMethodType>of(paymentMethodType);
  }


  public CustomerPaymentMethod paymentMethodIssuer(String paymentMethodIssuer) {
    this.paymentMethodIssuer = JsonNullable.<String>of(paymentMethodIssuer);
    
    return this;
  }

   /**
   * The name of the bank/ provider issuing the payment method to the end user
   * @return paymentMethodIssuer
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Citibank", value = "The name of the bank/ provider issuing the payment method to the end user")
  @JsonIgnore

  public String getPaymentMethodIssuer() {
        return paymentMethodIssuer.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PAYMENT_METHOD_ISSUER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getPaymentMethodIssuer_JsonNullable() {
    return paymentMethodIssuer;
  }
  
  @JsonProperty(JSON_PROPERTY_PAYMENT_METHOD_ISSUER)
  public void setPaymentMethodIssuer_JsonNullable(JsonNullable<String> paymentMethodIssuer) {
    this.paymentMethodIssuer = paymentMethodIssuer;
  }

  public void setPaymentMethodIssuer(String paymentMethodIssuer) {
    this.paymentMethodIssuer = JsonNullable.<String>of(paymentMethodIssuer);
  }


  public CustomerPaymentMethod paymentMethodIssuerCode(PaymentMethodIssuerCode paymentMethodIssuerCode) {
    this.paymentMethodIssuerCode = JsonNullable.<PaymentMethodIssuerCode>of(paymentMethodIssuerCode);
    
    return this;
  }

   /**
   * Get paymentMethodIssuerCode
   * @return paymentMethodIssuerCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public PaymentMethodIssuerCode getPaymentMethodIssuerCode() {
        return paymentMethodIssuerCode.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PAYMENT_METHOD_ISSUER_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<PaymentMethodIssuerCode> getPaymentMethodIssuerCode_JsonNullable() {
    return paymentMethodIssuerCode;
  }
  
  @JsonProperty(JSON_PROPERTY_PAYMENT_METHOD_ISSUER_CODE)
  public void setPaymentMethodIssuerCode_JsonNullable(JsonNullable<PaymentMethodIssuerCode> paymentMethodIssuerCode) {
    this.paymentMethodIssuerCode = paymentMethodIssuerCode;
  }

  public void setPaymentMethodIssuerCode(PaymentMethodIssuerCode paymentMethodIssuerCode) {
    this.paymentMethodIssuerCode = JsonNullable.<PaymentMethodIssuerCode>of(paymentMethodIssuerCode);
  }


  public CustomerPaymentMethod recurringEnabled(Boolean recurringEnabled) {
    
    this.recurringEnabled = recurringEnabled;
    return this;
  }

   /**
   * Indicates whether the payment method is eligible for recurring payments
   * @return recurringEnabled
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "true", required = true, value = "Indicates whether the payment method is eligible for recurring payments")
  @JsonProperty(JSON_PROPERTY_RECURRING_ENABLED)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Boolean getRecurringEnabled() {
    return recurringEnabled;
  }


  @JsonProperty(JSON_PROPERTY_RECURRING_ENABLED)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setRecurringEnabled(Boolean recurringEnabled) {
    this.recurringEnabled = recurringEnabled;
  }


  public CustomerPaymentMethod installmentPaymentEnabled(Boolean installmentPaymentEnabled) {
    
    this.installmentPaymentEnabled = installmentPaymentEnabled;
    return this;
  }

   /**
   * Indicates whether the payment method is eligible for installment payments
   * @return installmentPaymentEnabled
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "true", required = true, value = "Indicates whether the payment method is eligible for installment payments")
  @JsonProperty(JSON_PROPERTY_INSTALLMENT_PAYMENT_ENABLED)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Boolean getInstallmentPaymentEnabled() {
    return installmentPaymentEnabled;
  }


  @JsonProperty(JSON_PROPERTY_INSTALLMENT_PAYMENT_ENABLED)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setInstallmentPaymentEnabled(Boolean installmentPaymentEnabled) {
    this.installmentPaymentEnabled = installmentPaymentEnabled;
  }


  public CustomerPaymentMethod paymentExperience(List<PaymentExperience> paymentExperience) {
    this.paymentExperience = JsonNullable.<List<PaymentExperience>>of(paymentExperience);
    
    return this;
  }

  public CustomerPaymentMethod addPaymentExperienceItem(PaymentExperience paymentExperienceItem) {
    if (this.paymentExperience == null || !this.paymentExperience.isPresent()) {
      this.paymentExperience = JsonNullable.<List<PaymentExperience>>of(new ArrayList<>());
    }
    try {
      this.paymentExperience.get().add(paymentExperienceItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Type of payment experience enabled with the connector
   * @return paymentExperience
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "[\"redirect_to_url\"]", value = "Type of payment experience enabled with the connector")
  @JsonIgnore

  public List<PaymentExperience> getPaymentExperience() {
        return paymentExperience.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PAYMENT_EXPERIENCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<PaymentExperience>> getPaymentExperience_JsonNullable() {
    return paymentExperience;
  }
  
  @JsonProperty(JSON_PROPERTY_PAYMENT_EXPERIENCE)
  public void setPaymentExperience_JsonNullable(JsonNullable<List<PaymentExperience>> paymentExperience) {
    this.paymentExperience = paymentExperience;
  }

  public void setPaymentExperience(List<PaymentExperience> paymentExperience) {
    this.paymentExperience = JsonNullable.<List<PaymentExperience>>of(paymentExperience);
  }


  public CustomerPaymentMethod card(CustomerPaymentMethodCard card) {
    this.card = JsonNullable.<CustomerPaymentMethodCard>of(card);
    
    return this;
  }

   /**
   * Get card
   * @return card
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public CustomerPaymentMethodCard getCard() {
        return card.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_CARD)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<CustomerPaymentMethodCard> getCard_JsonNullable() {
    return card;
  }
  
  @JsonProperty(JSON_PROPERTY_CARD)
  public void setCard_JsonNullable(JsonNullable<CustomerPaymentMethodCard> card) {
    this.card = card;
  }

  public void setCard(CustomerPaymentMethodCard card) {
    this.card = JsonNullable.<CustomerPaymentMethodCard>of(card);
  }


  public CustomerPaymentMethod metadata(Object metadata) {
    this.metadata = JsonNullable.<Object>of(metadata);
    
    return this;
  }

   /**
   * You can specify up to 50 keys, with key names up to 40 characters long and values up to 500 characters long. Metadata is useful for storing additional, structured information on an object.
   * @return metadata
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "You can specify up to 50 keys, with key names up to 40 characters long and values up to 500 characters long. Metadata is useful for storing additional, structured information on an object.")
  @JsonIgnore

  public Object getMetadata() {
        return metadata.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_METADATA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Object> getMetadata_JsonNullable() {
    return metadata;
  }
  
  @JsonProperty(JSON_PROPERTY_METADATA)
  public void setMetadata_JsonNullable(JsonNullable<Object> metadata) {
    this.metadata = metadata;
  }

  public void setMetadata(Object metadata) {
    this.metadata = JsonNullable.<Object>of(metadata);
  }


  public CustomerPaymentMethod created(OffsetDateTime created) {
    this.created = JsonNullable.<OffsetDateTime>of(created);
    
    return this;
  }

   /**
   * A timestamp (ISO 8601 code) that determines when the customer was created
   * @return created
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "2023-01-18T11:04:09.922Z", value = "A timestamp (ISO 8601 code) that determines when the customer was created")
  @JsonIgnore

  public OffsetDateTime getCreated() {
        return created.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_CREATED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<OffsetDateTime> getCreated_JsonNullable() {
    return created;
  }
  
  @JsonProperty(JSON_PROPERTY_CREATED)
  public void setCreated_JsonNullable(JsonNullable<OffsetDateTime> created) {
    this.created = created;
  }

  public void setCreated(OffsetDateTime created) {
    this.created = JsonNullable.<OffsetDateTime>of(created);
  }


  public CustomerPaymentMethod bankTransfer(CustomerPaymentMethodBankTransfer bankTransfer) {
    this.bankTransfer = JsonNullable.<CustomerPaymentMethodBankTransfer>of(bankTransfer);
    
    return this;
  }

   /**
   * Get bankTransfer
   * @return bankTransfer
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public CustomerPaymentMethodBankTransfer getBankTransfer() {
        return bankTransfer.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_BANK_TRANSFER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<CustomerPaymentMethodBankTransfer> getBankTransfer_JsonNullable() {
    return bankTransfer;
  }
  
  @JsonProperty(JSON_PROPERTY_BANK_TRANSFER)
  public void setBankTransfer_JsonNullable(JsonNullable<CustomerPaymentMethodBankTransfer> bankTransfer) {
    this.bankTransfer = bankTransfer;
  }

  public void setBankTransfer(CustomerPaymentMethodBankTransfer bankTransfer) {
    this.bankTransfer = JsonNullable.<CustomerPaymentMethodBankTransfer>of(bankTransfer);
  }


  public CustomerPaymentMethod bank(CustomerPaymentMethodBank bank) {
    this.bank = JsonNullable.<CustomerPaymentMethodBank>of(bank);
    
    return this;
  }

   /**
   * Get bank
   * @return bank
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public CustomerPaymentMethodBank getBank() {
        return bank.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_BANK)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<CustomerPaymentMethodBank> getBank_JsonNullable() {
    return bank;
  }
  
  @JsonProperty(JSON_PROPERTY_BANK)
  public void setBank_JsonNullable(JsonNullable<CustomerPaymentMethodBank> bank) {
    this.bank = bank;
  }

  public void setBank(CustomerPaymentMethodBank bank) {
    this.bank = JsonNullable.<CustomerPaymentMethodBank>of(bank);
  }


  public CustomerPaymentMethod surchargeDetails(CustomerPaymentMethodSurchargeDetails surchargeDetails) {
    this.surchargeDetails = JsonNullable.<CustomerPaymentMethodSurchargeDetails>of(surchargeDetails);
    
    return this;
  }

   /**
   * Get surchargeDetails
   * @return surchargeDetails
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public CustomerPaymentMethodSurchargeDetails getSurchargeDetails() {
        return surchargeDetails.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_SURCHARGE_DETAILS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<CustomerPaymentMethodSurchargeDetails> getSurchargeDetails_JsonNullable() {
    return surchargeDetails;
  }
  
  @JsonProperty(JSON_PROPERTY_SURCHARGE_DETAILS)
  public void setSurchargeDetails_JsonNullable(JsonNullable<CustomerPaymentMethodSurchargeDetails> surchargeDetails) {
    this.surchargeDetails = surchargeDetails;
  }

  public void setSurchargeDetails(CustomerPaymentMethodSurchargeDetails surchargeDetails) {
    this.surchargeDetails = JsonNullable.<CustomerPaymentMethodSurchargeDetails>of(surchargeDetails);
  }


  public CustomerPaymentMethod requiresCvv(Boolean requiresCvv) {
    
    this.requiresCvv = requiresCvv;
    return this;
  }

   /**
   * Whether this payment method requires CVV to be collected
   * @return requiresCvv
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "true", required = true, value = "Whether this payment method requires CVV to be collected")
  @JsonProperty(JSON_PROPERTY_REQUIRES_CVV)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Boolean getRequiresCvv() {
    return requiresCvv;
  }


  @JsonProperty(JSON_PROPERTY_REQUIRES_CVV)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setRequiresCvv(Boolean requiresCvv) {
    this.requiresCvv = requiresCvv;
  }


  public CustomerPaymentMethod lastUsedAt(OffsetDateTime lastUsedAt) {
    this.lastUsedAt = JsonNullable.<OffsetDateTime>of(lastUsedAt);
    
    return this;
  }

   /**
   * A timestamp (ISO 8601 code) that determines when the payment method was last used
   * @return lastUsedAt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "2024-02-24T11:04:09.922Z", value = "A timestamp (ISO 8601 code) that determines when the payment method was last used")
  @JsonIgnore

  public OffsetDateTime getLastUsedAt() {
        return lastUsedAt.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LAST_USED_AT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<OffsetDateTime> getLastUsedAt_JsonNullable() {
    return lastUsedAt;
  }
  
  @JsonProperty(JSON_PROPERTY_LAST_USED_AT)
  public void setLastUsedAt_JsonNullable(JsonNullable<OffsetDateTime> lastUsedAt) {
    this.lastUsedAt = lastUsedAt;
  }

  public void setLastUsedAt(OffsetDateTime lastUsedAt) {
    this.lastUsedAt = JsonNullable.<OffsetDateTime>of(lastUsedAt);
  }


  public CustomerPaymentMethod defaultPaymentMethodSet(Boolean defaultPaymentMethodSet) {
    
    this.defaultPaymentMethodSet = defaultPaymentMethodSet;
    return this;
  }

   /**
   * Indicates if the payment method has been set to default or not
   * @return defaultPaymentMethodSet
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "true", required = true, value = "Indicates if the payment method has been set to default or not")
  @JsonProperty(JSON_PROPERTY_DEFAULT_PAYMENT_METHOD_SET)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Boolean getDefaultPaymentMethodSet() {
    return defaultPaymentMethodSet;
  }


  @JsonProperty(JSON_PROPERTY_DEFAULT_PAYMENT_METHOD_SET)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setDefaultPaymentMethodSet(Boolean defaultPaymentMethodSet) {
    this.defaultPaymentMethodSet = defaultPaymentMethodSet;
  }


  public CustomerPaymentMethod billing(CustomerPaymentMethodBilling billing) {
    this.billing = JsonNullable.<CustomerPaymentMethodBilling>of(billing);
    
    return this;
  }

   /**
   * Get billing
   * @return billing
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public CustomerPaymentMethodBilling getBilling() {
        return billing.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_BILLING)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<CustomerPaymentMethodBilling> getBilling_JsonNullable() {
    return billing;
  }
  
  @JsonProperty(JSON_PROPERTY_BILLING)
  public void setBilling_JsonNullable(JsonNullable<CustomerPaymentMethodBilling> billing) {
    this.billing = billing;
  }

  public void setBilling(CustomerPaymentMethodBilling billing) {
    this.billing = JsonNullable.<CustomerPaymentMethodBilling>of(billing);
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CustomerPaymentMethod customerPaymentMethod = (CustomerPaymentMethod) o;
    return Objects.equals(this.paymentToken, customerPaymentMethod.paymentToken) &&
        Objects.equals(this.paymentMethodId, customerPaymentMethod.paymentMethodId) &&
        Objects.equals(this.customerId, customerPaymentMethod.customerId) &&
        Objects.equals(this.paymentMethod, customerPaymentMethod.paymentMethod) &&
        equalsNullable(this.paymentMethodType, customerPaymentMethod.paymentMethodType) &&
        equalsNullable(this.paymentMethodIssuer, customerPaymentMethod.paymentMethodIssuer) &&
        equalsNullable(this.paymentMethodIssuerCode, customerPaymentMethod.paymentMethodIssuerCode) &&
        Objects.equals(this.recurringEnabled, customerPaymentMethod.recurringEnabled) &&
        Objects.equals(this.installmentPaymentEnabled, customerPaymentMethod.installmentPaymentEnabled) &&
        equalsNullable(this.paymentExperience, customerPaymentMethod.paymentExperience) &&
        equalsNullable(this.card, customerPaymentMethod.card) &&
        equalsNullable(this.metadata, customerPaymentMethod.metadata) &&
        equalsNullable(this.created, customerPaymentMethod.created) &&
        equalsNullable(this.bankTransfer, customerPaymentMethod.bankTransfer) &&
        equalsNullable(this.bank, customerPaymentMethod.bank) &&
        equalsNullable(this.surchargeDetails, customerPaymentMethod.surchargeDetails) &&
        Objects.equals(this.requiresCvv, customerPaymentMethod.requiresCvv) &&
        equalsNullable(this.lastUsedAt, customerPaymentMethod.lastUsedAt) &&
        Objects.equals(this.defaultPaymentMethodSet, customerPaymentMethod.defaultPaymentMethodSet) &&
        equalsNullable(this.billing, customerPaymentMethod.billing);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(paymentToken, paymentMethodId, customerId, paymentMethod, hashCodeNullable(paymentMethodType), hashCodeNullable(paymentMethodIssuer), hashCodeNullable(paymentMethodIssuerCode), recurringEnabled, installmentPaymentEnabled, hashCodeNullable(paymentExperience), hashCodeNullable(card), hashCodeNullable(metadata), hashCodeNullable(created), hashCodeNullable(bankTransfer), hashCodeNullable(bank), hashCodeNullable(surchargeDetails), requiresCvv, hashCodeNullable(lastUsedAt), defaultPaymentMethodSet, hashCodeNullable(billing));
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CustomerPaymentMethod {\n");
    sb.append("    paymentToken: ").append(toIndentedString(paymentToken)).append("\n");
    sb.append("    paymentMethodId: ").append(toIndentedString(paymentMethodId)).append("\n");
    sb.append("    customerId: ").append(toIndentedString(customerId)).append("\n");
    sb.append("    paymentMethod: ").append(toIndentedString(paymentMethod)).append("\n");
    sb.append("    paymentMethodType: ").append(toIndentedString(paymentMethodType)).append("\n");
    sb.append("    paymentMethodIssuer: ").append(toIndentedString(paymentMethodIssuer)).append("\n");
    sb.append("    paymentMethodIssuerCode: ").append(toIndentedString(paymentMethodIssuerCode)).append("\n");
    sb.append("    recurringEnabled: ").append(toIndentedString(recurringEnabled)).append("\n");
    sb.append("    installmentPaymentEnabled: ").append(toIndentedString(installmentPaymentEnabled)).append("\n");
    sb.append("    paymentExperience: ").append(toIndentedString(paymentExperience)).append("\n");
    sb.append("    card: ").append(toIndentedString(card)).append("\n");
    sb.append("    metadata: ").append(toIndentedString(metadata)).append("\n");
    sb.append("    created: ").append(toIndentedString(created)).append("\n");
    sb.append("    bankTransfer: ").append(toIndentedString(bankTransfer)).append("\n");
    sb.append("    bank: ").append(toIndentedString(bank)).append("\n");
    sb.append("    surchargeDetails: ").append(toIndentedString(surchargeDetails)).append("\n");
    sb.append("    requiresCvv: ").append(toIndentedString(requiresCvv)).append("\n");
    sb.append("    lastUsedAt: ").append(toIndentedString(lastUsedAt)).append("\n");
    sb.append("    defaultPaymentMethodSet: ").append(toIndentedString(defaultPaymentMethodSet)).append("\n");
    sb.append("    billing: ").append(toIndentedString(billing)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

