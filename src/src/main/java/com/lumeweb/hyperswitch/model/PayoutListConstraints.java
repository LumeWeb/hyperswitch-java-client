/*
 * Hyperswitch - API Documentation
 *  ## Get started  Hyperswitch provides a collection of APIs that enable you to process and manage payments. Our APIs accept and return JSON in the HTTP body, and return standard HTTP response codes.  You can consume the APIs directly using your favorite HTTP/REST library.  We have a testing environment referred to \"sandbox\", which you can setup to test API calls without affecting production data. Currently, our sandbox environment is live while our production environment is under development and will be available soon. You can sign up on our Dashboard to get API keys to access Hyperswitch API.  ### Environment  Use the following base URLs when making requests to the APIs:  | Environment   |  Base URL                          | |---------------|------------------------------------| | Sandbox       | <https://sandbox.hyperswitch.io>   | | Production    | <https://api.hyperswitch.io>       |  ## Authentication  When you sign up on our [dashboard](https://app.hyperswitch.io) and create a merchant account, you are given a secret key (also referred as api-key) and a publishable key. You may authenticate all API requests with Hyperswitch server by providing the appropriate key in the request Authorization header.  | Key             |  Description                                                                                  | |-----------------|-----------------------------------------------------------------------------------------------| | api-key         | Private key. Used to authenticate all API requests from your merchant server                  | | publishable key | Unique identifier for your account. Used to authenticate API requests from your app's client  |  Never share your secret api keys. Keep them guarded and secure. 
 *
 * The version of the OpenAPI document: 0.1.0
 * Contact: hyperswitch@juspay.in
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.lumeweb.hyperswitch.model;

import java.net.URLEncoder;
import java.nio.charset.StandardCharsets;
import java.util.StringJoiner;
import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


import com.lumeweb.hyperswitch.client.ApiClient;
/**
 * PayoutListConstraints
 */
@JsonPropertyOrder({
  PayoutListConstraints.JSON_PROPERTY_START_TIME,
  PayoutListConstraints.JSON_PROPERTY_END_TIME,
  PayoutListConstraints.JSON_PROPERTY_CUSTOMER_ID,
  PayoutListConstraints.JSON_PROPERTY_STARTING_AFTER,
  PayoutListConstraints.JSON_PROPERTY_ENDING_BEFORE,
  PayoutListConstraints.JSON_PROPERTY_LIMIT,
  PayoutListConstraints.JSON_PROPERTY_CREATED
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.11.0-SNAPSHOT")
public class PayoutListConstraints {
  public static final String JSON_PROPERTY_START_TIME = "start_time";
  @javax.annotation.Nonnull
  private OffsetDateTime startTime;

  public static final String JSON_PROPERTY_END_TIME = "end_time";
  private JsonNullable<OffsetDateTime> endTime = JsonNullable.<OffsetDateTime>undefined();

  public static final String JSON_PROPERTY_CUSTOMER_ID = "customer_id";
  private JsonNullable<String> customerId = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_STARTING_AFTER = "starting_after";
  private JsonNullable<String> startingAfter = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ENDING_BEFORE = "ending_before";
  private JsonNullable<String> endingBefore = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_LIMIT = "limit";
  @javax.annotation.Nullable
  private Integer limit = 10;

  public static final String JSON_PROPERTY_CREATED = "created";
  private JsonNullable<OffsetDateTime> created = JsonNullable.<OffsetDateTime>undefined();

  public PayoutListConstraints() { 
  }

  public PayoutListConstraints startTime(@javax.annotation.Nonnull OffsetDateTime startTime) {
    this.startTime = startTime;
    return this;
  }

  /**
   * The start time to filter payments list or to get list of filters. To get list of filters start time is needed to be passed
   * @return startTime
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_START_TIME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public OffsetDateTime getStartTime() {
    return startTime;
  }


  @JsonProperty(JSON_PROPERTY_START_TIME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setStartTime(@javax.annotation.Nonnull OffsetDateTime startTime) {
    this.startTime = startTime;
  }


  public PayoutListConstraints endTime(@javax.annotation.Nullable OffsetDateTime endTime) {
    this.endTime = JsonNullable.<OffsetDateTime>of(endTime);
    return this;
  }

  /**
   * The end time to filter payments list or to get list of filters. If not passed the default time is now
   * @return endTime
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public OffsetDateTime getEndTime() {
        return endTime.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_END_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<OffsetDateTime> getEndTime_JsonNullable() {
    return endTime;
  }
  
  @JsonProperty(JSON_PROPERTY_END_TIME)
  public void setEndTime_JsonNullable(JsonNullable<OffsetDateTime> endTime) {
    this.endTime = endTime;
  }

  public void setEndTime(@javax.annotation.Nullable OffsetDateTime endTime) {
    this.endTime = JsonNullable.<OffsetDateTime>of(endTime);
  }


  public PayoutListConstraints customerId(@javax.annotation.Nullable String customerId) {
    this.customerId = JsonNullable.<String>of(customerId);
    return this;
  }

  /**
   * The identifier for customer
   * @return customerId
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public String getCustomerId() {
        return customerId.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_CUSTOMER_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getCustomerId_JsonNullable() {
    return customerId;
  }
  
  @JsonProperty(JSON_PROPERTY_CUSTOMER_ID)
  public void setCustomerId_JsonNullable(JsonNullable<String> customerId) {
    this.customerId = customerId;
  }

  public void setCustomerId(@javax.annotation.Nullable String customerId) {
    this.customerId = JsonNullable.<String>of(customerId);
  }


  public PayoutListConstraints startingAfter(@javax.annotation.Nullable String startingAfter) {
    this.startingAfter = JsonNullable.<String>of(startingAfter);
    return this;
  }

  /**
   * A cursor for use in pagination, fetch the next list after some object
   * @return startingAfter
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public String getStartingAfter() {
        return startingAfter.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_STARTING_AFTER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getStartingAfter_JsonNullable() {
    return startingAfter;
  }
  
  @JsonProperty(JSON_PROPERTY_STARTING_AFTER)
  public void setStartingAfter_JsonNullable(JsonNullable<String> startingAfter) {
    this.startingAfter = startingAfter;
  }

  public void setStartingAfter(@javax.annotation.Nullable String startingAfter) {
    this.startingAfter = JsonNullable.<String>of(startingAfter);
  }


  public PayoutListConstraints endingBefore(@javax.annotation.Nullable String endingBefore) {
    this.endingBefore = JsonNullable.<String>of(endingBefore);
    return this;
  }

  /**
   * A cursor for use in pagination, fetch the previous list before some object
   * @return endingBefore
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public String getEndingBefore() {
        return endingBefore.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ENDING_BEFORE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getEndingBefore_JsonNullable() {
    return endingBefore;
  }
  
  @JsonProperty(JSON_PROPERTY_ENDING_BEFORE)
  public void setEndingBefore_JsonNullable(JsonNullable<String> endingBefore) {
    this.endingBefore = endingBefore;
  }

  public void setEndingBefore(@javax.annotation.Nullable String endingBefore) {
    this.endingBefore = JsonNullable.<String>of(endingBefore);
  }


  public PayoutListConstraints limit(@javax.annotation.Nullable Integer limit) {
    this.limit = limit;
    return this;
  }

  /**
   * limit on the number of objects to return
   * minimum: 0
   * maximum: 100
   * @return limit
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_LIMIT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public Integer getLimit() {
    return limit;
  }


  @JsonProperty(JSON_PROPERTY_LIMIT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLimit(@javax.annotation.Nullable Integer limit) {
    this.limit = limit;
  }


  public PayoutListConstraints created(@javax.annotation.Nullable OffsetDateTime created) {
    this.created = JsonNullable.<OffsetDateTime>of(created);
    return this;
  }

  /**
   * The time at which payout is created
   * @return created
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public OffsetDateTime getCreated() {
        return created.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_CREATED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<OffsetDateTime> getCreated_JsonNullable() {
    return created;
  }
  
  @JsonProperty(JSON_PROPERTY_CREATED)
  public void setCreated_JsonNullable(JsonNullable<OffsetDateTime> created) {
    this.created = created;
  }

  public void setCreated(@javax.annotation.Nullable OffsetDateTime created) {
    this.created = JsonNullable.<OffsetDateTime>of(created);
  }


  /**
   * Return true if this PayoutListConstraints object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PayoutListConstraints payoutListConstraints = (PayoutListConstraints) o;
    return Objects.equals(this.startTime, payoutListConstraints.startTime) &&
        equalsNullable(this.endTime, payoutListConstraints.endTime) &&
        equalsNullable(this.customerId, payoutListConstraints.customerId) &&
        equalsNullable(this.startingAfter, payoutListConstraints.startingAfter) &&
        equalsNullable(this.endingBefore, payoutListConstraints.endingBefore) &&
        Objects.equals(this.limit, payoutListConstraints.limit) &&
        equalsNullable(this.created, payoutListConstraints.created);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(startTime, hashCodeNullable(endTime), hashCodeNullable(customerId), hashCodeNullable(startingAfter), hashCodeNullable(endingBefore), limit, hashCodeNullable(created));
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PayoutListConstraints {\n");
    sb.append("    startTime: ").append(toIndentedString(startTime)).append("\n");
    sb.append("    endTime: ").append(toIndentedString(endTime)).append("\n");
    sb.append("    customerId: ").append(toIndentedString(customerId)).append("\n");
    sb.append("    startingAfter: ").append(toIndentedString(startingAfter)).append("\n");
    sb.append("    endingBefore: ").append(toIndentedString(endingBefore)).append("\n");
    sb.append("    limit: ").append(toIndentedString(limit)).append("\n");
    sb.append("    created: ").append(toIndentedString(created)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  /**
   * Convert the instance into URL query string.
   *
   * @return URL query string
   */
  public String toUrlQueryString() {
    return toUrlQueryString(null);
  }

  /**
   * Convert the instance into URL query string.
   *
   * @param prefix prefix of the query string
   * @return URL query string
   */
  public String toUrlQueryString(String prefix) {
    String suffix = "";
    String containerSuffix = "";
    String containerPrefix = "";
    if (prefix == null) {
      // style=form, explode=true, e.g. /pet?name=cat&type=manx
      prefix = "";
    } else {
      // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
      prefix = prefix + "[";
      suffix = "]";
      containerSuffix = "]";
      containerPrefix = "[";
    }

    StringJoiner joiner = new StringJoiner("&");

    // add `start_time` to the URL query string
    if (getStartTime() != null) {
      joiner.add(String.format("%sstart_time%s=%s", prefix, suffix, URLEncoder.encode(ApiClient.valueToString(getStartTime()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `end_time` to the URL query string
    if (getEndTime() != null) {
      joiner.add(String.format("%send_time%s=%s", prefix, suffix, URLEncoder.encode(ApiClient.valueToString(getEndTime()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `customer_id` to the URL query string
    if (getCustomerId() != null) {
      joiner.add(String.format("%scustomer_id%s=%s", prefix, suffix, URLEncoder.encode(ApiClient.valueToString(getCustomerId()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `starting_after` to the URL query string
    if (getStartingAfter() != null) {
      joiner.add(String.format("%sstarting_after%s=%s", prefix, suffix, URLEncoder.encode(ApiClient.valueToString(getStartingAfter()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `ending_before` to the URL query string
    if (getEndingBefore() != null) {
      joiner.add(String.format("%sending_before%s=%s", prefix, suffix, URLEncoder.encode(ApiClient.valueToString(getEndingBefore()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `limit` to the URL query string
    if (getLimit() != null) {
      joiner.add(String.format("%slimit%s=%s", prefix, suffix, URLEncoder.encode(ApiClient.valueToString(getLimit()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `created` to the URL query string
    if (getCreated() != null) {
      joiner.add(String.format("%screated%s=%s", prefix, suffix, URLEncoder.encode(ApiClient.valueToString(getCreated()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    return joiner.toString();
  }
}

