/*
 * Hyperswitch - API Documentation
 *  ## Get started  Hyperswitch provides a collection of APIs that enable you to process and manage payments. Our APIs accept and return JSON in the HTTP body, and return standard HTTP response codes.  You can consume the APIs directly using your favorite HTTP/REST library.  We have a testing environment referred to \"sandbox\", which you can setup to test API calls without affecting production data. Currently, our sandbox environment is live while our production environment is under development and will be available soon. You can sign up on our Dashboard to get API keys to access Hyperswitch API.  ### Environment  Use the following base URLs when making requests to the APIs:  | Environment   |  Base URL                          | |---------------|------------------------------------| | Sandbox       | <https://sandbox.hyperswitch.io>   | | Production    | <https://api.hyperswitch.io>       |  ## Authentication  When you sign up on our [dashboard](https://app.hyperswitch.io) and create a merchant account, you are given a secret key (also referred as api-key) and a publishable key. You may authenticate all API requests with Hyperswitch server by providing the appropriate key in the request Authorization header.  | Key             |  Description                                                                                  | |-----------------|-----------------------------------------------------------------------------------------------| | api-key         | Private key. Used to authenticate all API requests from your merchant server                  | | publishable key | Unique identifier for your account. Used to authenticate API requests from your app's client  |  Never share your secret api keys. Keep them guarded and secure. 
 *
 * The version of the OpenAPI document: 0.1.0
 * Contact: hyperswitch@juspay.in
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.hyperswitch.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.hyperswitch.model.GooglePaySessionResponse;
import com.hyperswitch.model.GooglePayThirdPartySdk;
import com.hyperswitch.model.GpayAllowedPaymentMethods;
import com.hyperswitch.model.GpayMerchantInfo;
import com.hyperswitch.model.GpayShippingAddressParameters;
import com.hyperswitch.model.GpayTransactionInfo;
import com.hyperswitch.model.SdkNextAction;
import com.hyperswitch.model.SecretInfoToInitiateSdk;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * GpaySessionTokenResponse
 */
@JsonPropertyOrder({
  GpaySessionTokenResponse.JSON_PROPERTY_DELAYED_SESSION_TOKEN,
  GpaySessionTokenResponse.JSON_PROPERTY_CONNECTOR,
  GpaySessionTokenResponse.JSON_PROPERTY_SDK_NEXT_ACTION,
  GpaySessionTokenResponse.JSON_PROPERTY_MERCHANT_INFO,
  GpaySessionTokenResponse.JSON_PROPERTY_SHIPPING_ADDRESS_REQUIRED,
  GpaySessionTokenResponse.JSON_PROPERTY_EMAIL_REQUIRED,
  GpaySessionTokenResponse.JSON_PROPERTY_SHIPPING_ADDRESS_PARAMETERS,
  GpaySessionTokenResponse.JSON_PROPERTY_ALLOWED_PAYMENT_METHODS,
  GpaySessionTokenResponse.JSON_PROPERTY_TRANSACTION_INFO,
  GpaySessionTokenResponse.JSON_PROPERTY_SECRETS
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.11.0-SNAPSHOT")
public class GpaySessionTokenResponse {
  public static final String JSON_PROPERTY_DELAYED_SESSION_TOKEN = "delayed_session_token";
  @javax.annotation.Nonnull
  private Boolean delayedSessionToken;

  public static final String JSON_PROPERTY_CONNECTOR = "connector";
  @javax.annotation.Nonnull
  private String connector;

  public static final String JSON_PROPERTY_SDK_NEXT_ACTION = "sdk_next_action";
  @javax.annotation.Nonnull
  private SdkNextAction sdkNextAction;

  public static final String JSON_PROPERTY_MERCHANT_INFO = "merchant_info";
  @javax.annotation.Nonnull
  private GpayMerchantInfo merchantInfo;

  public static final String JSON_PROPERTY_SHIPPING_ADDRESS_REQUIRED = "shipping_address_required";
  @javax.annotation.Nonnull
  private Boolean shippingAddressRequired;

  public static final String JSON_PROPERTY_EMAIL_REQUIRED = "email_required";
  @javax.annotation.Nonnull
  private Boolean emailRequired;

  public static final String JSON_PROPERTY_SHIPPING_ADDRESS_PARAMETERS = "shipping_address_parameters";
  @javax.annotation.Nonnull
  private GpayShippingAddressParameters shippingAddressParameters;

  public static final String JSON_PROPERTY_ALLOWED_PAYMENT_METHODS = "allowed_payment_methods";
  @javax.annotation.Nonnull
  private List<GpayAllowedPaymentMethods> allowedPaymentMethods = new ArrayList<>();

  public static final String JSON_PROPERTY_TRANSACTION_INFO = "transaction_info";
  @javax.annotation.Nonnull
  private GpayTransactionInfo transactionInfo;

  public static final String JSON_PROPERTY_SECRETS = "secrets";
  private JsonNullable<SecretInfoToInitiateSdk> secrets = JsonNullable.<SecretInfoToInitiateSdk>undefined();

  public GpaySessionTokenResponse() {
  }

  public GpaySessionTokenResponse delayedSessionToken(@javax.annotation.Nonnull Boolean delayedSessionToken) {
    
    this.delayedSessionToken = delayedSessionToken;
    return this;
  }

  /**
   * Identifier for the delayed session response
   * @return delayedSessionToken
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_DELAYED_SESSION_TOKEN)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Boolean getDelayedSessionToken() {
    return delayedSessionToken;
  }


  @JsonProperty(JSON_PROPERTY_DELAYED_SESSION_TOKEN)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setDelayedSessionToken(@javax.annotation.Nonnull Boolean delayedSessionToken) {
    this.delayedSessionToken = delayedSessionToken;
  }


  public GpaySessionTokenResponse connector(@javax.annotation.Nonnull String connector) {
    
    this.connector = connector;
    return this;
  }

  /**
   * The name of the connector
   * @return connector
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_CONNECTOR)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getConnector() {
    return connector;
  }


  @JsonProperty(JSON_PROPERTY_CONNECTOR)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setConnector(@javax.annotation.Nonnull String connector) {
    this.connector = connector;
  }


  public GpaySessionTokenResponse sdkNextAction(@javax.annotation.Nonnull SdkNextAction sdkNextAction) {
    
    this.sdkNextAction = sdkNextAction;
    return this;
  }

  /**
   * Get sdkNextAction
   * @return sdkNextAction
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_SDK_NEXT_ACTION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public SdkNextAction getSdkNextAction() {
    return sdkNextAction;
  }


  @JsonProperty(JSON_PROPERTY_SDK_NEXT_ACTION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setSdkNextAction(@javax.annotation.Nonnull SdkNextAction sdkNextAction) {
    this.sdkNextAction = sdkNextAction;
  }


  public GpaySessionTokenResponse merchantInfo(@javax.annotation.Nonnull GpayMerchantInfo merchantInfo) {
    
    this.merchantInfo = merchantInfo;
    return this;
  }

  /**
   * Get merchantInfo
   * @return merchantInfo
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_MERCHANT_INFO)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public GpayMerchantInfo getMerchantInfo() {
    return merchantInfo;
  }


  @JsonProperty(JSON_PROPERTY_MERCHANT_INFO)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setMerchantInfo(@javax.annotation.Nonnull GpayMerchantInfo merchantInfo) {
    this.merchantInfo = merchantInfo;
  }


  public GpaySessionTokenResponse shippingAddressRequired(@javax.annotation.Nonnull Boolean shippingAddressRequired) {
    
    this.shippingAddressRequired = shippingAddressRequired;
    return this;
  }

  /**
   * Is shipping address required
   * @return shippingAddressRequired
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_SHIPPING_ADDRESS_REQUIRED)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Boolean getShippingAddressRequired() {
    return shippingAddressRequired;
  }


  @JsonProperty(JSON_PROPERTY_SHIPPING_ADDRESS_REQUIRED)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setShippingAddressRequired(@javax.annotation.Nonnull Boolean shippingAddressRequired) {
    this.shippingAddressRequired = shippingAddressRequired;
  }


  public GpaySessionTokenResponse emailRequired(@javax.annotation.Nonnull Boolean emailRequired) {
    
    this.emailRequired = emailRequired;
    return this;
  }

  /**
   * Is email required
   * @return emailRequired
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_EMAIL_REQUIRED)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Boolean getEmailRequired() {
    return emailRequired;
  }


  @JsonProperty(JSON_PROPERTY_EMAIL_REQUIRED)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setEmailRequired(@javax.annotation.Nonnull Boolean emailRequired) {
    this.emailRequired = emailRequired;
  }


  public GpaySessionTokenResponse shippingAddressParameters(@javax.annotation.Nonnull GpayShippingAddressParameters shippingAddressParameters) {
    
    this.shippingAddressParameters = shippingAddressParameters;
    return this;
  }

  /**
   * Get shippingAddressParameters
   * @return shippingAddressParameters
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_SHIPPING_ADDRESS_PARAMETERS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public GpayShippingAddressParameters getShippingAddressParameters() {
    return shippingAddressParameters;
  }


  @JsonProperty(JSON_PROPERTY_SHIPPING_ADDRESS_PARAMETERS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setShippingAddressParameters(@javax.annotation.Nonnull GpayShippingAddressParameters shippingAddressParameters) {
    this.shippingAddressParameters = shippingAddressParameters;
  }


  public GpaySessionTokenResponse allowedPaymentMethods(@javax.annotation.Nonnull List<GpayAllowedPaymentMethods> allowedPaymentMethods) {
    
    this.allowedPaymentMethods = allowedPaymentMethods;
    return this;
  }

  public GpaySessionTokenResponse addAllowedPaymentMethodsItem(GpayAllowedPaymentMethods allowedPaymentMethodsItem) {
    if (this.allowedPaymentMethods == null) {
      this.allowedPaymentMethods = new ArrayList<>();
    }
    this.allowedPaymentMethods.add(allowedPaymentMethodsItem);
    return this;
  }

  /**
   * List of the allowed payment meythods
   * @return allowedPaymentMethods
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_ALLOWED_PAYMENT_METHODS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public List<GpayAllowedPaymentMethods> getAllowedPaymentMethods() {
    return allowedPaymentMethods;
  }


  @JsonProperty(JSON_PROPERTY_ALLOWED_PAYMENT_METHODS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setAllowedPaymentMethods(@javax.annotation.Nonnull List<GpayAllowedPaymentMethods> allowedPaymentMethods) {
    this.allowedPaymentMethods = allowedPaymentMethods;
  }


  public GpaySessionTokenResponse transactionInfo(@javax.annotation.Nonnull GpayTransactionInfo transactionInfo) {
    
    this.transactionInfo = transactionInfo;
    return this;
  }

  /**
   * Get transactionInfo
   * @return transactionInfo
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_TRANSACTION_INFO)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public GpayTransactionInfo getTransactionInfo() {
    return transactionInfo;
  }


  @JsonProperty(JSON_PROPERTY_TRANSACTION_INFO)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setTransactionInfo(@javax.annotation.Nonnull GpayTransactionInfo transactionInfo) {
    this.transactionInfo = transactionInfo;
  }


  public GpaySessionTokenResponse secrets(@javax.annotation.Nullable SecretInfoToInitiateSdk secrets) {
    this.secrets = JsonNullable.<SecretInfoToInitiateSdk>of(secrets);
    
    return this;
  }

  /**
   * Get secrets
   * @return secrets
   */
  @javax.annotation.Nullable
  @JsonIgnore

  public SecretInfoToInitiateSdk getSecrets() {
        return secrets.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_SECRETS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<SecretInfoToInitiateSdk> getSecrets_JsonNullable() {
    return secrets;
  }
  
  @JsonProperty(JSON_PROPERTY_SECRETS)
  public void setSecrets_JsonNullable(JsonNullable<SecretInfoToInitiateSdk> secrets) {
    this.secrets = secrets;
  }

  public void setSecrets(@javax.annotation.Nullable SecretInfoToInitiateSdk secrets) {
    this.secrets = JsonNullable.<SecretInfoToInitiateSdk>of(secrets);
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GpaySessionTokenResponse gpaySessionTokenResponse = (GpaySessionTokenResponse) o;
    return Objects.equals(this.delayedSessionToken, gpaySessionTokenResponse.delayedSessionToken) &&
        Objects.equals(this.connector, gpaySessionTokenResponse.connector) &&
        Objects.equals(this.sdkNextAction, gpaySessionTokenResponse.sdkNextAction) &&
        Objects.equals(this.merchantInfo, gpaySessionTokenResponse.merchantInfo) &&
        Objects.equals(this.shippingAddressRequired, gpaySessionTokenResponse.shippingAddressRequired) &&
        Objects.equals(this.emailRequired, gpaySessionTokenResponse.emailRequired) &&
        Objects.equals(this.shippingAddressParameters, gpaySessionTokenResponse.shippingAddressParameters) &&
        Objects.equals(this.allowedPaymentMethods, gpaySessionTokenResponse.allowedPaymentMethods) &&
        Objects.equals(this.transactionInfo, gpaySessionTokenResponse.transactionInfo) &&
        equalsNullable(this.secrets, gpaySessionTokenResponse.secrets);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(delayedSessionToken, connector, sdkNextAction, merchantInfo, shippingAddressRequired, emailRequired, shippingAddressParameters, allowedPaymentMethods, transactionInfo, hashCodeNullable(secrets));
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GpaySessionTokenResponse {\n");
    sb.append("    delayedSessionToken: ").append(toIndentedString(delayedSessionToken)).append("\n");
    sb.append("    connector: ").append(toIndentedString(connector)).append("\n");
    sb.append("    sdkNextAction: ").append(toIndentedString(sdkNextAction)).append("\n");
    sb.append("    merchantInfo: ").append(toIndentedString(merchantInfo)).append("\n");
    sb.append("    shippingAddressRequired: ").append(toIndentedString(shippingAddressRequired)).append("\n");
    sb.append("    emailRequired: ").append(toIndentedString(emailRequired)).append("\n");
    sb.append("    shippingAddressParameters: ").append(toIndentedString(shippingAddressParameters)).append("\n");
    sb.append("    allowedPaymentMethods: ").append(toIndentedString(allowedPaymentMethods)).append("\n");
    sb.append("    transactionInfo: ").append(toIndentedString(transactionInfo)).append("\n");
    sb.append("    secrets: ").append(toIndentedString(secrets)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

