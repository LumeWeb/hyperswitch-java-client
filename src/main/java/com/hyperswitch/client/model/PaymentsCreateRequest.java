/*
 * Hyperswitch - API Documentation
 *  ## Get started  Hyperswitch provides a collection of APIs that enable you to process and manage payments. Our APIs accept and return JSON in the HTTP body, and return standard HTTP response codes.  You can consume the APIs directly using your favorite HTTP/REST library.  We have a testing environment referred to \"sandbox\", which you can setup to test API calls without affecting production data. Currently, our sandbox environment is live while our production environment is under development and will be available soon. You can sign up on our Dashboard to get API keys to access Hyperswitch API.  ### Environment  Use the following base URLs when making requests to the APIs:  | Environment   |  Base URL                          | |---------------|------------------------------------| | Sandbox       | <https://sandbox.hyperswitch.io>   | | Production    | <https://api.hyperswitch.io>       |  ## Authentication  When you sign up on our [dashboard](https://app.hyperswitch.io) and create a merchant account, you are given a secret key (also referred as api-key) and a publishable key. You may authenticate all API requests with Hyperswitch server by providing the appropriate key in the request Authorization header.  | Key             |  Description                                                                                  | |-----------------|-----------------------------------------------------------------------------------------------| | api-key         | Private key. Used to authenticate all API requests from your merchant server                  | | publishable key | Unique identifier for your account. Used to authenticate API requests from your app's client  |  Never share your secret api keys. Keep them guarded and secure.
 *
 * The version of the OpenAPI document: 0.2.0
 * Contact: hyperswitch@juspay.in
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.hyperswitch.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import com.hyperswitch.client.model.Address;
import com.hyperswitch.client.model.AuthenticationType;
import com.hyperswitch.client.model.CaptureMethod;
import com.hyperswitch.client.model.Connector;
import com.hyperswitch.client.model.ConnectorMetadata;
import com.hyperswitch.client.model.CountryAlpha2;
import com.hyperswitch.client.model.Currency;
import com.hyperswitch.client.model.CustomerDetails;
import com.hyperswitch.client.model.FeatureMetadata;
import com.hyperswitch.client.model.FutureUsage;
import com.hyperswitch.client.model.MandateData;
import com.hyperswitch.client.model.MerchantConnectorDetailsWrap;
import com.hyperswitch.client.model.OrderDetailsWithAmount;
import com.hyperswitch.client.model.PaymentCreatePaymentLinkConfig;
import com.hyperswitch.client.model.PaymentExperience;
import com.hyperswitch.client.model.PaymentMethod;
import com.hyperswitch.client.model.PaymentMethodData;
import com.hyperswitch.client.model.PaymentMethodType;
import com.hyperswitch.client.model.PaymentType;
import com.hyperswitch.client.model.RequestSurchargeDetails;
import com.hyperswitch.client.model.RetryAction;
import com.hyperswitch.client.model.RoutingAlgorithm;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * PaymentsCreateRequest
 */
@JsonPropertyOrder({
  PaymentsCreateRequest.JSON_PROPERTY_PAYMENT_ID,
  PaymentsCreateRequest.JSON_PROPERTY_MERCHANT_ID,
  PaymentsCreateRequest.JSON_PROPERTY_AMOUNT,
  PaymentsCreateRequest.JSON_PROPERTY_ROUTING,
  PaymentsCreateRequest.JSON_PROPERTY_CONNECTOR,
  PaymentsCreateRequest.JSON_PROPERTY_CURRENCY,
  PaymentsCreateRequest.JSON_PROPERTY_CAPTURE_METHOD,
  PaymentsCreateRequest.JSON_PROPERTY_AMOUNT_TO_CAPTURE,
  PaymentsCreateRequest.JSON_PROPERTY_CAPTURE_ON,
  PaymentsCreateRequest.JSON_PROPERTY_CONFIRM,
  PaymentsCreateRequest.JSON_PROPERTY_CUSTOMER,
  PaymentsCreateRequest.JSON_PROPERTY_CUSTOMER_ID,
  PaymentsCreateRequest.JSON_PROPERTY_EMAIL,
  PaymentsCreateRequest.JSON_PROPERTY_NAME,
  PaymentsCreateRequest.JSON_PROPERTY_PHONE,
  PaymentsCreateRequest.JSON_PROPERTY_PHONE_COUNTRY_CODE,
  PaymentsCreateRequest.JSON_PROPERTY_OFF_SESSION,
  PaymentsCreateRequest.JSON_PROPERTY_DESCRIPTION,
  PaymentsCreateRequest.JSON_PROPERTY_RETURN_URL,
  PaymentsCreateRequest.JSON_PROPERTY_SETUP_FUTURE_USAGE,
  PaymentsCreateRequest.JSON_PROPERTY_AUTHENTICATION_TYPE,
  PaymentsCreateRequest.JSON_PROPERTY_PAYMENT_METHOD_DATA,
  PaymentsCreateRequest.JSON_PROPERTY_PAYMENT_METHOD,
  PaymentsCreateRequest.JSON_PROPERTY_PAYMENT_TOKEN,
  PaymentsCreateRequest.JSON_PROPERTY_RECURRING_DETAILS,
  PaymentsCreateRequest.JSON_PROPERTY_CARD_CVC,
  PaymentsCreateRequest.JSON_PROPERTY_SHIPPING,
  PaymentsCreateRequest.JSON_PROPERTY_BILLING,
  PaymentsCreateRequest.JSON_PROPERTY_STATEMENT_DESCRIPTOR_NAME,
  PaymentsCreateRequest.JSON_PROPERTY_STATEMENT_DESCRIPTOR_SUFFIX,
  PaymentsCreateRequest.JSON_PROPERTY_ORDER_DETAILS,
  PaymentsCreateRequest.JSON_PROPERTY_CLIENT_SECRET,
  PaymentsCreateRequest.JSON_PROPERTY_MANDATE_DATA,
  PaymentsCreateRequest.JSON_PROPERTY_MANDATE_ID,
  PaymentsCreateRequest.JSON_PROPERTY_BROWSER_INFO,
  PaymentsCreateRequest.JSON_PROPERTY_PAYMENT_EXPERIENCE,
  PaymentsCreateRequest.JSON_PROPERTY_PAYMENT_METHOD_TYPE,
  PaymentsCreateRequest.JSON_PROPERTY_BUSINESS_COUNTRY,
  PaymentsCreateRequest.JSON_PROPERTY_BUSINESS_LABEL,
  PaymentsCreateRequest.JSON_PROPERTY_MERCHANT_CONNECTOR_DETAILS,
  PaymentsCreateRequest.JSON_PROPERTY_ALLOWED_PAYMENT_METHOD_TYPES,
  PaymentsCreateRequest.JSON_PROPERTY_BUSINESS_SUB_LABEL,
  PaymentsCreateRequest.JSON_PROPERTY_RETRY_ACTION,
  PaymentsCreateRequest.JSON_PROPERTY_METADATA,
  PaymentsCreateRequest.JSON_PROPERTY_CONNECTOR_METADATA,
  PaymentsCreateRequest.JSON_PROPERTY_FEATURE_METADATA,
  PaymentsCreateRequest.JSON_PROPERTY_PAYMENT_LINK,
  PaymentsCreateRequest.JSON_PROPERTY_PAYMENT_LINK_CONFIG,
  PaymentsCreateRequest.JSON_PROPERTY_PROFILE_ID,
  PaymentsCreateRequest.JSON_PROPERTY_SURCHARGE_DETAILS,
  PaymentsCreateRequest.JSON_PROPERTY_PAYMENT_TYPE,
  PaymentsCreateRequest.JSON_PROPERTY_REQUEST_INCREMENTAL_AUTHORIZATION,
  PaymentsCreateRequest.JSON_PROPERTY_SESSION_EXPIRY,
  PaymentsCreateRequest.JSON_PROPERTY_FRM_METADATA
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-01-28T20:00:07.865622+05:30[Asia/Kolkata]")
public class PaymentsCreateRequest {
  public static final String JSON_PROPERTY_PAYMENT_ID = "payment_id";
  private JsonNullable<String> paymentId = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_MERCHANT_ID = "merchant_id";
  private JsonNullable<String> merchantId = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_AMOUNT = "amount";
  private Long amount;

  public static final String JSON_PROPERTY_ROUTING = "routing";
  private JsonNullable<RoutingAlgorithm> routing = JsonNullable.<RoutingAlgorithm>undefined();

  public static final String JSON_PROPERTY_CONNECTOR = "connector";
  private JsonNullable<List<Connector>> connector = JsonNullable.<List<Connector>>undefined();

  public static final String JSON_PROPERTY_CURRENCY = "currency";
  private Currency currency;

  public static final String JSON_PROPERTY_CAPTURE_METHOD = "capture_method";
  private JsonNullable<CaptureMethod> captureMethod = JsonNullable.<CaptureMethod>undefined();

  public static final String JSON_PROPERTY_AMOUNT_TO_CAPTURE = "amount_to_capture";
  private JsonNullable<Long> amountToCapture = JsonNullable.<Long>undefined();

  public static final String JSON_PROPERTY_CAPTURE_ON = "capture_on";
  private JsonNullable<OffsetDateTime> captureOn = JsonNullable.<OffsetDateTime>undefined();

  public static final String JSON_PROPERTY_CONFIRM = "confirm";
  private JsonNullable<Boolean> confirm = JsonNullable.<Boolean>of(false);

  public static final String JSON_PROPERTY_CUSTOMER = "customer";
  private JsonNullable<CustomerDetails> customer = JsonNullable.<CustomerDetails>undefined();

  public static final String JSON_PROPERTY_CUSTOMER_ID = "customer_id";
  private JsonNullable<String> customerId = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_EMAIL = "email";
  private JsonNullable<String> email = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_NAME = "name";
  private JsonNullable<String> name = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_PHONE = "phone";
  private JsonNullable<String> phone = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_PHONE_COUNTRY_CODE = "phone_country_code";
  private JsonNullable<String> phoneCountryCode = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_OFF_SESSION = "off_session";
  private JsonNullable<Boolean> offSession = JsonNullable.<Boolean>undefined();

  public static final String JSON_PROPERTY_DESCRIPTION = "description";
  private JsonNullable<String> description = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_RETURN_URL = "return_url";
  private JsonNullable<String> returnUrl = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_SETUP_FUTURE_USAGE = "setup_future_usage";
  private JsonNullable<FutureUsage> setupFutureUsage = JsonNullable.<FutureUsage>undefined();

  public static final String JSON_PROPERTY_AUTHENTICATION_TYPE = "authentication_type";
  private JsonNullable<AuthenticationType> authenticationType = JsonNullable.<AuthenticationType>of(AuthenticationType.THREE_DS);

  public static final String JSON_PROPERTY_PAYMENT_METHOD_DATA = "payment_method_data";
  private JsonNullable<PaymentMethodData> paymentMethodData = JsonNullable.<PaymentMethodData>undefined();

  public static final String JSON_PROPERTY_PAYMENT_METHOD = "payment_method";
  private JsonNullable<PaymentMethod> paymentMethod = JsonNullable.<PaymentMethod>undefined();

  public static final String JSON_PROPERTY_PAYMENT_TOKEN = "payment_token";
  private JsonNullable<String> paymentToken = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_RECURRING_DETAILS = "recurring_details";
  private JsonNullable<RecurringDetails> recurringDetails = JsonNullable.<RecurringDetails>undefined();

  public static final String JSON_PROPERTY_CARD_CVC = "card_cvc";
  private JsonNullable<String> cardCvc = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_SHIPPING = "shipping";
  private JsonNullable<Address> shipping = JsonNullable.<Address>undefined();

  public static final String JSON_PROPERTY_BILLING = "billing";
  private JsonNullable<Address> billing = JsonNullable.<Address>undefined();

  public static final String JSON_PROPERTY_STATEMENT_DESCRIPTOR_NAME = "statement_descriptor_name";
  private JsonNullable<String> statementDescriptorName = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_STATEMENT_DESCRIPTOR_SUFFIX = "statement_descriptor_suffix";
  private JsonNullable<String> statementDescriptorSuffix = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ORDER_DETAILS = "order_details";
  private JsonNullable<List<OrderDetailsWithAmount>> orderDetails = JsonNullable.<List<OrderDetailsWithAmount>>undefined();

  public static final String JSON_PROPERTY_CLIENT_SECRET = "client_secret";
  private JsonNullable<String> clientSecret = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_MANDATE_DATA = "mandate_data";
  private JsonNullable<MandateData> mandateData = JsonNullable.<MandateData>undefined();

  public static final String JSON_PROPERTY_MANDATE_ID = "mandate_id";
  private JsonNullable<String> mandateId = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_BROWSER_INFO = "browser_info";
  private JsonNullable<Object> browserInfo = JsonNullable.<Object>undefined();

  public static final String JSON_PROPERTY_PAYMENT_EXPERIENCE = "payment_experience";
  private JsonNullable<PaymentExperience> paymentExperience = JsonNullable.<PaymentExperience>undefined();

  public static final String JSON_PROPERTY_PAYMENT_METHOD_TYPE = "payment_method_type";
  private JsonNullable<PaymentMethodType> paymentMethodType = JsonNullable.<PaymentMethodType>undefined();

  public static final String JSON_PROPERTY_BUSINESS_COUNTRY = "business_country";
  private JsonNullable<CountryAlpha2> businessCountry = JsonNullable.<CountryAlpha2>undefined();

  public static final String JSON_PROPERTY_BUSINESS_LABEL = "business_label";
  private JsonNullable<String> businessLabel = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_MERCHANT_CONNECTOR_DETAILS = "merchant_connector_details";
  private JsonNullable<MerchantConnectorDetailsWrap> merchantConnectorDetails = JsonNullable.<MerchantConnectorDetailsWrap>undefined();

  public static final String JSON_PROPERTY_ALLOWED_PAYMENT_METHOD_TYPES = "allowed_payment_method_types";
  private JsonNullable<List<PaymentMethodType>> allowedPaymentMethodTypes = JsonNullable.<List<PaymentMethodType>>undefined();

  public static final String JSON_PROPERTY_BUSINESS_SUB_LABEL = "business_sub_label";
  private JsonNullable<String> businessSubLabel = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_RETRY_ACTION = "retry_action";
  private JsonNullable<RetryAction> retryAction = JsonNullable.<RetryAction>undefined();

  public static final String JSON_PROPERTY_METADATA = "metadata";
  private JsonNullable<Object> metadata = JsonNullable.<Object>undefined();

  public static final String JSON_PROPERTY_CONNECTOR_METADATA = "connector_metadata";
  private JsonNullable<ConnectorMetadata> connectorMetadata = JsonNullable.<ConnectorMetadata>undefined();

  public static final String JSON_PROPERTY_FEATURE_METADATA = "feature_metadata";
  private JsonNullable<FeatureMetadata> featureMetadata = JsonNullable.<FeatureMetadata>undefined();

  public static final String JSON_PROPERTY_PAYMENT_LINK = "payment_link";
  private JsonNullable<Boolean> paymentLink = JsonNullable.<Boolean>of(false);

  public static final String JSON_PROPERTY_PAYMENT_LINK_CONFIG = "payment_link_config";
  private JsonNullable<PaymentCreatePaymentLinkConfig> paymentLinkConfig = JsonNullable.<PaymentCreatePaymentLinkConfig>undefined();

  public static final String JSON_PROPERTY_PROFILE_ID = "profile_id";
  private JsonNullable<String> profileId = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_SURCHARGE_DETAILS = "surcharge_details";
  private JsonNullable<RequestSurchargeDetails> surchargeDetails = JsonNullable.<RequestSurchargeDetails>undefined();

  public static final String JSON_PROPERTY_PAYMENT_TYPE = "payment_type";
  private JsonNullable<PaymentType> paymentType = JsonNullable.<PaymentType>undefined();

  public static final String JSON_PROPERTY_REQUEST_INCREMENTAL_AUTHORIZATION = "request_incremental_authorization";
  private JsonNullable<Boolean> requestIncrementalAuthorization = JsonNullable.<Boolean>undefined();

  public static final String JSON_PROPERTY_SESSION_EXPIRY = "session_expiry";
  private JsonNullable<Integer> sessionExpiry = JsonNullable.<Integer>undefined();

  public static final String JSON_PROPERTY_FRM_METADATA = "frm_metadata";
  private JsonNullable<Object> frmMetadata = JsonNullable.<Object>of(null);

  public PaymentsCreateRequest() {
  }

  public PaymentsCreateRequest paymentId(String paymentId) {
    this.paymentId = JsonNullable.<String>of(paymentId);

    return this;
  }

   /**
   * Unique identifier for the payment. This ensures idempotency for multiple payments that have been done by a single merchant. This field is auto generated and is returned in the API response.
   * @return paymentId
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public String getPaymentId() {
        return paymentId.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PAYMENT_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getPaymentId_JsonNullable() {
    return paymentId;
  }

  @JsonProperty(JSON_PROPERTY_PAYMENT_ID)
  public void setPaymentId_JsonNullable(JsonNullable<String> paymentId) {
    this.paymentId = paymentId;
  }

  public void setPaymentId(String paymentId) {
    this.paymentId = JsonNullable.<String>of(paymentId);
  }


  public PaymentsCreateRequest merchantId(String merchantId) {
    this.merchantId = JsonNullable.<String>of(merchantId);

    return this;
  }

   /**
   * This is an identifier for the merchant account. This is inferred from the API key provided during the request
   * @return merchantId
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public String getMerchantId() {
        return merchantId.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_MERCHANT_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getMerchantId_JsonNullable() {
    return merchantId;
  }

  @JsonProperty(JSON_PROPERTY_MERCHANT_ID)
  public void setMerchantId_JsonNullable(JsonNullable<String> merchantId) {
    this.merchantId = merchantId;
  }

  public void setMerchantId(String merchantId) {
    this.merchantId = JsonNullable.<String>of(merchantId);
  }


  public PaymentsCreateRequest amount(Long amount) {

    this.amount = amount;
    return this;
  }

   /**
   * The payment amount. Amount for the payment in lowest denomination of the currency. (i.e) in cents for USD denomination, in paisa for INR denomination etc.,
   * minimum: 0
   * @return amount
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Long getAmount() {
    return amount;
  }


  @JsonProperty(JSON_PROPERTY_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setAmount(Long amount) {
    this.amount = amount;
  }


  public PaymentsCreateRequest routing(RoutingAlgorithm routing) {
    this.routing = JsonNullable.<RoutingAlgorithm>of(routing);

    return this;
  }

   /**
   * Get routing
   * @return routing
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public RoutingAlgorithm getRouting() {
        return routing.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ROUTING)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<RoutingAlgorithm> getRouting_JsonNullable() {
    return routing;
  }

  @JsonProperty(JSON_PROPERTY_ROUTING)
  public void setRouting_JsonNullable(JsonNullable<RoutingAlgorithm> routing) {
    this.routing = routing;
  }

  public void setRouting(RoutingAlgorithm routing) {
    this.routing = JsonNullable.<RoutingAlgorithm>of(routing);
  }


  public PaymentsCreateRequest connector(List<Connector> connector) {
    this.connector = JsonNullable.<List<Connector>>of(connector);

    return this;
  }

  public PaymentsCreateRequest addConnectorItem(Connector connectorItem) {
    if (this.connector == null || !this.connector.isPresent()) {
      this.connector = JsonNullable.<List<Connector>>of(new ArrayList<>());
    }
    try {
      this.connector.get().add(connectorItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * This allows the merchant to manually select a connector with which the payment can go through
   * @return connector
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public List<Connector> getConnector() {
        return connector.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_CONNECTOR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<Connector>> getConnector_JsonNullable() {
    return connector;
  }

  @JsonProperty(JSON_PROPERTY_CONNECTOR)
  public void setConnector_JsonNullable(JsonNullable<List<Connector>> connector) {
    this.connector = connector;
  }

  public void setConnector(List<Connector> connector) {
    this.connector = JsonNullable.<List<Connector>>of(connector);
  }


  public PaymentsCreateRequest currency(Currency currency) {

    this.currency = currency;
    return this;
  }

   /**
   * Get currency
   * @return currency
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CURRENCY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Currency getCurrency() {
    return currency;
  }


  @JsonProperty(JSON_PROPERTY_CURRENCY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setCurrency(Currency currency) {
    this.currency = currency;
  }


  public PaymentsCreateRequest captureMethod(CaptureMethod captureMethod) {
    this.captureMethod = JsonNullable.<CaptureMethod>of(captureMethod);

    return this;
  }

   /**
   * Get captureMethod
   * @return captureMethod
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public CaptureMethod getCaptureMethod() {
        return captureMethod.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_CAPTURE_METHOD)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<CaptureMethod> getCaptureMethod_JsonNullable() {
    return captureMethod;
  }

  @JsonProperty(JSON_PROPERTY_CAPTURE_METHOD)
  public void setCaptureMethod_JsonNullable(JsonNullable<CaptureMethod> captureMethod) {
    this.captureMethod = captureMethod;
  }

  public void setCaptureMethod(CaptureMethod captureMethod) {
    this.captureMethod = JsonNullable.<CaptureMethod>of(captureMethod);
  }


  public PaymentsCreateRequest amountToCapture(Long amountToCapture) {
    this.amountToCapture = JsonNullable.<Long>of(amountToCapture);

    return this;
  }

   /**
   * The Amount to be captured/ debited from the users payment method. It shall be in lowest denomination of the currency. (i.e) in cents for USD denomination, in paisa for INR denomination etc., If not provided, the default amount_to_capture will be the payment amount.
   * @return amountToCapture
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public Long getAmountToCapture() {
        return amountToCapture.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_AMOUNT_TO_CAPTURE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Long> getAmountToCapture_JsonNullable() {
    return amountToCapture;
  }

  @JsonProperty(JSON_PROPERTY_AMOUNT_TO_CAPTURE)
  public void setAmountToCapture_JsonNullable(JsonNullable<Long> amountToCapture) {
    this.amountToCapture = amountToCapture;
  }

  public void setAmountToCapture(Long amountToCapture) {
    this.amountToCapture = JsonNullable.<Long>of(amountToCapture);
  }


  public PaymentsCreateRequest captureOn(OffsetDateTime captureOn) {
    this.captureOn = JsonNullable.<OffsetDateTime>of(captureOn);

    return this;
  }

   /**
   * A timestamp (ISO 8601 code) that determines when the payment should be captured. Providing this field will automatically set &#x60;capture&#x60; to true
   * @return captureOn
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public OffsetDateTime getCaptureOn() {
        return captureOn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_CAPTURE_ON)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<OffsetDateTime> getCaptureOn_JsonNullable() {
    return captureOn;
  }

  @JsonProperty(JSON_PROPERTY_CAPTURE_ON)
  public void setCaptureOn_JsonNullable(JsonNullable<OffsetDateTime> captureOn) {
    this.captureOn = captureOn;
  }

  public void setCaptureOn(OffsetDateTime captureOn) {
    this.captureOn = JsonNullable.<OffsetDateTime>of(captureOn);
  }


  public PaymentsCreateRequest confirm(Boolean confirm) {
    this.confirm = JsonNullable.<Boolean>of(confirm);

    return this;
  }

   /**
   * Whether to confirm the payment (if applicable)
   * @return confirm
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public Boolean getConfirm() {
        return confirm.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_CONFIRM)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Boolean> getConfirm_JsonNullable() {
    return confirm;
  }

  @JsonProperty(JSON_PROPERTY_CONFIRM)
  public void setConfirm_JsonNullable(JsonNullable<Boolean> confirm) {
    this.confirm = confirm;
  }

  public void setConfirm(Boolean confirm) {
    this.confirm = JsonNullable.<Boolean>of(confirm);
  }


  public PaymentsCreateRequest customer(CustomerDetails customer) {
    this.customer = JsonNullable.<CustomerDetails>of(customer);

    return this;
  }

   /**
   * Get customer
   * @return customer
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public CustomerDetails getCustomer() {
        return customer.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_CUSTOMER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<CustomerDetails> getCustomer_JsonNullable() {
    return customer;
  }

  @JsonProperty(JSON_PROPERTY_CUSTOMER)
  public void setCustomer_JsonNullable(JsonNullable<CustomerDetails> customer) {
    this.customer = customer;
  }

  public void setCustomer(CustomerDetails customer) {
    this.customer = JsonNullable.<CustomerDetails>of(customer);
  }


  public PaymentsCreateRequest customerId(String customerId) {
    this.customerId = JsonNullable.<String>of(customerId);

    return this;
  }

   /**
   * The identifier for the customer object. This field will be deprecated soon, use the customer object instead
   * @return customerId
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public String getCustomerId() {
        return customerId.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_CUSTOMER_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getCustomerId_JsonNullable() {
    return customerId;
  }

  @JsonProperty(JSON_PROPERTY_CUSTOMER_ID)
  public void setCustomerId_JsonNullable(JsonNullable<String> customerId) {
    this.customerId = customerId;
  }

  public void setCustomerId(String customerId) {
    this.customerId = JsonNullable.<String>of(customerId);
  }


  public PaymentsCreateRequest email(String email) {
    this.email = JsonNullable.<String>of(email);

    return this;
  }

   /**
   * The customer&#39;s email address This field will be deprecated soon, use the customer object instead
   * @return email
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public String getEmail() {
        return email.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_EMAIL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getEmail_JsonNullable() {
    return email;
  }

  @JsonProperty(JSON_PROPERTY_EMAIL)
  public void setEmail_JsonNullable(JsonNullable<String> email) {
    this.email = email;
  }

  public void setEmail(String email) {
    this.email = JsonNullable.<String>of(email);
  }


  public PaymentsCreateRequest name(String name) {
    this.name = JsonNullable.<String>of(name);

    return this;
  }

   /**
   * description: The customer&#39;s name This field will be deprecated soon, use the customer object instead
   * @return name
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public String getName() {
        return name.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getName_JsonNullable() {
    return name;
  }

  @JsonProperty(JSON_PROPERTY_NAME)
  public void setName_JsonNullable(JsonNullable<String> name) {
    this.name = name;
  }

  public void setName(String name) {
    this.name = JsonNullable.<String>of(name);
  }


  public PaymentsCreateRequest phone(String phone) {
    this.phone = JsonNullable.<String>of(phone);

    return this;
  }

   /**
   * The customer&#39;s phone number This field will be deprecated soon, use the customer object instead
   * @return phone
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public String getPhone() {
        return phone.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PHONE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getPhone_JsonNullable() {
    return phone;
  }

  @JsonProperty(JSON_PROPERTY_PHONE)
  public void setPhone_JsonNullable(JsonNullable<String> phone) {
    this.phone = phone;
  }

  public void setPhone(String phone) {
    this.phone = JsonNullable.<String>of(phone);
  }


  public PaymentsCreateRequest phoneCountryCode(String phoneCountryCode) {
    this.phoneCountryCode = JsonNullable.<String>of(phoneCountryCode);

    return this;
  }

   /**
   * The country code for the customer phone number This field will be deprecated soon, use the customer object instead
   * @return phoneCountryCode
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public String getPhoneCountryCode() {
        return phoneCountryCode.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PHONE_COUNTRY_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getPhoneCountryCode_JsonNullable() {
    return phoneCountryCode;
  }

  @JsonProperty(JSON_PROPERTY_PHONE_COUNTRY_CODE)
  public void setPhoneCountryCode_JsonNullable(JsonNullable<String> phoneCountryCode) {
    this.phoneCountryCode = phoneCountryCode;
  }

  public void setPhoneCountryCode(String phoneCountryCode) {
    this.phoneCountryCode = JsonNullable.<String>of(phoneCountryCode);
  }


  public PaymentsCreateRequest offSession(Boolean offSession) {
    this.offSession = JsonNullable.<Boolean>of(offSession);

    return this;
  }

   /**
   * Set to true to indicate that the customer is not in your checkout flow during this payment, and therefore is unable to authenticate. This parameter is intended for scenarios where you collect card details and charge them later. This parameter can only be used with &#x60;confirm: true&#x60;.
   * @return offSession
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public Boolean getOffSession() {
        return offSession.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_OFF_SESSION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Boolean> getOffSession_JsonNullable() {
    return offSession;
  }

  @JsonProperty(JSON_PROPERTY_OFF_SESSION)
  public void setOffSession_JsonNullable(JsonNullable<Boolean> offSession) {
    this.offSession = offSession;
  }

  public void setOffSession(Boolean offSession) {
    this.offSession = JsonNullable.<Boolean>of(offSession);
  }


  public PaymentsCreateRequest description(String description) {
    this.description = JsonNullable.<String>of(description);

    return this;
  }

   /**
   * A description of the payment
   * @return description
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public String getDescription() {
        return description.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getDescription_JsonNullable() {
    return description;
  }

  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  public void setDescription_JsonNullable(JsonNullable<String> description) {
    this.description = description;
  }

  public void setDescription(String description) {
    this.description = JsonNullable.<String>of(description);
  }


  public PaymentsCreateRequest returnUrl(String returnUrl) {
    this.returnUrl = JsonNullable.<String>of(returnUrl);

    return this;
  }

   /**
   * The URL to redirect after the completion of the operation
   * @return returnUrl
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public String getReturnUrl() {
        return returnUrl.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_RETURN_URL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getReturnUrl_JsonNullable() {
    return returnUrl;
  }

  @JsonProperty(JSON_PROPERTY_RETURN_URL)
  public void setReturnUrl_JsonNullable(JsonNullable<String> returnUrl) {
    this.returnUrl = returnUrl;
  }

  public void setReturnUrl(String returnUrl) {
    this.returnUrl = JsonNullable.<String>of(returnUrl);
  }


  public PaymentsCreateRequest setupFutureUsage(FutureUsage setupFutureUsage) {
    this.setupFutureUsage = JsonNullable.<FutureUsage>of(setupFutureUsage);

    return this;
  }

   /**
   * Get setupFutureUsage
   * @return setupFutureUsage
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public FutureUsage getSetupFutureUsage() {
        return setupFutureUsage.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_SETUP_FUTURE_USAGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<FutureUsage> getSetupFutureUsage_JsonNullable() {
    return setupFutureUsage;
  }

  @JsonProperty(JSON_PROPERTY_SETUP_FUTURE_USAGE)
  public void setSetupFutureUsage_JsonNullable(JsonNullable<FutureUsage> setupFutureUsage) {
    this.setupFutureUsage = setupFutureUsage;
  }

  public void setSetupFutureUsage(FutureUsage setupFutureUsage) {
    this.setupFutureUsage = JsonNullable.<FutureUsage>of(setupFutureUsage);
  }


  public PaymentsCreateRequest authenticationType(AuthenticationType authenticationType) {
    this.authenticationType = JsonNullable.<AuthenticationType>of(authenticationType);

    return this;
  }

   /**
   * Get authenticationType
   * @return authenticationType
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public AuthenticationType getAuthenticationType() {
        return authenticationType.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_AUTHENTICATION_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<AuthenticationType> getAuthenticationType_JsonNullable() {
    return authenticationType;
  }

  @JsonProperty(JSON_PROPERTY_AUTHENTICATION_TYPE)
  public void setAuthenticationType_JsonNullable(JsonNullable<AuthenticationType> authenticationType) {
    this.authenticationType = authenticationType;
  }

  public void setAuthenticationType(AuthenticationType authenticationType) {
    this.authenticationType = JsonNullable.<AuthenticationType>of(authenticationType);
  }


  public PaymentsCreateRequest paymentMethodData(PaymentMethodData paymentMethodData) {
    this.paymentMethodData = JsonNullable.<PaymentMethodData>of(paymentMethodData);

    return this;
  }

   /**
   * Get paymentMethodData
   * @return paymentMethodData
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public PaymentMethodData getPaymentMethodData() {
        return paymentMethodData.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PAYMENT_METHOD_DATA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<PaymentMethodData> getPaymentMethodData_JsonNullable() {
    return paymentMethodData;
  }

  @JsonProperty(JSON_PROPERTY_PAYMENT_METHOD_DATA)
  public void setPaymentMethodData_JsonNullable(JsonNullable<PaymentMethodData> paymentMethodData) {
    this.paymentMethodData = paymentMethodData;
  }

  public void setPaymentMethodData(PaymentMethodData paymentMethodData) {
    this.paymentMethodData = JsonNullable.<PaymentMethodData>of(paymentMethodData);
  }


  public PaymentsCreateRequest paymentMethod(PaymentMethod paymentMethod) {
    this.paymentMethod = JsonNullable.<PaymentMethod>of(paymentMethod);

    return this;
  }

   /**
   * Get paymentMethod
   * @return paymentMethod
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public PaymentMethod getPaymentMethod() {
        return paymentMethod.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PAYMENT_METHOD)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<PaymentMethod> getPaymentMethod_JsonNullable() {
    return paymentMethod;
  }

  @JsonProperty(JSON_PROPERTY_PAYMENT_METHOD)
  public void setPaymentMethod_JsonNullable(JsonNullable<PaymentMethod> paymentMethod) {
    this.paymentMethod = paymentMethod;
  }

  public void setPaymentMethod(PaymentMethod paymentMethod) {
    this.paymentMethod = JsonNullable.<PaymentMethod>of(paymentMethod);
  }


  public PaymentsCreateRequest paymentToken(String paymentToken) {
    this.paymentToken = JsonNullable.<String>of(paymentToken);

    return this;
  }

   /**
   * Provide a reference to a stored payment method
   * @return paymentToken
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public String getPaymentToken() {
        return paymentToken.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PAYMENT_TOKEN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getPaymentToken_JsonNullable() {
    return paymentToken;
  }

  @JsonProperty(JSON_PROPERTY_PAYMENT_TOKEN)
  public void setPaymentToken_JsonNullable(JsonNullable<String> paymentToken) {
    this.paymentToken = paymentToken;
  }

  public void setPaymentToken(String paymentToken) {
    this.paymentToken = JsonNullable.<String>of(paymentToken);
  }

    public PaymentsCreateRequest recurringDetails(RecurringDetails recurringDetails) {
        this.recurringDetails = JsonNullable.<RecurringDetails>of(recurringDetails);
        return this;
    }

    @javax.annotation.Nullable
    @JsonIgnore
    public RecurringDetails getRecurringDetails() {
        return recurringDetails.orElse(null);
    }

    @JsonProperty(JSON_PROPERTY_RECURRING_DETAILS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public JsonNullable<RecurringDetails> getRecurringDetails_JsonNullable() {
        return recurringDetails;
    }

    @JsonProperty(JSON_PROPERTY_RECURRING_DETAILS)
    public void setRecurringDetails_JsonNullable(JsonNullable<RecurringDetails> recurringDetails) {
        this.recurringDetails = recurringDetails;
    }

    public void setRecurringDetails(RecurringDetails recurringDetails) {
        this.recurringDetails = JsonNullable.<RecurringDetails>of(recurringDetails);
    }


  public PaymentsCreateRequest cardCvc(String cardCvc) {
    this.cardCvc = JsonNullable.<String>of(cardCvc);

    return this;
  }

   /**
   * This is used when payment is to be confirmed and the card is not saved. This field will be deprecated soon, use the CardToken object instead
   * @return cardCvc
   * @deprecated
  **/
  @Deprecated
  @javax.annotation.Nullable
  @JsonIgnore

  public String getCardCvc() {
        return cardCvc.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_CARD_CVC)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getCardCvc_JsonNullable() {
    return cardCvc;
  }

  @JsonProperty(JSON_PROPERTY_CARD_CVC)
  public void setCardCvc_JsonNullable(JsonNullable<String> cardCvc) {
    this.cardCvc = cardCvc;
  }

  public void setCardCvc(String cardCvc) {
    this.cardCvc = JsonNullable.<String>of(cardCvc);
  }


  public PaymentsCreateRequest shipping(Address shipping) {
    this.shipping = JsonNullable.<Address>of(shipping);

    return this;
  }

   /**
   * Get shipping
   * @return shipping
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public Address getShipping() {
        return shipping.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_SHIPPING)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Address> getShipping_JsonNullable() {
    return shipping;
  }

  @JsonProperty(JSON_PROPERTY_SHIPPING)
  public void setShipping_JsonNullable(JsonNullable<Address> shipping) {
    this.shipping = shipping;
  }

  public void setShipping(Address shipping) {
    this.shipping = JsonNullable.<Address>of(shipping);
  }


  public PaymentsCreateRequest billing(Address billing) {
    this.billing = JsonNullable.<Address>of(billing);

    return this;
  }

   /**
   * Get billing
   * @return billing
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public Address getBilling() {
        return billing.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_BILLING)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Address> getBilling_JsonNullable() {
    return billing;
  }

  @JsonProperty(JSON_PROPERTY_BILLING)
  public void setBilling_JsonNullable(JsonNullable<Address> billing) {
    this.billing = billing;
  }

  public void setBilling(Address billing) {
    this.billing = JsonNullable.<Address>of(billing);
  }


  public PaymentsCreateRequest statementDescriptorName(String statementDescriptorName) {
    this.statementDescriptorName = JsonNullable.<String>of(statementDescriptorName);

    return this;
  }

   /**
   * For non-card charges, you can use this value as the complete description that appears on your customers’ statements. Must contain at least one letter, maximum 22 characters.
   * @return statementDescriptorName
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public String getStatementDescriptorName() {
        return statementDescriptorName.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_STATEMENT_DESCRIPTOR_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getStatementDescriptorName_JsonNullable() {
    return statementDescriptorName;
  }

  @JsonProperty(JSON_PROPERTY_STATEMENT_DESCRIPTOR_NAME)
  public void setStatementDescriptorName_JsonNullable(JsonNullable<String> statementDescriptorName) {
    this.statementDescriptorName = statementDescriptorName;
  }

  public void setStatementDescriptorName(String statementDescriptorName) {
    this.statementDescriptorName = JsonNullable.<String>of(statementDescriptorName);
  }


  public PaymentsCreateRequest statementDescriptorSuffix(String statementDescriptorSuffix) {
    this.statementDescriptorSuffix = JsonNullable.<String>of(statementDescriptorSuffix);

    return this;
  }

   /**
   * Provides information about a card payment that customers see on their statements. Concatenated with the prefix (shortened descriptor) or statement descriptor that’s set on the account to form the complete statement descriptor. Maximum 22 characters for the concatenated descriptor.
   * @return statementDescriptorSuffix
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public String getStatementDescriptorSuffix() {
        return statementDescriptorSuffix.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_STATEMENT_DESCRIPTOR_SUFFIX)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getStatementDescriptorSuffix_JsonNullable() {
    return statementDescriptorSuffix;
  }

  @JsonProperty(JSON_PROPERTY_STATEMENT_DESCRIPTOR_SUFFIX)
  public void setStatementDescriptorSuffix_JsonNullable(JsonNullable<String> statementDescriptorSuffix) {
    this.statementDescriptorSuffix = statementDescriptorSuffix;
  }

  public void setStatementDescriptorSuffix(String statementDescriptorSuffix) {
    this.statementDescriptorSuffix = JsonNullable.<String>of(statementDescriptorSuffix);
  }


  public PaymentsCreateRequest orderDetails(List<OrderDetailsWithAmount> orderDetails) {
    this.orderDetails = JsonNullable.<List<OrderDetailsWithAmount>>of(orderDetails);

    return this;
  }

  public PaymentsCreateRequest addOrderDetailsItem(OrderDetailsWithAmount orderDetailsItem) {
    if (this.orderDetails == null || !this.orderDetails.isPresent()) {
      this.orderDetails = JsonNullable.<List<OrderDetailsWithAmount>>of(new ArrayList<>());
    }
    try {
      this.orderDetails.get().add(orderDetailsItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Information about the product , quantity and amount for connectors. (e.g. Klarna)
   * @return orderDetails
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public List<OrderDetailsWithAmount> getOrderDetails() {
        return orderDetails.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ORDER_DETAILS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<OrderDetailsWithAmount>> getOrderDetails_JsonNullable() {
    return orderDetails;
  }

  @JsonProperty(JSON_PROPERTY_ORDER_DETAILS)
  public void setOrderDetails_JsonNullable(JsonNullable<List<OrderDetailsWithAmount>> orderDetails) {
    this.orderDetails = orderDetails;
  }

  public void setOrderDetails(List<OrderDetailsWithAmount> orderDetails) {
    this.orderDetails = JsonNullable.<List<OrderDetailsWithAmount>>of(orderDetails);
  }


  public PaymentsCreateRequest clientSecret(String clientSecret) {
    this.clientSecret = JsonNullable.<String>of(clientSecret);

    return this;
  }

   /**
   * It&#39;s a token used for client side verification.
   * @return clientSecret
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public String getClientSecret() {
        return clientSecret.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_CLIENT_SECRET)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getClientSecret_JsonNullable() {
    return clientSecret;
  }

  @JsonProperty(JSON_PROPERTY_CLIENT_SECRET)
  public void setClientSecret_JsonNullable(JsonNullable<String> clientSecret) {
    this.clientSecret = clientSecret;
  }

  public void setClientSecret(String clientSecret) {
    this.clientSecret = JsonNullable.<String>of(clientSecret);
  }


  public PaymentsCreateRequest mandateData(MandateData mandateData) {
    this.mandateData = JsonNullable.<MandateData>of(mandateData);

    return this;
  }

   /**
   * Get mandateData
   * @return mandateData
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public MandateData getMandateData() {
        return mandateData.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_MANDATE_DATA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<MandateData> getMandateData_JsonNullable() {
    return mandateData;
  }

  @JsonProperty(JSON_PROPERTY_MANDATE_DATA)
  public void setMandateData_JsonNullable(JsonNullable<MandateData> mandateData) {
    this.mandateData = mandateData;
  }

  public void setMandateData(MandateData mandateData) {
    this.mandateData = JsonNullable.<MandateData>of(mandateData);
  }


  public PaymentsCreateRequest mandateId(String mandateId) {
    this.mandateId = JsonNullable.<String>of(mandateId);

    return this;
  }

   /**
   * A unique identifier to link the payment to a mandate, can be use instead of payment_method_data
   * @return mandateId
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public String getMandateId() {
        return mandateId.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_MANDATE_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getMandateId_JsonNullable() {
    return mandateId;
  }

  @JsonProperty(JSON_PROPERTY_MANDATE_ID)
  public void setMandateId_JsonNullable(JsonNullable<String> mandateId) {
    this.mandateId = mandateId;
  }

  public void setMandateId(String mandateId) {
    this.mandateId = JsonNullable.<String>of(mandateId);
  }


  public PaymentsCreateRequest browserInfo(Object browserInfo) {
    this.browserInfo = JsonNullable.<Object>of(browserInfo);

    return this;
  }

   /**
   * Additional details required by 3DS 2.0
   * @return browserInfo
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public Object getBrowserInfo() {
        return browserInfo.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_BROWSER_INFO)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Object> getBrowserInfo_JsonNullable() {
    return browserInfo;
  }

  @JsonProperty(JSON_PROPERTY_BROWSER_INFO)
  public void setBrowserInfo_JsonNullable(JsonNullable<Object> browserInfo) {
    this.browserInfo = browserInfo;
  }

  public void setBrowserInfo(Object browserInfo) {
    this.browserInfo = JsonNullable.<Object>of(browserInfo);
  }


  public PaymentsCreateRequest paymentExperience(PaymentExperience paymentExperience) {
    this.paymentExperience = JsonNullable.<PaymentExperience>of(paymentExperience);

    return this;
  }

   /**
   * Get paymentExperience
   * @return paymentExperience
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public PaymentExperience getPaymentExperience() {
        return paymentExperience.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PAYMENT_EXPERIENCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<PaymentExperience> getPaymentExperience_JsonNullable() {
    return paymentExperience;
  }

  @JsonProperty(JSON_PROPERTY_PAYMENT_EXPERIENCE)
  public void setPaymentExperience_JsonNullable(JsonNullable<PaymentExperience> paymentExperience) {
    this.paymentExperience = paymentExperience;
  }

  public void setPaymentExperience(PaymentExperience paymentExperience) {
    this.paymentExperience = JsonNullable.<PaymentExperience>of(paymentExperience);
  }


  public PaymentsCreateRequest paymentMethodType(PaymentMethodType paymentMethodType) {
    this.paymentMethodType = JsonNullable.<PaymentMethodType>of(paymentMethodType);

    return this;
  }

   /**
   * Get paymentMethodType
   * @return paymentMethodType
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public PaymentMethodType getPaymentMethodType() {
        return paymentMethodType.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PAYMENT_METHOD_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<PaymentMethodType> getPaymentMethodType_JsonNullable() {
    return paymentMethodType;
  }

  @JsonProperty(JSON_PROPERTY_PAYMENT_METHOD_TYPE)
  public void setPaymentMethodType_JsonNullable(JsonNullable<PaymentMethodType> paymentMethodType) {
    this.paymentMethodType = paymentMethodType;
  }

  public void setPaymentMethodType(PaymentMethodType paymentMethodType) {
    this.paymentMethodType = JsonNullable.<PaymentMethodType>of(paymentMethodType);
  }


  public PaymentsCreateRequest businessCountry(CountryAlpha2 businessCountry) {
    this.businessCountry = JsonNullable.<CountryAlpha2>of(businessCountry);

    return this;
  }

   /**
   * Get businessCountry
   * @return businessCountry
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public CountryAlpha2 getBusinessCountry() {
        return businessCountry.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_BUSINESS_COUNTRY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<CountryAlpha2> getBusinessCountry_JsonNullable() {
    return businessCountry;
  }

  @JsonProperty(JSON_PROPERTY_BUSINESS_COUNTRY)
  public void setBusinessCountry_JsonNullable(JsonNullable<CountryAlpha2> businessCountry) {
    this.businessCountry = businessCountry;
  }

  public void setBusinessCountry(CountryAlpha2 businessCountry) {
    this.businessCountry = JsonNullable.<CountryAlpha2>of(businessCountry);
  }


  public PaymentsCreateRequest businessLabel(String businessLabel) {
    this.businessLabel = JsonNullable.<String>of(businessLabel);

    return this;
  }

   /**
   * Business label of the merchant for this payment
   * @return businessLabel
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public String getBusinessLabel() {
        return businessLabel.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_BUSINESS_LABEL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getBusinessLabel_JsonNullable() {
    return businessLabel;
  }

  @JsonProperty(JSON_PROPERTY_BUSINESS_LABEL)
  public void setBusinessLabel_JsonNullable(JsonNullable<String> businessLabel) {
    this.businessLabel = businessLabel;
  }

  public void setBusinessLabel(String businessLabel) {
    this.businessLabel = JsonNullable.<String>of(businessLabel);
  }


  public PaymentsCreateRequest merchantConnectorDetails(MerchantConnectorDetailsWrap merchantConnectorDetails) {
    this.merchantConnectorDetails = JsonNullable.<MerchantConnectorDetailsWrap>of(merchantConnectorDetails);

    return this;
  }

   /**
   * Get merchantConnectorDetails
   * @return merchantConnectorDetails
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public MerchantConnectorDetailsWrap getMerchantConnectorDetails() {
        return merchantConnectorDetails.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_MERCHANT_CONNECTOR_DETAILS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<MerchantConnectorDetailsWrap> getMerchantConnectorDetails_JsonNullable() {
    return merchantConnectorDetails;
  }

  @JsonProperty(JSON_PROPERTY_MERCHANT_CONNECTOR_DETAILS)
  public void setMerchantConnectorDetails_JsonNullable(JsonNullable<MerchantConnectorDetailsWrap> merchantConnectorDetails) {
    this.merchantConnectorDetails = merchantConnectorDetails;
  }

  public void setMerchantConnectorDetails(MerchantConnectorDetailsWrap merchantConnectorDetails) {
    this.merchantConnectorDetails = JsonNullable.<MerchantConnectorDetailsWrap>of(merchantConnectorDetails);
  }


  public PaymentsCreateRequest allowedPaymentMethodTypes(List<PaymentMethodType> allowedPaymentMethodTypes) {
    this.allowedPaymentMethodTypes = JsonNullable.<List<PaymentMethodType>>of(allowedPaymentMethodTypes);

    return this;
  }

  public PaymentsCreateRequest addAllowedPaymentMethodTypesItem(PaymentMethodType allowedPaymentMethodTypesItem) {
    if (this.allowedPaymentMethodTypes == null || !this.allowedPaymentMethodTypes.isPresent()) {
      this.allowedPaymentMethodTypes = JsonNullable.<List<PaymentMethodType>>of(new ArrayList<>());
    }
    try {
      this.allowedPaymentMethodTypes.get().add(allowedPaymentMethodTypesItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Allowed Payment Method Types for a given PaymentIntent
   * @return allowedPaymentMethodTypes
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public List<PaymentMethodType> getAllowedPaymentMethodTypes() {
        return allowedPaymentMethodTypes.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ALLOWED_PAYMENT_METHOD_TYPES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<PaymentMethodType>> getAllowedPaymentMethodTypes_JsonNullable() {
    return allowedPaymentMethodTypes;
  }

  @JsonProperty(JSON_PROPERTY_ALLOWED_PAYMENT_METHOD_TYPES)
  public void setAllowedPaymentMethodTypes_JsonNullable(JsonNullable<List<PaymentMethodType>> allowedPaymentMethodTypes) {
    this.allowedPaymentMethodTypes = allowedPaymentMethodTypes;
  }

  public void setAllowedPaymentMethodTypes(List<PaymentMethodType> allowedPaymentMethodTypes) {
    this.allowedPaymentMethodTypes = JsonNullable.<List<PaymentMethodType>>of(allowedPaymentMethodTypes);
  }


  public PaymentsCreateRequest businessSubLabel(String businessSubLabel) {
    this.businessSubLabel = JsonNullable.<String>of(businessSubLabel);

    return this;
  }

   /**
   * Business sub label for the payment
   * @return businessSubLabel
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public String getBusinessSubLabel() {
        return businessSubLabel.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_BUSINESS_SUB_LABEL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getBusinessSubLabel_JsonNullable() {
    return businessSubLabel;
  }

  @JsonProperty(JSON_PROPERTY_BUSINESS_SUB_LABEL)
  public void setBusinessSubLabel_JsonNullable(JsonNullable<String> businessSubLabel) {
    this.businessSubLabel = businessSubLabel;
  }

  public void setBusinessSubLabel(String businessSubLabel) {
    this.businessSubLabel = JsonNullable.<String>of(businessSubLabel);
  }


  public PaymentsCreateRequest retryAction(RetryAction retryAction) {
    this.retryAction = JsonNullable.<RetryAction>of(retryAction);

    return this;
  }

   /**
   * Get retryAction
   * @return retryAction
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public RetryAction getRetryAction() {
        return retryAction.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_RETRY_ACTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<RetryAction> getRetryAction_JsonNullable() {
    return retryAction;
  }

  @JsonProperty(JSON_PROPERTY_RETRY_ACTION)
  public void setRetryAction_JsonNullable(JsonNullable<RetryAction> retryAction) {
    this.retryAction = retryAction;
  }

  public void setRetryAction(RetryAction retryAction) {
    this.retryAction = JsonNullable.<RetryAction>of(retryAction);
  }


  public PaymentsCreateRequest metadata(Object metadata) {
    this.metadata = JsonNullable.<Object>of(metadata);

    return this;
  }

   /**
   * You can specify up to 50 keys, with key names up to 40 characters long and values up to 500 characters long. Metadata is useful for storing additional, structured information on an object.
   * @return metadata
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public Object getMetadata() {
        return metadata.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_METADATA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Object> getMetadata_JsonNullable() {
    return metadata;
  }

  @JsonProperty(JSON_PROPERTY_METADATA)
  public void setMetadata_JsonNullable(JsonNullable<Object> metadata) {
    this.metadata = metadata;
  }

  public void setMetadata(Object metadata) {
    this.metadata = JsonNullable.<Object>of(metadata);
  }


  public PaymentsCreateRequest connectorMetadata(ConnectorMetadata connectorMetadata) {
    this.connectorMetadata = JsonNullable.<ConnectorMetadata>of(connectorMetadata);

    return this;
  }

   /**
   * Get connectorMetadata
   * @return connectorMetadata
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public ConnectorMetadata getConnectorMetadata() {
        return connectorMetadata.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_CONNECTOR_METADATA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<ConnectorMetadata> getConnectorMetadata_JsonNullable() {
    return connectorMetadata;
  }

  @JsonProperty(JSON_PROPERTY_CONNECTOR_METADATA)
  public void setConnectorMetadata_JsonNullable(JsonNullable<ConnectorMetadata> connectorMetadata) {
    this.connectorMetadata = connectorMetadata;
  }

  public void setConnectorMetadata(ConnectorMetadata connectorMetadata) {
    this.connectorMetadata = JsonNullable.<ConnectorMetadata>of(connectorMetadata);
  }


  public PaymentsCreateRequest featureMetadata(FeatureMetadata featureMetadata) {
    this.featureMetadata = JsonNullable.<FeatureMetadata>of(featureMetadata);

    return this;
  }

   /**
   * Get featureMetadata
   * @return featureMetadata
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public FeatureMetadata getFeatureMetadata() {
        return featureMetadata.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_FEATURE_METADATA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<FeatureMetadata> getFeatureMetadata_JsonNullable() {
    return featureMetadata;
  }

  @JsonProperty(JSON_PROPERTY_FEATURE_METADATA)
  public void setFeatureMetadata_JsonNullable(JsonNullable<FeatureMetadata> featureMetadata) {
    this.featureMetadata = featureMetadata;
  }

  public void setFeatureMetadata(FeatureMetadata featureMetadata) {
    this.featureMetadata = JsonNullable.<FeatureMetadata>of(featureMetadata);
  }


  public PaymentsCreateRequest paymentLink(Boolean paymentLink) {
    this.paymentLink = JsonNullable.<Boolean>of(paymentLink);

    return this;
  }

   /**
   * Whether to get the payment link (if applicable)
   * @return paymentLink
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public Boolean getPaymentLink() {
        return paymentLink.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PAYMENT_LINK)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Boolean> getPaymentLink_JsonNullable() {
    return paymentLink;
  }

  @JsonProperty(JSON_PROPERTY_PAYMENT_LINK)
  public void setPaymentLink_JsonNullable(JsonNullable<Boolean> paymentLink) {
    this.paymentLink = paymentLink;
  }

  public void setPaymentLink(Boolean paymentLink) {
    this.paymentLink = JsonNullable.<Boolean>of(paymentLink);
  }


  public PaymentsCreateRequest paymentLinkConfig(PaymentCreatePaymentLinkConfig paymentLinkConfig) {
    this.paymentLinkConfig = JsonNullable.<PaymentCreatePaymentLinkConfig>of(paymentLinkConfig);

    return this;
  }

   /**
   * Get paymentLinkConfig
   * @return paymentLinkConfig
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public PaymentCreatePaymentLinkConfig getPaymentLinkConfig() {
        return paymentLinkConfig.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PAYMENT_LINK_CONFIG)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<PaymentCreatePaymentLinkConfig> getPaymentLinkConfig_JsonNullable() {
    return paymentLinkConfig;
  }

  @JsonProperty(JSON_PROPERTY_PAYMENT_LINK_CONFIG)
  public void setPaymentLinkConfig_JsonNullable(JsonNullable<PaymentCreatePaymentLinkConfig> paymentLinkConfig) {
    this.paymentLinkConfig = paymentLinkConfig;
  }

  public void setPaymentLinkConfig(PaymentCreatePaymentLinkConfig paymentLinkConfig) {
    this.paymentLinkConfig = JsonNullable.<PaymentCreatePaymentLinkConfig>of(paymentLinkConfig);
  }


  public PaymentsCreateRequest profileId(String profileId) {
    this.profileId = JsonNullable.<String>of(profileId);

    return this;
  }

   /**
   * The business profile to use for this payment, if not passed the default business profile associated with the merchant account will be used.
   * @return profileId
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public String getProfileId() {
        return profileId.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PROFILE_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getProfileId_JsonNullable() {
    return profileId;
  }

  @JsonProperty(JSON_PROPERTY_PROFILE_ID)
  public void setProfileId_JsonNullable(JsonNullable<String> profileId) {
    this.profileId = profileId;
  }

  public void setProfileId(String profileId) {
    this.profileId = JsonNullable.<String>of(profileId);
  }


  public PaymentsCreateRequest surchargeDetails(RequestSurchargeDetails surchargeDetails) {
    this.surchargeDetails = JsonNullable.<RequestSurchargeDetails>of(surchargeDetails);

    return this;
  }

   /**
   * Get surchargeDetails
   * @return surchargeDetails
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public RequestSurchargeDetails getSurchargeDetails() {
        return surchargeDetails.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_SURCHARGE_DETAILS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<RequestSurchargeDetails> getSurchargeDetails_JsonNullable() {
    return surchargeDetails;
  }

  @JsonProperty(JSON_PROPERTY_SURCHARGE_DETAILS)
  public void setSurchargeDetails_JsonNullable(JsonNullable<RequestSurchargeDetails> surchargeDetails) {
    this.surchargeDetails = surchargeDetails;
  }

  public void setSurchargeDetails(RequestSurchargeDetails surchargeDetails) {
    this.surchargeDetails = JsonNullable.<RequestSurchargeDetails>of(surchargeDetails);
  }


  public PaymentsCreateRequest paymentType(PaymentType paymentType) {
    this.paymentType = JsonNullable.<PaymentType>of(paymentType);

    return this;
  }

   /**
   * Get paymentType
   * @return paymentType
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public PaymentType getPaymentType() {
        return paymentType.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PAYMENT_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<PaymentType> getPaymentType_JsonNullable() {
    return paymentType;
  }

  @JsonProperty(JSON_PROPERTY_PAYMENT_TYPE)
  public void setPaymentType_JsonNullable(JsonNullable<PaymentType> paymentType) {
    this.paymentType = paymentType;
  }

  public void setPaymentType(PaymentType paymentType) {
    this.paymentType = JsonNullable.<PaymentType>of(paymentType);
  }


  public PaymentsCreateRequest requestIncrementalAuthorization(Boolean requestIncrementalAuthorization) {
    this.requestIncrementalAuthorization = JsonNullable.<Boolean>of(requestIncrementalAuthorization);

    return this;
  }

   /**
   * Request for an incremental authorization
   * @return requestIncrementalAuthorization
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public Boolean getRequestIncrementalAuthorization() {
        return requestIncrementalAuthorization.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_REQUEST_INCREMENTAL_AUTHORIZATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Boolean> getRequestIncrementalAuthorization_JsonNullable() {
    return requestIncrementalAuthorization;
  }

  @JsonProperty(JSON_PROPERTY_REQUEST_INCREMENTAL_AUTHORIZATION)
  public void setRequestIncrementalAuthorization_JsonNullable(JsonNullable<Boolean> requestIncrementalAuthorization) {
    this.requestIncrementalAuthorization = requestIncrementalAuthorization;
  }

  public void setRequestIncrementalAuthorization(Boolean requestIncrementalAuthorization) {
    this.requestIncrementalAuthorization = JsonNullable.<Boolean>of(requestIncrementalAuthorization);
  }


  public PaymentsCreateRequest sessionExpiry(Integer sessionExpiry) {
    this.sessionExpiry = JsonNullable.<Integer>of(sessionExpiry);

    return this;
  }

   /**
   * Will be used to expire client secret after certain amount of time to be supplied in seconds (900) for 15 mins
   * minimum: 0
   * @return sessionExpiry
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public Integer getSessionExpiry() {
        return sessionExpiry.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_SESSION_EXPIRY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Integer> getSessionExpiry_JsonNullable() {
    return sessionExpiry;
  }

  @JsonProperty(JSON_PROPERTY_SESSION_EXPIRY)
  public void setSessionExpiry_JsonNullable(JsonNullable<Integer> sessionExpiry) {
    this.sessionExpiry = sessionExpiry;
  }

  public void setSessionExpiry(Integer sessionExpiry) {
    this.sessionExpiry = JsonNullable.<Integer>of(sessionExpiry);
  }


  public PaymentsCreateRequest frmMetadata(Object frmMetadata) {
    this.frmMetadata = JsonNullable.<Object>of(frmMetadata);

    return this;
  }

   /**
   * additional data related to some frm connectors
   * @return frmMetadata
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public Object getFrmMetadata() {
        return frmMetadata.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_FRM_METADATA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Object> getFrmMetadata_JsonNullable() {
    return frmMetadata;
  }

  @JsonProperty(JSON_PROPERTY_FRM_METADATA)
  public void setFrmMetadata_JsonNullable(JsonNullable<Object> frmMetadata) {
    this.frmMetadata = frmMetadata;
  }

  public void setFrmMetadata(Object frmMetadata) {
    this.frmMetadata = JsonNullable.<Object>of(frmMetadata);
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PaymentsCreateRequest paymentsCreateRequest = (PaymentsCreateRequest) o;
    return equalsNullable(this.paymentId, paymentsCreateRequest.paymentId) &&
        equalsNullable(this.merchantId, paymentsCreateRequest.merchantId) &&
        Objects.equals(this.amount, paymentsCreateRequest.amount) &&
        equalsNullable(this.routing, paymentsCreateRequest.routing) &&
        equalsNullable(this.connector, paymentsCreateRequest.connector) &&
        Objects.equals(this.currency, paymentsCreateRequest.currency) &&
        equalsNullable(this.captureMethod, paymentsCreateRequest.captureMethod) &&
        equalsNullable(this.amountToCapture, paymentsCreateRequest.amountToCapture) &&
        equalsNullable(this.captureOn, paymentsCreateRequest.captureOn) &&
        equalsNullable(this.confirm, paymentsCreateRequest.confirm) &&
        equalsNullable(this.customer, paymentsCreateRequest.customer) &&
        equalsNullable(this.customerId, paymentsCreateRequest.customerId) &&
        equalsNullable(this.email, paymentsCreateRequest.email) &&
        equalsNullable(this.name, paymentsCreateRequest.name) &&
        equalsNullable(this.phone, paymentsCreateRequest.phone) &&
        equalsNullable(this.phoneCountryCode, paymentsCreateRequest.phoneCountryCode) &&
        equalsNullable(this.offSession, paymentsCreateRequest.offSession) &&
        equalsNullable(this.description, paymentsCreateRequest.description) &&
        equalsNullable(this.returnUrl, paymentsCreateRequest.returnUrl) &&
        equalsNullable(this.setupFutureUsage, paymentsCreateRequest.setupFutureUsage) &&
        equalsNullable(this.authenticationType, paymentsCreateRequest.authenticationType) &&
        equalsNullable(this.paymentMethodData, paymentsCreateRequest.paymentMethodData) &&
        equalsNullable(this.paymentMethod, paymentsCreateRequest.paymentMethod) &&
        equalsNullable(this.paymentToken, paymentsCreateRequest.paymentToken) &&
        equalsNullable(this.recurringDetails, paymentsCreateRequest.recurringDetails) &&
        equalsNullable(this.cardCvc, paymentsCreateRequest.cardCvc) &&
        equalsNullable(this.shipping, paymentsCreateRequest.shipping) &&
        equalsNullable(this.billing, paymentsCreateRequest.billing) &&
        equalsNullable(this.statementDescriptorName, paymentsCreateRequest.statementDescriptorName) &&
        equalsNullable(this.statementDescriptorSuffix, paymentsCreateRequest.statementDescriptorSuffix) &&
        equalsNullable(this.orderDetails, paymentsCreateRequest.orderDetails) &&
        equalsNullable(this.clientSecret, paymentsCreateRequest.clientSecret) &&
        equalsNullable(this.mandateData, paymentsCreateRequest.mandateData) &&
        equalsNullable(this.mandateId, paymentsCreateRequest.mandateId) &&
        equalsNullable(this.browserInfo, paymentsCreateRequest.browserInfo) &&
        equalsNullable(this.paymentExperience, paymentsCreateRequest.paymentExperience) &&
        equalsNullable(this.paymentMethodType, paymentsCreateRequest.paymentMethodType) &&
        equalsNullable(this.businessCountry, paymentsCreateRequest.businessCountry) &&
        equalsNullable(this.businessLabel, paymentsCreateRequest.businessLabel) &&
        equalsNullable(this.merchantConnectorDetails, paymentsCreateRequest.merchantConnectorDetails) &&
        equalsNullable(this.allowedPaymentMethodTypes, paymentsCreateRequest.allowedPaymentMethodTypes) &&
        equalsNullable(this.businessSubLabel, paymentsCreateRequest.businessSubLabel) &&
        equalsNullable(this.retryAction, paymentsCreateRequest.retryAction) &&
        equalsNullable(this.metadata, paymentsCreateRequest.metadata) &&
        equalsNullable(this.connectorMetadata, paymentsCreateRequest.connectorMetadata) &&
        equalsNullable(this.featureMetadata, paymentsCreateRequest.featureMetadata) &&
        equalsNullable(this.paymentLink, paymentsCreateRequest.paymentLink) &&
        equalsNullable(this.paymentLinkConfig, paymentsCreateRequest.paymentLinkConfig) &&
        equalsNullable(this.profileId, paymentsCreateRequest.profileId) &&
        equalsNullable(this.surchargeDetails, paymentsCreateRequest.surchargeDetails) &&
        equalsNullable(this.paymentType, paymentsCreateRequest.paymentType) &&
        equalsNullable(this.requestIncrementalAuthorization, paymentsCreateRequest.requestIncrementalAuthorization) &&
        equalsNullable(this.sessionExpiry, paymentsCreateRequest.sessionExpiry) &&
        equalsNullable(this.frmMetadata, paymentsCreateRequest.frmMetadata);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(hashCodeNullable(paymentId), hashCodeNullable(merchantId), amount, hashCodeNullable(routing), hashCodeNullable(connector), currency, hashCodeNullable(captureMethod), hashCodeNullable(amountToCapture), hashCodeNullable(captureOn), hashCodeNullable(confirm), hashCodeNullable(customer), hashCodeNullable(customerId), hashCodeNullable(email), hashCodeNullable(name), hashCodeNullable(phone), hashCodeNullable(phoneCountryCode), hashCodeNullable(offSession), hashCodeNullable(description), hashCodeNullable(returnUrl), hashCodeNullable(setupFutureUsage), hashCodeNullable(authenticationType), hashCodeNullable(paymentMethodData), hashCodeNullable(paymentMethod), hashCodeNullable(paymentToken), hashCodeNullable(recurringDetails), hashCodeNullable(cardCvc), hashCodeNullable(shipping), hashCodeNullable(billing), hashCodeNullable(statementDescriptorName), hashCodeNullable(statementDescriptorSuffix), hashCodeNullable(orderDetails), hashCodeNullable(clientSecret), hashCodeNullable(mandateData), hashCodeNullable(mandateId), hashCodeNullable(browserInfo), hashCodeNullable(paymentExperience), hashCodeNullable(paymentMethodType), hashCodeNullable(businessCountry), hashCodeNullable(businessLabel), hashCodeNullable(merchantConnectorDetails), hashCodeNullable(allowedPaymentMethodTypes), hashCodeNullable(businessSubLabel), hashCodeNullable(retryAction), hashCodeNullable(metadata), hashCodeNullable(connectorMetadata), hashCodeNullable(featureMetadata), hashCodeNullable(paymentLink), hashCodeNullable(paymentLinkConfig), hashCodeNullable(profileId), hashCodeNullable(surchargeDetails), hashCodeNullable(paymentType), hashCodeNullable(requestIncrementalAuthorization), hashCodeNullable(sessionExpiry), hashCodeNullable(frmMetadata));
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PaymentsCreateRequest {\n");
    sb.append("    paymentId: ").append(toIndentedString(paymentId)).append("\n");
    sb.append("    merchantId: ").append(toIndentedString(merchantId)).append("\n");
    sb.append("    amount: ").append(toIndentedString(amount)).append("\n");
    sb.append("    routing: ").append(toIndentedString(routing)).append("\n");
    sb.append("    connector: ").append(toIndentedString(connector)).append("\n");
    sb.append("    currency: ").append(toIndentedString(currency)).append("\n");
    sb.append("    captureMethod: ").append(toIndentedString(captureMethod)).append("\n");
    sb.append("    amountToCapture: ").append(toIndentedString(amountToCapture)).append("\n");
    sb.append("    captureOn: ").append(toIndentedString(captureOn)).append("\n");
    sb.append("    confirm: ").append(toIndentedString(confirm)).append("\n");
    sb.append("    customer: ").append(toIndentedString(customer)).append("\n");
    sb.append("    customerId: ").append(toIndentedString(customerId)).append("\n");
    sb.append("    email: ").append(toIndentedString(email)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    phone: ").append(toIndentedString(phone)).append("\n");
    sb.append("    phoneCountryCode: ").append(toIndentedString(phoneCountryCode)).append("\n");
    sb.append("    offSession: ").append(toIndentedString(offSession)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    returnUrl: ").append(toIndentedString(returnUrl)).append("\n");
    sb.append("    setupFutureUsage: ").append(toIndentedString(setupFutureUsage)).append("\n");
    sb.append("    authenticationType: ").append(toIndentedString(authenticationType)).append("\n");
    sb.append("    paymentMethodData: ").append(toIndentedString(paymentMethodData)).append("\n");
    sb.append("    paymentMethod: ").append(toIndentedString(paymentMethod)).append("\n");
    sb.append("    paymentToken: ").append(toIndentedString(paymentToken)).append("\n");
    sb.append("    recurringDetails: ").append(toIndentedString(recurringDetails)).append("\n");
    sb.append("    cardCvc: ").append(toIndentedString(cardCvc)).append("\n");
    sb.append("    shipping: ").append(toIndentedString(shipping)).append("\n");
    sb.append("    billing: ").append(toIndentedString(billing)).append("\n");
    sb.append("    statementDescriptorName: ").append(toIndentedString(statementDescriptorName)).append("\n");
    sb.append("    statementDescriptorSuffix: ").append(toIndentedString(statementDescriptorSuffix)).append("\n");
    sb.append("    orderDetails: ").append(toIndentedString(orderDetails)).append("\n");
    sb.append("    clientSecret: ").append(toIndentedString(clientSecret)).append("\n");
    sb.append("    mandateData: ").append(toIndentedString(mandateData)).append("\n");
    sb.append("    mandateId: ").append(toIndentedString(mandateId)).append("\n");
    sb.append("    browserInfo: ").append(toIndentedString(browserInfo)).append("\n");
    sb.append("    paymentExperience: ").append(toIndentedString(paymentExperience)).append("\n");
    sb.append("    paymentMethodType: ").append(toIndentedString(paymentMethodType)).append("\n");
    sb.append("    businessCountry: ").append(toIndentedString(businessCountry)).append("\n");
    sb.append("    businessLabel: ").append(toIndentedString(businessLabel)).append("\n");
    sb.append("    merchantConnectorDetails: ").append(toIndentedString(merchantConnectorDetails)).append("\n");
    sb.append("    allowedPaymentMethodTypes: ").append(toIndentedString(allowedPaymentMethodTypes)).append("\n");
    sb.append("    businessSubLabel: ").append(toIndentedString(businessSubLabel)).append("\n");
    sb.append("    retryAction: ").append(toIndentedString(retryAction)).append("\n");
    sb.append("    metadata: ").append(toIndentedString(metadata)).append("\n");
    sb.append("    connectorMetadata: ").append(toIndentedString(connectorMetadata)).append("\n");
    sb.append("    featureMetadata: ").append(toIndentedString(featureMetadata)).append("\n");
    sb.append("    paymentLink: ").append(toIndentedString(paymentLink)).append("\n");
    sb.append("    paymentLinkConfig: ").append(toIndentedString(paymentLinkConfig)).append("\n");
    sb.append("    profileId: ").append(toIndentedString(profileId)).append("\n");
    sb.append("    surchargeDetails: ").append(toIndentedString(surchargeDetails)).append("\n");
    sb.append("    paymentType: ").append(toIndentedString(paymentType)).append("\n");
    sb.append("    requestIncrementalAuthorization: ").append(toIndentedString(requestIncrementalAuthorization)).append("\n");
    sb.append("    sessionExpiry: ").append(toIndentedString(sessionExpiry)).append("\n");
    sb.append("    frmMetadata: ").append(toIndentedString(frmMetadata)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

