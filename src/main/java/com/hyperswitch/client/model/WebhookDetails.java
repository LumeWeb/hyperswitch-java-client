/*
 * Hyperswitch - API Documentation
 *  ## Get started  Hyperswitch provides a collection of APIs that enable you to process and manage payments. Our APIs accept and return JSON in the HTTP body, and return standard HTTP response codes.  You can consume the APIs directly using your favorite HTTP/REST library.  We have a testing environment referred to \"sandbox\", which you can setup to test API calls without affecting production data. Currently, our sandbox environment is live while our production environment is under development and will be available soon. You can sign up on our Dashboard to get API keys to access Hyperswitch API.  ### Environment  Use the following base URLs when making requests to the APIs:  | Environment   |  Base URL                          | |---------------|------------------------------------| | Sandbox       | <https://sandbox.hyperswitch.io>   | | Production    | <https://api.hyperswitch.io>       |  ## Authentication  When you sign up on our [dashboard](https://app.hyperswitch.io) and create a merchant account, you are given a secret key (also referred as api-key) and a publishable key. You may authenticate all API requests with Hyperswitch server by providing the appropriate key in the request Authorization header.  | Key             |  Description                                                                                  | |-----------------|-----------------------------------------------------------------------------------------------| | api-key         | Private key. Used to authenticate all API requests from your merchant server                  | | publishable key | Unique identifier for your account. Used to authenticate API requests from your app's client  |  Never share your secret api keys. Keep them guarded and secure. 
 *
 * The version of the OpenAPI document: 0.1.0
 * Contact: hyperswitch@juspay.in
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.hyperswitch.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;
import java.io.UnsupportedEncodingException;
import java.net.URLEncoder;
import java.util.StringJoiner;

/**
 * WebhookDetails
 */
@JsonPropertyOrder({
  WebhookDetails.JSON_PROPERTY_WEBHOOK_VERSION,
  WebhookDetails.JSON_PROPERTY_WEBHOOK_USERNAME,
  WebhookDetails.JSON_PROPERTY_WEBHOOK_PASSWORD,
  WebhookDetails.JSON_PROPERTY_WEBHOOK_URL,
  WebhookDetails.JSON_PROPERTY_PAYMENT_CREATED_ENABLED,
  WebhookDetails.JSON_PROPERTY_PAYMENT_SUCCEEDED_ENABLED,
  WebhookDetails.JSON_PROPERTY_PAYMENT_FAILED_ENABLED
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class WebhookDetails {
  public static final String JSON_PROPERTY_WEBHOOK_VERSION = "webhook_version";
  private JsonNullable<String> webhookVersion = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_WEBHOOK_USERNAME = "webhook_username";
  private JsonNullable<String> webhookUsername = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_WEBHOOK_PASSWORD = "webhook_password";
  private JsonNullable<String> webhookPassword = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_WEBHOOK_URL = "webhook_url";
  private JsonNullable<String> webhookUrl = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_PAYMENT_CREATED_ENABLED = "payment_created_enabled";
  private JsonNullable<Boolean> paymentCreatedEnabled = JsonNullable.<Boolean>undefined();

  public static final String JSON_PROPERTY_PAYMENT_SUCCEEDED_ENABLED = "payment_succeeded_enabled";
  private JsonNullable<Boolean> paymentSucceededEnabled = JsonNullable.<Boolean>undefined();

  public static final String JSON_PROPERTY_PAYMENT_FAILED_ENABLED = "payment_failed_enabled";
  private JsonNullable<Boolean> paymentFailedEnabled = JsonNullable.<Boolean>undefined();

  public WebhookDetails() {
  }

  public WebhookDetails webhookVersion(String webhookVersion) {
    this.webhookVersion = JsonNullable.<String>of(webhookVersion);
    
    return this;
  }

   /**
   * The version for Webhook
   * @return webhookVersion
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public String getWebhookVersion() {
        return webhookVersion.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_WEBHOOK_VERSION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getWebhookVersion_JsonNullable() {
    return webhookVersion;
  }
  
  @JsonProperty(JSON_PROPERTY_WEBHOOK_VERSION)
  public void setWebhookVersion_JsonNullable(JsonNullable<String> webhookVersion) {
    this.webhookVersion = webhookVersion;
  }

  public void setWebhookVersion(String webhookVersion) {
    this.webhookVersion = JsonNullable.<String>of(webhookVersion);
  }


  public WebhookDetails webhookUsername(String webhookUsername) {
    this.webhookUsername = JsonNullable.<String>of(webhookUsername);
    
    return this;
  }

   /**
   * The user name for Webhook login
   * @return webhookUsername
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public String getWebhookUsername() {
        return webhookUsername.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_WEBHOOK_USERNAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getWebhookUsername_JsonNullable() {
    return webhookUsername;
  }
  
  @JsonProperty(JSON_PROPERTY_WEBHOOK_USERNAME)
  public void setWebhookUsername_JsonNullable(JsonNullable<String> webhookUsername) {
    this.webhookUsername = webhookUsername;
  }

  public void setWebhookUsername(String webhookUsername) {
    this.webhookUsername = JsonNullable.<String>of(webhookUsername);
  }


  public WebhookDetails webhookPassword(String webhookPassword) {
    this.webhookPassword = JsonNullable.<String>of(webhookPassword);
    
    return this;
  }

   /**
   * The password for Webhook login
   * @return webhookPassword
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public String getWebhookPassword() {
        return webhookPassword.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_WEBHOOK_PASSWORD)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getWebhookPassword_JsonNullable() {
    return webhookPassword;
  }
  
  @JsonProperty(JSON_PROPERTY_WEBHOOK_PASSWORD)
  public void setWebhookPassword_JsonNullable(JsonNullable<String> webhookPassword) {
    this.webhookPassword = webhookPassword;
  }

  public void setWebhookPassword(String webhookPassword) {
    this.webhookPassword = JsonNullable.<String>of(webhookPassword);
  }


  public WebhookDetails webhookUrl(String webhookUrl) {
    this.webhookUrl = JsonNullable.<String>of(webhookUrl);
    
    return this;
  }

   /**
   * The url for the webhook endpoint
   * @return webhookUrl
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public String getWebhookUrl() {
        return webhookUrl.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_WEBHOOK_URL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getWebhookUrl_JsonNullable() {
    return webhookUrl;
  }
  
  @JsonProperty(JSON_PROPERTY_WEBHOOK_URL)
  public void setWebhookUrl_JsonNullable(JsonNullable<String> webhookUrl) {
    this.webhookUrl = webhookUrl;
  }

  public void setWebhookUrl(String webhookUrl) {
    this.webhookUrl = JsonNullable.<String>of(webhookUrl);
  }


  public WebhookDetails paymentCreatedEnabled(Boolean paymentCreatedEnabled) {
    this.paymentCreatedEnabled = JsonNullable.<Boolean>of(paymentCreatedEnabled);
    
    return this;
  }

   /**
   * If this property is true, a webhook message is posted whenever a new payment is created
   * @return paymentCreatedEnabled
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public Boolean getPaymentCreatedEnabled() {
        return paymentCreatedEnabled.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PAYMENT_CREATED_ENABLED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Boolean> getPaymentCreatedEnabled_JsonNullable() {
    return paymentCreatedEnabled;
  }
  
  @JsonProperty(JSON_PROPERTY_PAYMENT_CREATED_ENABLED)
  public void setPaymentCreatedEnabled_JsonNullable(JsonNullable<Boolean> paymentCreatedEnabled) {
    this.paymentCreatedEnabled = paymentCreatedEnabled;
  }

  public void setPaymentCreatedEnabled(Boolean paymentCreatedEnabled) {
    this.paymentCreatedEnabled = JsonNullable.<Boolean>of(paymentCreatedEnabled);
  }


  public WebhookDetails paymentSucceededEnabled(Boolean paymentSucceededEnabled) {
    this.paymentSucceededEnabled = JsonNullable.<Boolean>of(paymentSucceededEnabled);
    
    return this;
  }

   /**
   * If this property is true, a webhook message is posted whenever a payment is successful
   * @return paymentSucceededEnabled
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public Boolean getPaymentSucceededEnabled() {
        return paymentSucceededEnabled.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PAYMENT_SUCCEEDED_ENABLED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Boolean> getPaymentSucceededEnabled_JsonNullable() {
    return paymentSucceededEnabled;
  }
  
  @JsonProperty(JSON_PROPERTY_PAYMENT_SUCCEEDED_ENABLED)
  public void setPaymentSucceededEnabled_JsonNullable(JsonNullable<Boolean> paymentSucceededEnabled) {
    this.paymentSucceededEnabled = paymentSucceededEnabled;
  }

  public void setPaymentSucceededEnabled(Boolean paymentSucceededEnabled) {
    this.paymentSucceededEnabled = JsonNullable.<Boolean>of(paymentSucceededEnabled);
  }


  public WebhookDetails paymentFailedEnabled(Boolean paymentFailedEnabled) {
    this.paymentFailedEnabled = JsonNullable.<Boolean>of(paymentFailedEnabled);
    
    return this;
  }

   /**
   * If this property is true, a webhook message is posted whenever a payment fails
   * @return paymentFailedEnabled
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public Boolean getPaymentFailedEnabled() {
        return paymentFailedEnabled.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PAYMENT_FAILED_ENABLED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Boolean> getPaymentFailedEnabled_JsonNullable() {
    return paymentFailedEnabled;
  }
  
  @JsonProperty(JSON_PROPERTY_PAYMENT_FAILED_ENABLED)
  public void setPaymentFailedEnabled_JsonNullable(JsonNullable<Boolean> paymentFailedEnabled) {
    this.paymentFailedEnabled = paymentFailedEnabled;
  }

  public void setPaymentFailedEnabled(Boolean paymentFailedEnabled) {
    this.paymentFailedEnabled = JsonNullable.<Boolean>of(paymentFailedEnabled);
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    WebhookDetails webhookDetails = (WebhookDetails) o;
    return equalsNullable(this.webhookVersion, webhookDetails.webhookVersion) &&
        equalsNullable(this.webhookUsername, webhookDetails.webhookUsername) &&
        equalsNullable(this.webhookPassword, webhookDetails.webhookPassword) &&
        equalsNullable(this.webhookUrl, webhookDetails.webhookUrl) &&
        equalsNullable(this.paymentCreatedEnabled, webhookDetails.paymentCreatedEnabled) &&
        equalsNullable(this.paymentSucceededEnabled, webhookDetails.paymentSucceededEnabled) &&
        equalsNullable(this.paymentFailedEnabled, webhookDetails.paymentFailedEnabled);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(hashCodeNullable(webhookVersion), hashCodeNullable(webhookUsername), hashCodeNullable(webhookPassword), hashCodeNullable(webhookUrl), hashCodeNullable(paymentCreatedEnabled), hashCodeNullable(paymentSucceededEnabled), hashCodeNullable(paymentFailedEnabled));
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class WebhookDetails {\n");
    sb.append("    webhookVersion: ").append(toIndentedString(webhookVersion)).append("\n");
    sb.append("    webhookUsername: ").append(toIndentedString(webhookUsername)).append("\n");
    sb.append("    webhookPassword: ").append(toIndentedString(webhookPassword)).append("\n");
    sb.append("    webhookUrl: ").append(toIndentedString(webhookUrl)).append("\n");
    sb.append("    paymentCreatedEnabled: ").append(toIndentedString(paymentCreatedEnabled)).append("\n");
    sb.append("    paymentSucceededEnabled: ").append(toIndentedString(paymentSucceededEnabled)).append("\n");
    sb.append("    paymentFailedEnabled: ").append(toIndentedString(paymentFailedEnabled)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  /**
   * Convert the instance into URL query string.
   *
   * @return URL query string
   */
  public String toUrlQueryString() {
    return toUrlQueryString(null);
  }

  /**
   * Convert the instance into URL query string.
   *
   * @param prefix prefix of the query string
   * @return URL query string
   */
  public String toUrlQueryString(String prefix) {
    String suffix = "";
    String containerSuffix = "";
    String containerPrefix = "";
    if (prefix == null) {
      // style=form, explode=true, e.g. /pet?name=cat&type=manx
      prefix = "";
    } else {
      // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
      prefix = prefix + "[";
      suffix = "]";
      containerSuffix = "]";
      containerPrefix = "[";
    }

    StringJoiner joiner = new StringJoiner("&");

    // add `webhook_version` to the URL query string
    if (getWebhookVersion() != null) {
      try {
        joiner.add(String.format("%swebhook_version%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getWebhookVersion()), "UTF-8").replaceAll("\\+", "%20")));
      } catch (UnsupportedEncodingException e) {
        // Should never happen, UTF-8 is always supported
        throw new RuntimeException(e);
      }
    }

    // add `webhook_username` to the URL query string
    if (getWebhookUsername() != null) {
      try {
        joiner.add(String.format("%swebhook_username%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getWebhookUsername()), "UTF-8").replaceAll("\\+", "%20")));
      } catch (UnsupportedEncodingException e) {
        // Should never happen, UTF-8 is always supported
        throw new RuntimeException(e);
      }
    }

    // add `webhook_password` to the URL query string
    if (getWebhookPassword() != null) {
      try {
        joiner.add(String.format("%swebhook_password%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getWebhookPassword()), "UTF-8").replaceAll("\\+", "%20")));
      } catch (UnsupportedEncodingException e) {
        // Should never happen, UTF-8 is always supported
        throw new RuntimeException(e);
      }
    }

    // add `webhook_url` to the URL query string
    if (getWebhookUrl() != null) {
      try {
        joiner.add(String.format("%swebhook_url%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getWebhookUrl()), "UTF-8").replaceAll("\\+", "%20")));
      } catch (UnsupportedEncodingException e) {
        // Should never happen, UTF-8 is always supported
        throw new RuntimeException(e);
      }
    }

    // add `payment_created_enabled` to the URL query string
    if (getPaymentCreatedEnabled() != null) {
      try {
        joiner.add(String.format("%spayment_created_enabled%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getPaymentCreatedEnabled()), "UTF-8").replaceAll("\\+", "%20")));
      } catch (UnsupportedEncodingException e) {
        // Should never happen, UTF-8 is always supported
        throw new RuntimeException(e);
      }
    }

    // add `payment_succeeded_enabled` to the URL query string
    if (getPaymentSucceededEnabled() != null) {
      try {
        joiner.add(String.format("%spayment_succeeded_enabled%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getPaymentSucceededEnabled()), "UTF-8").replaceAll("\\+", "%20")));
      } catch (UnsupportedEncodingException e) {
        // Should never happen, UTF-8 is always supported
        throw new RuntimeException(e);
      }
    }

    // add `payment_failed_enabled` to the URL query string
    if (getPaymentFailedEnabled() != null) {
      try {
        joiner.add(String.format("%spayment_failed_enabled%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getPaymentFailedEnabled()), "UTF-8").replaceAll("\\+", "%20")));
      } catch (UnsupportedEncodingException e) {
        // Should never happen, UTF-8 is always supported
        throw new RuntimeException(e);
      }
    }

    return joiner.toString();
  }

}

