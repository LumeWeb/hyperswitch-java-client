/*
 * Hyperswitch - API Documentation
 *  ## Get started  Hyperswitch provides a collection of APIs that enable you to process and manage payments. Our APIs accept and return JSON in the HTTP body, and return standard HTTP response codes.  You can consume the APIs directly using your favorite HTTP/REST library.  We have a testing environment referred to \"sandbox\", which you can setup to test API calls without affecting production data. Currently, our sandbox environment is live while our production environment is under development and will be available soon. You can sign up on our Dashboard to get API keys to access Hyperswitch API.  ### Environment  Use the following base URLs when making requests to the APIs:  | Environment   |  Base URL                          | |---------------|------------------------------------| | Sandbox       | <https://sandbox.hyperswitch.io>   | | Production    | <https://api.hyperswitch.io>       |  ## Authentication  When you sign up on our [dashboard](https://app.hyperswitch.io) and create a merchant account, you are given a secret key (also referred as api-key) and a publishable key. You may authenticate all API requests with Hyperswitch server by providing the appropriate key in the request Authorization header.  | Key             |  Description                                                                                  | |-----------------|-----------------------------------------------------------------------------------------------| | api-key         | Private key. Used to authenticate all API requests from your merchant server                  | | publishable key | Unique identifier for your account. Used to authenticate API requests from your app's client  |  Never share your secret api keys. Keep them guarded and secure. 
 *
 * The version of the OpenAPI document: 0.1.0
 * Contact: hyperswitch@juspay.in
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.hyperswitch.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.hyperswitch.model.RoutingAlgorithmKind;
import com.hyperswitch.model.TransactionType;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * RoutingDictionaryRecord
 */
@JsonPropertyOrder({
  RoutingDictionaryRecord.JSON_PROPERTY_ID,
  RoutingDictionaryRecord.JSON_PROPERTY_PROFILE_ID,
  RoutingDictionaryRecord.JSON_PROPERTY_NAME,
  RoutingDictionaryRecord.JSON_PROPERTY_KIND,
  RoutingDictionaryRecord.JSON_PROPERTY_DESCRIPTION,
  RoutingDictionaryRecord.JSON_PROPERTY_CREATED_AT,
  RoutingDictionaryRecord.JSON_PROPERTY_MODIFIED_AT,
  RoutingDictionaryRecord.JSON_PROPERTY_ALGORITHM_FOR
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.11.0-SNAPSHOT")
public class RoutingDictionaryRecord {
  public static final String JSON_PROPERTY_ID = "id";
  @javax.annotation.Nonnull
  private String id;

  public static final String JSON_PROPERTY_PROFILE_ID = "profile_id";
  @javax.annotation.Nonnull
  private String profileId;

  public static final String JSON_PROPERTY_NAME = "name";
  @javax.annotation.Nonnull
  private String name;

  public static final String JSON_PROPERTY_KIND = "kind";
  @javax.annotation.Nonnull
  private RoutingAlgorithmKind kind;

  public static final String JSON_PROPERTY_DESCRIPTION = "description";
  @javax.annotation.Nonnull
  private String description;

  public static final String JSON_PROPERTY_CREATED_AT = "created_at";
  @javax.annotation.Nonnull
  private Long createdAt;

  public static final String JSON_PROPERTY_MODIFIED_AT = "modified_at";
  @javax.annotation.Nonnull
  private Long modifiedAt;

  public static final String JSON_PROPERTY_ALGORITHM_FOR = "algorithm_for";
  private JsonNullable<TransactionType> algorithmFor = JsonNullable.<TransactionType>undefined();

  public RoutingDictionaryRecord() {
  }

  public RoutingDictionaryRecord id(@javax.annotation.Nonnull String id) {
    
    this.id = id;
    return this;
  }

  /**
   * Get id
   * @return id
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setId(@javax.annotation.Nonnull String id) {
    this.id = id;
  }


  public RoutingDictionaryRecord profileId(@javax.annotation.Nonnull String profileId) {
    
    this.profileId = profileId;
    return this;
  }

  /**
   * Get profileId
   * @return profileId
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_PROFILE_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getProfileId() {
    return profileId;
  }


  @JsonProperty(JSON_PROPERTY_PROFILE_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setProfileId(@javax.annotation.Nonnull String profileId) {
    this.profileId = profileId;
  }


  public RoutingDictionaryRecord name(@javax.annotation.Nonnull String name) {
    
    this.name = name;
    return this;
  }

  /**
   * Get name
   * @return name
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getName() {
    return name;
  }


  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setName(@javax.annotation.Nonnull String name) {
    this.name = name;
  }


  public RoutingDictionaryRecord kind(@javax.annotation.Nonnull RoutingAlgorithmKind kind) {
    
    this.kind = kind;
    return this;
  }

  /**
   * Get kind
   * @return kind
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_KIND)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public RoutingAlgorithmKind getKind() {
    return kind;
  }


  @JsonProperty(JSON_PROPERTY_KIND)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setKind(@javax.annotation.Nonnull RoutingAlgorithmKind kind) {
    this.kind = kind;
  }


  public RoutingDictionaryRecord description(@javax.annotation.Nonnull String description) {
    
    this.description = description;
    return this;
  }

  /**
   * Get description
   * @return description
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getDescription() {
    return description;
  }


  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setDescription(@javax.annotation.Nonnull String description) {
    this.description = description;
  }


  public RoutingDictionaryRecord createdAt(@javax.annotation.Nonnull Long createdAt) {
    
    this.createdAt = createdAt;
    return this;
  }

  /**
   * Get createdAt
   * @return createdAt
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_CREATED_AT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Long getCreatedAt() {
    return createdAt;
  }


  @JsonProperty(JSON_PROPERTY_CREATED_AT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setCreatedAt(@javax.annotation.Nonnull Long createdAt) {
    this.createdAt = createdAt;
  }


  public RoutingDictionaryRecord modifiedAt(@javax.annotation.Nonnull Long modifiedAt) {
    
    this.modifiedAt = modifiedAt;
    return this;
  }

  /**
   * Get modifiedAt
   * @return modifiedAt
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_MODIFIED_AT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Long getModifiedAt() {
    return modifiedAt;
  }


  @JsonProperty(JSON_PROPERTY_MODIFIED_AT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setModifiedAt(@javax.annotation.Nonnull Long modifiedAt) {
    this.modifiedAt = modifiedAt;
  }


  public RoutingDictionaryRecord algorithmFor(@javax.annotation.Nullable TransactionType algorithmFor) {
    this.algorithmFor = JsonNullable.<TransactionType>of(algorithmFor);
    
    return this;
  }

  /**
   * Get algorithmFor
   * @return algorithmFor
   */
  @javax.annotation.Nullable
  @JsonIgnore

  public TransactionType getAlgorithmFor() {
        return algorithmFor.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ALGORITHM_FOR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<TransactionType> getAlgorithmFor_JsonNullable() {
    return algorithmFor;
  }
  
  @JsonProperty(JSON_PROPERTY_ALGORITHM_FOR)
  public void setAlgorithmFor_JsonNullable(JsonNullable<TransactionType> algorithmFor) {
    this.algorithmFor = algorithmFor;
  }

  public void setAlgorithmFor(@javax.annotation.Nullable TransactionType algorithmFor) {
    this.algorithmFor = JsonNullable.<TransactionType>of(algorithmFor);
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RoutingDictionaryRecord routingDictionaryRecord = (RoutingDictionaryRecord) o;
    return Objects.equals(this.id, routingDictionaryRecord.id) &&
        Objects.equals(this.profileId, routingDictionaryRecord.profileId) &&
        Objects.equals(this.name, routingDictionaryRecord.name) &&
        Objects.equals(this.kind, routingDictionaryRecord.kind) &&
        Objects.equals(this.description, routingDictionaryRecord.description) &&
        Objects.equals(this.createdAt, routingDictionaryRecord.createdAt) &&
        Objects.equals(this.modifiedAt, routingDictionaryRecord.modifiedAt) &&
        equalsNullable(this.algorithmFor, routingDictionaryRecord.algorithmFor);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, profileId, name, kind, description, createdAt, modifiedAt, hashCodeNullable(algorithmFor));
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class RoutingDictionaryRecord {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    profileId: ").append(toIndentedString(profileId)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    kind: ").append(toIndentedString(kind)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    modifiedAt: ").append(toIndentedString(modifiedAt)).append("\n");
    sb.append("    algorithmFor: ").append(toIndentedString(algorithmFor)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

