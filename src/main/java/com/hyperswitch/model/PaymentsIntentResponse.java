/*
 * Hyperswitch - API Documentation
 *  ## Get started  Hyperswitch provides a collection of APIs that enable you to process and manage payments. Our APIs accept and return JSON in the HTTP body, and return standard HTTP response codes.  You can consume the APIs directly using your favorite HTTP/REST library.  We have a testing environment referred to \"sandbox\", which you can setup to test API calls without affecting production data. Currently, our sandbox environment is live while our production environment is under development and will be available soon. You can sign up on our Dashboard to get API keys to access Hyperswitch API.  ### Environment  Use the following base URLs when making requests to the APIs:  | Environment   |  Base URL                          | |---------------|------------------------------------| | Sandbox       | <https://sandbox.hyperswitch.io>   | | Production    | <https://api.hyperswitch.io>       |  ## Authentication  When you sign up on our [dashboard](https://app.hyperswitch.io) and create a merchant account, you are given a secret key (also referred as api-key) and a publishable key. You may authenticate all API requests with Hyperswitch server by providing the appropriate key in the request Authorization header.  | Key             |  Description                                                                                  | |-----------------|-----------------------------------------------------------------------------------------------| | api-key         | Private key. Used to authenticate all API requests from your merchant server                  | | publishable key | Unique identifier for your account. Used to authenticate API requests from your app's client  |  Never share your secret api keys. Keep them guarded and secure. 
 *
 * The version of the OpenAPI document: 0.1.0
 * Contact: hyperswitch@juspay.in
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.hyperswitch.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.hyperswitch.model.Address;
import com.hyperswitch.model.AmountDetailsResponse;
import com.hyperswitch.model.AuthenticationType;
import com.hyperswitch.model.CaptureMethod;
import com.hyperswitch.model.ConnectorMetadata;
import com.hyperswitch.model.EnablePaymentLinkRequest;
import com.hyperswitch.model.External3dsAuthenticationRequest;
import com.hyperswitch.model.FeatureMetadata;
import com.hyperswitch.model.FutureUsage;
import com.hyperswitch.model.IntentStatus;
import com.hyperswitch.model.MitExemptionRequest;
import com.hyperswitch.model.OrderDetailsWithAmount;
import com.hyperswitch.model.PaymentLinkConfigRequest;
import com.hyperswitch.model.PaymentMethodType;
import com.hyperswitch.model.PresenceOfCustomerDuringPayment;
import com.hyperswitch.model.RequestIncrementalAuthorization;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.List;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * PaymentsIntentResponse
 */
@JsonPropertyOrder({
  PaymentsIntentResponse.JSON_PROPERTY_ID,
  PaymentsIntentResponse.JSON_PROPERTY_STATUS,
  PaymentsIntentResponse.JSON_PROPERTY_AMOUNT_DETAILS,
  PaymentsIntentResponse.JSON_PROPERTY_CLIENT_SECRET,
  PaymentsIntentResponse.JSON_PROPERTY_MERCHANT_REFERENCE_ID,
  PaymentsIntentResponse.JSON_PROPERTY_ROUTING_ALGORITHM_ID,
  PaymentsIntentResponse.JSON_PROPERTY_CAPTURE_METHOD,
  PaymentsIntentResponse.JSON_PROPERTY_AUTHENTICATION_TYPE,
  PaymentsIntentResponse.JSON_PROPERTY_BILLING,
  PaymentsIntentResponse.JSON_PROPERTY_SHIPPING,
  PaymentsIntentResponse.JSON_PROPERTY_CUSTOMER_ID,
  PaymentsIntentResponse.JSON_PROPERTY_CUSTOMER_PRESENT,
  PaymentsIntentResponse.JSON_PROPERTY_DESCRIPTION,
  PaymentsIntentResponse.JSON_PROPERTY_RETURN_URL,
  PaymentsIntentResponse.JSON_PROPERTY_SETUP_FUTURE_USAGE,
  PaymentsIntentResponse.JSON_PROPERTY_APPLY_MIT_EXEMPTION,
  PaymentsIntentResponse.JSON_PROPERTY_STATEMENT_DESCRIPTOR,
  PaymentsIntentResponse.JSON_PROPERTY_ORDER_DETAILS,
  PaymentsIntentResponse.JSON_PROPERTY_ALLOWED_PAYMENT_METHOD_TYPES,
  PaymentsIntentResponse.JSON_PROPERTY_METADATA,
  PaymentsIntentResponse.JSON_PROPERTY_CONNECTOR_METADATA,
  PaymentsIntentResponse.JSON_PROPERTY_FEATURE_METADATA,
  PaymentsIntentResponse.JSON_PROPERTY_PAYMENT_LINK_ENABLED,
  PaymentsIntentResponse.JSON_PROPERTY_PAYMENT_LINK_CONFIG,
  PaymentsIntentResponse.JSON_PROPERTY_REQUEST_INCREMENTAL_AUTHORIZATION,
  PaymentsIntentResponse.JSON_PROPERTY_EXPIRES_ON,
  PaymentsIntentResponse.JSON_PROPERTY_FRM_METADATA,
  PaymentsIntentResponse.JSON_PROPERTY_REQUEST_EXTERNAL_THREE_DS_AUTHENTICATION
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class PaymentsIntentResponse {
  public static final String JSON_PROPERTY_ID = "id";
  private String id;

  public static final String JSON_PROPERTY_STATUS = "status";
  private IntentStatus status;

  public static final String JSON_PROPERTY_AMOUNT_DETAILS = "amount_details";
  private AmountDetailsResponse amountDetails;

  public static final String JSON_PROPERTY_CLIENT_SECRET = "client_secret";
  private String clientSecret;

  public static final String JSON_PROPERTY_MERCHANT_REFERENCE_ID = "merchant_reference_id";
  private JsonNullable<String> merchantReferenceId = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ROUTING_ALGORITHM_ID = "routing_algorithm_id";
  private JsonNullable<String> routingAlgorithmId = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_CAPTURE_METHOD = "capture_method";
  private CaptureMethod captureMethod;

  public static final String JSON_PROPERTY_AUTHENTICATION_TYPE = "authentication_type";
  private AuthenticationType authenticationType = AuthenticationType.NO_THREE_DS;

  public static final String JSON_PROPERTY_BILLING = "billing";
  private JsonNullable<Address> billing = JsonNullable.<Address>undefined();

  public static final String JSON_PROPERTY_SHIPPING = "shipping";
  private JsonNullable<Address> shipping = JsonNullable.<Address>undefined();

  public static final String JSON_PROPERTY_CUSTOMER_ID = "customer_id";
  private JsonNullable<String> customerId = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_CUSTOMER_PRESENT = "customer_present";
  private PresenceOfCustomerDuringPayment customerPresent;

  public static final String JSON_PROPERTY_DESCRIPTION = "description";
  private JsonNullable<String> description = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_RETURN_URL = "return_url";
  private JsonNullable<String> returnUrl = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_SETUP_FUTURE_USAGE = "setup_future_usage";
  private FutureUsage setupFutureUsage;

  public static final String JSON_PROPERTY_APPLY_MIT_EXEMPTION = "apply_mit_exemption";
  private MitExemptionRequest applyMitExemption;

  public static final String JSON_PROPERTY_STATEMENT_DESCRIPTOR = "statement_descriptor";
  private JsonNullable<String> statementDescriptor = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ORDER_DETAILS = "order_details";
  private JsonNullable<List<OrderDetailsWithAmount>> orderDetails = JsonNullable.<List<OrderDetailsWithAmount>>undefined();

  public static final String JSON_PROPERTY_ALLOWED_PAYMENT_METHOD_TYPES = "allowed_payment_method_types";
  private JsonNullable<List<PaymentMethodType>> allowedPaymentMethodTypes = JsonNullable.<List<PaymentMethodType>>undefined();

  public static final String JSON_PROPERTY_METADATA = "metadata";
  private JsonNullable<Object> metadata = JsonNullable.<Object>undefined();

  public static final String JSON_PROPERTY_CONNECTOR_METADATA = "connector_metadata";
  private JsonNullable<ConnectorMetadata> connectorMetadata = JsonNullable.<ConnectorMetadata>undefined();

  public static final String JSON_PROPERTY_FEATURE_METADATA = "feature_metadata";
  private JsonNullable<FeatureMetadata> featureMetadata = JsonNullable.<FeatureMetadata>undefined();

  public static final String JSON_PROPERTY_PAYMENT_LINK_ENABLED = "payment_link_enabled";
  private EnablePaymentLinkRequest paymentLinkEnabled;

  public static final String JSON_PROPERTY_PAYMENT_LINK_CONFIG = "payment_link_config";
  private JsonNullable<PaymentLinkConfigRequest> paymentLinkConfig = JsonNullable.<PaymentLinkConfigRequest>undefined();

  public static final String JSON_PROPERTY_REQUEST_INCREMENTAL_AUTHORIZATION = "request_incremental_authorization";
  private RequestIncrementalAuthorization requestIncrementalAuthorization;

  public static final String JSON_PROPERTY_EXPIRES_ON = "expires_on";
  private OffsetDateTime expiresOn;

  public static final String JSON_PROPERTY_FRM_METADATA = "frm_metadata";
  private JsonNullable<Object> frmMetadata = JsonNullable.<Object>undefined();

  public static final String JSON_PROPERTY_REQUEST_EXTERNAL_THREE_DS_AUTHENTICATION = "request_external_three_ds_authentication";
  private External3dsAuthenticationRequest requestExternalThreeDsAuthentication;

  public PaymentsIntentResponse() {
  }

  public PaymentsIntentResponse id(String id) {
    
    this.id = id;
    return this;
  }

   /**
   * Global Payment Id for the payment
   * @return id
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setId(String id) {
    this.id = id;
  }


  public PaymentsIntentResponse status(IntentStatus status) {
    
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_STATUS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public IntentStatus getStatus() {
    return status;
  }


  @JsonProperty(JSON_PROPERTY_STATUS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setStatus(IntentStatus status) {
    this.status = status;
  }


  public PaymentsIntentResponse amountDetails(AmountDetailsResponse amountDetails) {
    
    this.amountDetails = amountDetails;
    return this;
  }

   /**
   * Get amountDetails
   * @return amountDetails
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_AMOUNT_DETAILS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public AmountDetailsResponse getAmountDetails() {
    return amountDetails;
  }


  @JsonProperty(JSON_PROPERTY_AMOUNT_DETAILS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setAmountDetails(AmountDetailsResponse amountDetails) {
    this.amountDetails = amountDetails;
  }


  public PaymentsIntentResponse clientSecret(String clientSecret) {
    
    this.clientSecret = clientSecret;
    return this;
  }

   /**
   * It&#39;s a token used for client side verification.
   * @return clientSecret
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_CLIENT_SECRET)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getClientSecret() {
    return clientSecret;
  }


  @JsonProperty(JSON_PROPERTY_CLIENT_SECRET)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setClientSecret(String clientSecret) {
    this.clientSecret = clientSecret;
  }


  public PaymentsIntentResponse merchantReferenceId(String merchantReferenceId) {
    this.merchantReferenceId = JsonNullable.<String>of(merchantReferenceId);
    
    return this;
  }

   /**
   * Unique identifier for the payment. This ensures idempotency for multiple payments that have been done by a single merchant.
   * @return merchantReferenceId
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public String getMerchantReferenceId() {
        return merchantReferenceId.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_MERCHANT_REFERENCE_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getMerchantReferenceId_JsonNullable() {
    return merchantReferenceId;
  }
  
  @JsonProperty(JSON_PROPERTY_MERCHANT_REFERENCE_ID)
  public void setMerchantReferenceId_JsonNullable(JsonNullable<String> merchantReferenceId) {
    this.merchantReferenceId = merchantReferenceId;
  }

  public void setMerchantReferenceId(String merchantReferenceId) {
    this.merchantReferenceId = JsonNullable.<String>of(merchantReferenceId);
  }


  public PaymentsIntentResponse routingAlgorithmId(String routingAlgorithmId) {
    this.routingAlgorithmId = JsonNullable.<String>of(routingAlgorithmId);
    
    return this;
  }

   /**
   * The routing algorithm id to be used for the payment
   * @return routingAlgorithmId
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public String getRoutingAlgorithmId() {
        return routingAlgorithmId.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ROUTING_ALGORITHM_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getRoutingAlgorithmId_JsonNullable() {
    return routingAlgorithmId;
  }
  
  @JsonProperty(JSON_PROPERTY_ROUTING_ALGORITHM_ID)
  public void setRoutingAlgorithmId_JsonNullable(JsonNullable<String> routingAlgorithmId) {
    this.routingAlgorithmId = routingAlgorithmId;
  }

  public void setRoutingAlgorithmId(String routingAlgorithmId) {
    this.routingAlgorithmId = JsonNullable.<String>of(routingAlgorithmId);
  }


  public PaymentsIntentResponse captureMethod(CaptureMethod captureMethod) {
    
    this.captureMethod = captureMethod;
    return this;
  }

   /**
   * Get captureMethod
   * @return captureMethod
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_CAPTURE_METHOD)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public CaptureMethod getCaptureMethod() {
    return captureMethod;
  }


  @JsonProperty(JSON_PROPERTY_CAPTURE_METHOD)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setCaptureMethod(CaptureMethod captureMethod) {
    this.captureMethod = captureMethod;
  }


  public PaymentsIntentResponse authenticationType(AuthenticationType authenticationType) {
    
    this.authenticationType = authenticationType;
    return this;
  }

   /**
   * Get authenticationType
   * @return authenticationType
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_AUTHENTICATION_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public AuthenticationType getAuthenticationType() {
    return authenticationType;
  }


  @JsonProperty(JSON_PROPERTY_AUTHENTICATION_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setAuthenticationType(AuthenticationType authenticationType) {
    this.authenticationType = authenticationType;
  }


  public PaymentsIntentResponse billing(Address billing) {
    this.billing = JsonNullable.<Address>of(billing);
    
    return this;
  }

   /**
   * Get billing
   * @return billing
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public Address getBilling() {
        return billing.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_BILLING)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Address> getBilling_JsonNullable() {
    return billing;
  }
  
  @JsonProperty(JSON_PROPERTY_BILLING)
  public void setBilling_JsonNullable(JsonNullable<Address> billing) {
    this.billing = billing;
  }

  public void setBilling(Address billing) {
    this.billing = JsonNullable.<Address>of(billing);
  }


  public PaymentsIntentResponse shipping(Address shipping) {
    this.shipping = JsonNullable.<Address>of(shipping);
    
    return this;
  }

   /**
   * Get shipping
   * @return shipping
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public Address getShipping() {
        return shipping.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_SHIPPING)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Address> getShipping_JsonNullable() {
    return shipping;
  }
  
  @JsonProperty(JSON_PROPERTY_SHIPPING)
  public void setShipping_JsonNullable(JsonNullable<Address> shipping) {
    this.shipping = shipping;
  }

  public void setShipping(Address shipping) {
    this.shipping = JsonNullable.<Address>of(shipping);
  }


  public PaymentsIntentResponse customerId(String customerId) {
    this.customerId = JsonNullable.<String>of(customerId);
    
    return this;
  }

   /**
   * The identifier for the customer
   * @return customerId
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public String getCustomerId() {
        return customerId.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_CUSTOMER_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getCustomerId_JsonNullable() {
    return customerId;
  }
  
  @JsonProperty(JSON_PROPERTY_CUSTOMER_ID)
  public void setCustomerId_JsonNullable(JsonNullable<String> customerId) {
    this.customerId = customerId;
  }

  public void setCustomerId(String customerId) {
    this.customerId = JsonNullable.<String>of(customerId);
  }


  public PaymentsIntentResponse customerPresent(PresenceOfCustomerDuringPayment customerPresent) {
    
    this.customerPresent = customerPresent;
    return this;
  }

   /**
   * Get customerPresent
   * @return customerPresent
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_CUSTOMER_PRESENT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public PresenceOfCustomerDuringPayment getCustomerPresent() {
    return customerPresent;
  }


  @JsonProperty(JSON_PROPERTY_CUSTOMER_PRESENT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setCustomerPresent(PresenceOfCustomerDuringPayment customerPresent) {
    this.customerPresent = customerPresent;
  }


  public PaymentsIntentResponse description(String description) {
    this.description = JsonNullable.<String>of(description);
    
    return this;
  }

   /**
   * A description for the payment
   * @return description
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public String getDescription() {
        return description.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getDescription_JsonNullable() {
    return description;
  }
  
  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  public void setDescription_JsonNullable(JsonNullable<String> description) {
    this.description = description;
  }

  public void setDescription(String description) {
    this.description = JsonNullable.<String>of(description);
  }


  public PaymentsIntentResponse returnUrl(String returnUrl) {
    this.returnUrl = JsonNullable.<String>of(returnUrl);
    
    return this;
  }

   /**
   * The URL to which you want the user to be redirected after the completion of the payment operation
   * @return returnUrl
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public String getReturnUrl() {
        return returnUrl.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_RETURN_URL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getReturnUrl_JsonNullable() {
    return returnUrl;
  }
  
  @JsonProperty(JSON_PROPERTY_RETURN_URL)
  public void setReturnUrl_JsonNullable(JsonNullable<String> returnUrl) {
    this.returnUrl = returnUrl;
  }

  public void setReturnUrl(String returnUrl) {
    this.returnUrl = JsonNullable.<String>of(returnUrl);
  }


  public PaymentsIntentResponse setupFutureUsage(FutureUsage setupFutureUsage) {
    
    this.setupFutureUsage = setupFutureUsage;
    return this;
  }

   /**
   * Get setupFutureUsage
   * @return setupFutureUsage
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_SETUP_FUTURE_USAGE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public FutureUsage getSetupFutureUsage() {
    return setupFutureUsage;
  }


  @JsonProperty(JSON_PROPERTY_SETUP_FUTURE_USAGE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setSetupFutureUsage(FutureUsage setupFutureUsage) {
    this.setupFutureUsage = setupFutureUsage;
  }


  public PaymentsIntentResponse applyMitExemption(MitExemptionRequest applyMitExemption) {
    
    this.applyMitExemption = applyMitExemption;
    return this;
  }

   /**
   * Get applyMitExemption
   * @return applyMitExemption
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_APPLY_MIT_EXEMPTION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public MitExemptionRequest getApplyMitExemption() {
    return applyMitExemption;
  }


  @JsonProperty(JSON_PROPERTY_APPLY_MIT_EXEMPTION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setApplyMitExemption(MitExemptionRequest applyMitExemption) {
    this.applyMitExemption = applyMitExemption;
  }


  public PaymentsIntentResponse statementDescriptor(String statementDescriptor) {
    this.statementDescriptor = JsonNullable.<String>of(statementDescriptor);
    
    return this;
  }

   /**
   * For non-card charges, you can use this value as the complete description that appears on your customers’ statements. Must contain at least one letter, maximum 22 characters.
   * @return statementDescriptor
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public String getStatementDescriptor() {
        return statementDescriptor.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_STATEMENT_DESCRIPTOR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getStatementDescriptor_JsonNullable() {
    return statementDescriptor;
  }
  
  @JsonProperty(JSON_PROPERTY_STATEMENT_DESCRIPTOR)
  public void setStatementDescriptor_JsonNullable(JsonNullable<String> statementDescriptor) {
    this.statementDescriptor = statementDescriptor;
  }

  public void setStatementDescriptor(String statementDescriptor) {
    this.statementDescriptor = JsonNullable.<String>of(statementDescriptor);
  }


  public PaymentsIntentResponse orderDetails(List<OrderDetailsWithAmount> orderDetails) {
    this.orderDetails = JsonNullable.<List<OrderDetailsWithAmount>>of(orderDetails);
    
    return this;
  }

  public PaymentsIntentResponse addOrderDetailsItem(OrderDetailsWithAmount orderDetailsItem) {
    if (this.orderDetails == null || !this.orderDetails.isPresent()) {
      this.orderDetails = JsonNullable.<List<OrderDetailsWithAmount>>of(new ArrayList<>());
    }
    try {
      this.orderDetails.get().add(orderDetailsItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Use this object to capture the details about the different products for which the payment is being made. The sum of amount across different products here should be equal to the overall payment amount
   * @return orderDetails
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public List<OrderDetailsWithAmount> getOrderDetails() {
        return orderDetails.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ORDER_DETAILS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<OrderDetailsWithAmount>> getOrderDetails_JsonNullable() {
    return orderDetails;
  }
  
  @JsonProperty(JSON_PROPERTY_ORDER_DETAILS)
  public void setOrderDetails_JsonNullable(JsonNullable<List<OrderDetailsWithAmount>> orderDetails) {
    this.orderDetails = orderDetails;
  }

  public void setOrderDetails(List<OrderDetailsWithAmount> orderDetails) {
    this.orderDetails = JsonNullable.<List<OrderDetailsWithAmount>>of(orderDetails);
  }


  public PaymentsIntentResponse allowedPaymentMethodTypes(List<PaymentMethodType> allowedPaymentMethodTypes) {
    this.allowedPaymentMethodTypes = JsonNullable.<List<PaymentMethodType>>of(allowedPaymentMethodTypes);
    
    return this;
  }

  public PaymentsIntentResponse addAllowedPaymentMethodTypesItem(PaymentMethodType allowedPaymentMethodTypesItem) {
    if (this.allowedPaymentMethodTypes == null || !this.allowedPaymentMethodTypes.isPresent()) {
      this.allowedPaymentMethodTypes = JsonNullable.<List<PaymentMethodType>>of(new ArrayList<>());
    }
    try {
      this.allowedPaymentMethodTypes.get().add(allowedPaymentMethodTypesItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Use this parameter to restrict the Payment Method Types to show for a given PaymentIntent
   * @return allowedPaymentMethodTypes
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public List<PaymentMethodType> getAllowedPaymentMethodTypes() {
        return allowedPaymentMethodTypes.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ALLOWED_PAYMENT_METHOD_TYPES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<PaymentMethodType>> getAllowedPaymentMethodTypes_JsonNullable() {
    return allowedPaymentMethodTypes;
  }
  
  @JsonProperty(JSON_PROPERTY_ALLOWED_PAYMENT_METHOD_TYPES)
  public void setAllowedPaymentMethodTypes_JsonNullable(JsonNullable<List<PaymentMethodType>> allowedPaymentMethodTypes) {
    this.allowedPaymentMethodTypes = allowedPaymentMethodTypes;
  }

  public void setAllowedPaymentMethodTypes(List<PaymentMethodType> allowedPaymentMethodTypes) {
    this.allowedPaymentMethodTypes = JsonNullable.<List<PaymentMethodType>>of(allowedPaymentMethodTypes);
  }


  public PaymentsIntentResponse metadata(Object metadata) {
    this.metadata = JsonNullable.<Object>of(metadata);
    
    return this;
  }

   /**
   * Metadata is useful for storing additional, unstructured information on an object.
   * @return metadata
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public Object getMetadata() {
        return metadata.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_METADATA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Object> getMetadata_JsonNullable() {
    return metadata;
  }
  
  @JsonProperty(JSON_PROPERTY_METADATA)
  public void setMetadata_JsonNullable(JsonNullable<Object> metadata) {
    this.metadata = metadata;
  }

  public void setMetadata(Object metadata) {
    this.metadata = JsonNullable.<Object>of(metadata);
  }


  public PaymentsIntentResponse connectorMetadata(ConnectorMetadata connectorMetadata) {
    this.connectorMetadata = JsonNullable.<ConnectorMetadata>of(connectorMetadata);
    
    return this;
  }

   /**
   * Get connectorMetadata
   * @return connectorMetadata
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public ConnectorMetadata getConnectorMetadata() {
        return connectorMetadata.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_CONNECTOR_METADATA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<ConnectorMetadata> getConnectorMetadata_JsonNullable() {
    return connectorMetadata;
  }
  
  @JsonProperty(JSON_PROPERTY_CONNECTOR_METADATA)
  public void setConnectorMetadata_JsonNullable(JsonNullable<ConnectorMetadata> connectorMetadata) {
    this.connectorMetadata = connectorMetadata;
  }

  public void setConnectorMetadata(ConnectorMetadata connectorMetadata) {
    this.connectorMetadata = JsonNullable.<ConnectorMetadata>of(connectorMetadata);
  }


  public PaymentsIntentResponse featureMetadata(FeatureMetadata featureMetadata) {
    this.featureMetadata = JsonNullable.<FeatureMetadata>of(featureMetadata);
    
    return this;
  }

   /**
   * Get featureMetadata
   * @return featureMetadata
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public FeatureMetadata getFeatureMetadata() {
        return featureMetadata.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_FEATURE_METADATA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<FeatureMetadata> getFeatureMetadata_JsonNullable() {
    return featureMetadata;
  }
  
  @JsonProperty(JSON_PROPERTY_FEATURE_METADATA)
  public void setFeatureMetadata_JsonNullable(JsonNullable<FeatureMetadata> featureMetadata) {
    this.featureMetadata = featureMetadata;
  }

  public void setFeatureMetadata(FeatureMetadata featureMetadata) {
    this.featureMetadata = JsonNullable.<FeatureMetadata>of(featureMetadata);
  }


  public PaymentsIntentResponse paymentLinkEnabled(EnablePaymentLinkRequest paymentLinkEnabled) {
    
    this.paymentLinkEnabled = paymentLinkEnabled;
    return this;
  }

   /**
   * Get paymentLinkEnabled
   * @return paymentLinkEnabled
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_PAYMENT_LINK_ENABLED)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public EnablePaymentLinkRequest getPaymentLinkEnabled() {
    return paymentLinkEnabled;
  }


  @JsonProperty(JSON_PROPERTY_PAYMENT_LINK_ENABLED)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setPaymentLinkEnabled(EnablePaymentLinkRequest paymentLinkEnabled) {
    this.paymentLinkEnabled = paymentLinkEnabled;
  }


  public PaymentsIntentResponse paymentLinkConfig(PaymentLinkConfigRequest paymentLinkConfig) {
    this.paymentLinkConfig = JsonNullable.<PaymentLinkConfigRequest>of(paymentLinkConfig);
    
    return this;
  }

   /**
   * Get paymentLinkConfig
   * @return paymentLinkConfig
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public PaymentLinkConfigRequest getPaymentLinkConfig() {
        return paymentLinkConfig.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PAYMENT_LINK_CONFIG)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<PaymentLinkConfigRequest> getPaymentLinkConfig_JsonNullable() {
    return paymentLinkConfig;
  }
  
  @JsonProperty(JSON_PROPERTY_PAYMENT_LINK_CONFIG)
  public void setPaymentLinkConfig_JsonNullable(JsonNullable<PaymentLinkConfigRequest> paymentLinkConfig) {
    this.paymentLinkConfig = paymentLinkConfig;
  }

  public void setPaymentLinkConfig(PaymentLinkConfigRequest paymentLinkConfig) {
    this.paymentLinkConfig = JsonNullable.<PaymentLinkConfigRequest>of(paymentLinkConfig);
  }


  public PaymentsIntentResponse requestIncrementalAuthorization(RequestIncrementalAuthorization requestIncrementalAuthorization) {
    
    this.requestIncrementalAuthorization = requestIncrementalAuthorization;
    return this;
  }

   /**
   * Get requestIncrementalAuthorization
   * @return requestIncrementalAuthorization
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_REQUEST_INCREMENTAL_AUTHORIZATION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public RequestIncrementalAuthorization getRequestIncrementalAuthorization() {
    return requestIncrementalAuthorization;
  }


  @JsonProperty(JSON_PROPERTY_REQUEST_INCREMENTAL_AUTHORIZATION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setRequestIncrementalAuthorization(RequestIncrementalAuthorization requestIncrementalAuthorization) {
    this.requestIncrementalAuthorization = requestIncrementalAuthorization;
  }


  public PaymentsIntentResponse expiresOn(OffsetDateTime expiresOn) {
    
    this.expiresOn = expiresOn;
    return this;
  }

   /**
   * Will be used to expire client secret after certain amount of time to be supplied in seconds
   * @return expiresOn
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_EXPIRES_ON)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public OffsetDateTime getExpiresOn() {
    return expiresOn;
  }


  @JsonProperty(JSON_PROPERTY_EXPIRES_ON)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setExpiresOn(OffsetDateTime expiresOn) {
    this.expiresOn = expiresOn;
  }


  public PaymentsIntentResponse frmMetadata(Object frmMetadata) {
    this.frmMetadata = JsonNullable.<Object>of(frmMetadata);
    
    return this;
  }

   /**
   * Additional data related to some frm(Fraud Risk Management) connectors
   * @return frmMetadata
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public Object getFrmMetadata() {
        return frmMetadata.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_FRM_METADATA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Object> getFrmMetadata_JsonNullable() {
    return frmMetadata;
  }
  
  @JsonProperty(JSON_PROPERTY_FRM_METADATA)
  public void setFrmMetadata_JsonNullable(JsonNullable<Object> frmMetadata) {
    this.frmMetadata = frmMetadata;
  }

  public void setFrmMetadata(Object frmMetadata) {
    this.frmMetadata = JsonNullable.<Object>of(frmMetadata);
  }


  public PaymentsIntentResponse requestExternalThreeDsAuthentication(External3dsAuthenticationRequest requestExternalThreeDsAuthentication) {
    
    this.requestExternalThreeDsAuthentication = requestExternalThreeDsAuthentication;
    return this;
  }

   /**
   * Get requestExternalThreeDsAuthentication
   * @return requestExternalThreeDsAuthentication
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_REQUEST_EXTERNAL_THREE_DS_AUTHENTICATION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public External3dsAuthenticationRequest getRequestExternalThreeDsAuthentication() {
    return requestExternalThreeDsAuthentication;
  }


  @JsonProperty(JSON_PROPERTY_REQUEST_EXTERNAL_THREE_DS_AUTHENTICATION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setRequestExternalThreeDsAuthentication(External3dsAuthenticationRequest requestExternalThreeDsAuthentication) {
    this.requestExternalThreeDsAuthentication = requestExternalThreeDsAuthentication;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PaymentsIntentResponse paymentsIntentResponse = (PaymentsIntentResponse) o;
    return Objects.equals(this.id, paymentsIntentResponse.id) &&
        Objects.equals(this.status, paymentsIntentResponse.status) &&
        Objects.equals(this.amountDetails, paymentsIntentResponse.amountDetails) &&
        Objects.equals(this.clientSecret, paymentsIntentResponse.clientSecret) &&
        equalsNullable(this.merchantReferenceId, paymentsIntentResponse.merchantReferenceId) &&
        equalsNullable(this.routingAlgorithmId, paymentsIntentResponse.routingAlgorithmId) &&
        Objects.equals(this.captureMethod, paymentsIntentResponse.captureMethod) &&
        Objects.equals(this.authenticationType, paymentsIntentResponse.authenticationType) &&
        equalsNullable(this.billing, paymentsIntentResponse.billing) &&
        equalsNullable(this.shipping, paymentsIntentResponse.shipping) &&
        equalsNullable(this.customerId, paymentsIntentResponse.customerId) &&
        Objects.equals(this.customerPresent, paymentsIntentResponse.customerPresent) &&
        equalsNullable(this.description, paymentsIntentResponse.description) &&
        equalsNullable(this.returnUrl, paymentsIntentResponse.returnUrl) &&
        Objects.equals(this.setupFutureUsage, paymentsIntentResponse.setupFutureUsage) &&
        Objects.equals(this.applyMitExemption, paymentsIntentResponse.applyMitExemption) &&
        equalsNullable(this.statementDescriptor, paymentsIntentResponse.statementDescriptor) &&
        equalsNullable(this.orderDetails, paymentsIntentResponse.orderDetails) &&
        equalsNullable(this.allowedPaymentMethodTypes, paymentsIntentResponse.allowedPaymentMethodTypes) &&
        equalsNullable(this.metadata, paymentsIntentResponse.metadata) &&
        equalsNullable(this.connectorMetadata, paymentsIntentResponse.connectorMetadata) &&
        equalsNullable(this.featureMetadata, paymentsIntentResponse.featureMetadata) &&
        Objects.equals(this.paymentLinkEnabled, paymentsIntentResponse.paymentLinkEnabled) &&
        equalsNullable(this.paymentLinkConfig, paymentsIntentResponse.paymentLinkConfig) &&
        Objects.equals(this.requestIncrementalAuthorization, paymentsIntentResponse.requestIncrementalAuthorization) &&
        Objects.equals(this.expiresOn, paymentsIntentResponse.expiresOn) &&
        equalsNullable(this.frmMetadata, paymentsIntentResponse.frmMetadata) &&
        Objects.equals(this.requestExternalThreeDsAuthentication, paymentsIntentResponse.requestExternalThreeDsAuthentication);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, status, amountDetails, clientSecret, hashCodeNullable(merchantReferenceId), hashCodeNullable(routingAlgorithmId), captureMethod, authenticationType, hashCodeNullable(billing), hashCodeNullable(shipping), hashCodeNullable(customerId), customerPresent, hashCodeNullable(description), hashCodeNullable(returnUrl), setupFutureUsage, applyMitExemption, hashCodeNullable(statementDescriptor), hashCodeNullable(orderDetails), hashCodeNullable(allowedPaymentMethodTypes), hashCodeNullable(metadata), hashCodeNullable(connectorMetadata), hashCodeNullable(featureMetadata), paymentLinkEnabled, hashCodeNullable(paymentLinkConfig), requestIncrementalAuthorization, expiresOn, hashCodeNullable(frmMetadata), requestExternalThreeDsAuthentication);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PaymentsIntentResponse {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    amountDetails: ").append(toIndentedString(amountDetails)).append("\n");
    sb.append("    clientSecret: ").append(toIndentedString(clientSecret)).append("\n");
    sb.append("    merchantReferenceId: ").append(toIndentedString(merchantReferenceId)).append("\n");
    sb.append("    routingAlgorithmId: ").append(toIndentedString(routingAlgorithmId)).append("\n");
    sb.append("    captureMethod: ").append(toIndentedString(captureMethod)).append("\n");
    sb.append("    authenticationType: ").append(toIndentedString(authenticationType)).append("\n");
    sb.append("    billing: ").append(toIndentedString(billing)).append("\n");
    sb.append("    shipping: ").append(toIndentedString(shipping)).append("\n");
    sb.append("    customerId: ").append(toIndentedString(customerId)).append("\n");
    sb.append("    customerPresent: ").append(toIndentedString(customerPresent)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    returnUrl: ").append(toIndentedString(returnUrl)).append("\n");
    sb.append("    setupFutureUsage: ").append(toIndentedString(setupFutureUsage)).append("\n");
    sb.append("    applyMitExemption: ").append(toIndentedString(applyMitExemption)).append("\n");
    sb.append("    statementDescriptor: ").append(toIndentedString(statementDescriptor)).append("\n");
    sb.append("    orderDetails: ").append(toIndentedString(orderDetails)).append("\n");
    sb.append("    allowedPaymentMethodTypes: ").append(toIndentedString(allowedPaymentMethodTypes)).append("\n");
    sb.append("    metadata: ").append(toIndentedString(metadata)).append("\n");
    sb.append("    connectorMetadata: ").append(toIndentedString(connectorMetadata)).append("\n");
    sb.append("    featureMetadata: ").append(toIndentedString(featureMetadata)).append("\n");
    sb.append("    paymentLinkEnabled: ").append(toIndentedString(paymentLinkEnabled)).append("\n");
    sb.append("    paymentLinkConfig: ").append(toIndentedString(paymentLinkConfig)).append("\n");
    sb.append("    requestIncrementalAuthorization: ").append(toIndentedString(requestIncrementalAuthorization)).append("\n");
    sb.append("    expiresOn: ").append(toIndentedString(expiresOn)).append("\n");
    sb.append("    frmMetadata: ").append(toIndentedString(frmMetadata)).append("\n");
    sb.append("    requestExternalThreeDsAuthentication: ").append(toIndentedString(requestExternalThreeDsAuthentication)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

