/*
 * Hyperswitch - API Documentation
 *  ## Get started  Hyperswitch provides a collection of APIs that enable you to process and manage payments. Our APIs accept and return JSON in the HTTP body, and return standard HTTP response codes.  You can consume the APIs directly using your favorite HTTP/REST library.  We have a testing environment referred to \"sandbox\", which you can setup to test API calls without affecting production data. Currently, our sandbox environment is live while our production environment is under development and will be available soon. You can sign up on our Dashboard to get API keys to access Hyperswitch API.  ### Environment  Use the following base URLs when making requests to the APIs:  | Environment   |  Base URL                          | |---------------|------------------------------------| | Sandbox       | <https://sandbox.hyperswitch.io>   | | Production    | <https://api.hyperswitch.io>       |  ## Authentication  When you sign up on our [dashboard](https://app.hyperswitch.io) and create a merchant account, you are given a secret key (also referred as api-key) and a publishable key. You may authenticate all API requests with Hyperswitch server by providing the appropriate key in the request Authorization header.  | Key             |  Description                                                                                  | |-----------------|-----------------------------------------------------------------------------------------------| | api-key         | Private key. Used to authenticate all API requests from your merchant server                  | | publishable key | Unique identifier for your account. Used to authenticate API requests from your app's client  |  Never share your secret api keys. Keep them guarded and secure. 
 *
 * The version of the OpenAPI document: 0.1.0
 * Contact: hyperswitch@juspay.in
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.hyperswitch.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.hyperswitch.model.Currency;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * PazeSessionTokenResponse
 */
@JsonPropertyOrder({
  PazeSessionTokenResponse.JSON_PROPERTY_CLIENT_ID,
  PazeSessionTokenResponse.JSON_PROPERTY_CLIENT_NAME,
  PazeSessionTokenResponse.JSON_PROPERTY_CLIENT_PROFILE_ID,
  PazeSessionTokenResponse.JSON_PROPERTY_TRANSACTION_CURRENCY_CODE,
  PazeSessionTokenResponse.JSON_PROPERTY_TRANSACTION_AMOUNT,
  PazeSessionTokenResponse.JSON_PROPERTY_EMAIL_ADDRESS
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class PazeSessionTokenResponse {
  public static final String JSON_PROPERTY_CLIENT_ID = "client_id";
  private String clientId;

  public static final String JSON_PROPERTY_CLIENT_NAME = "client_name";
  private String clientName;

  public static final String JSON_PROPERTY_CLIENT_PROFILE_ID = "client_profile_id";
  private String clientProfileId;

  public static final String JSON_PROPERTY_TRANSACTION_CURRENCY_CODE = "transaction_currency_code";
  private Currency transactionCurrencyCode;

  public static final String JSON_PROPERTY_TRANSACTION_AMOUNT = "transaction_amount";
  private String transactionAmount;

  public static final String JSON_PROPERTY_EMAIL_ADDRESS = "email_address";
  private JsonNullable<String> emailAddress = JsonNullable.<String>undefined();

  public PazeSessionTokenResponse() { 
  }

  public PazeSessionTokenResponse clientId(String clientId) {
    
    this.clientId = clientId;
    return this;
  }

   /**
   * Paze Client ID
   * @return clientId
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Paze Client ID")
  @JsonProperty(JSON_PROPERTY_CLIENT_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getClientId() {
    return clientId;
  }


  @JsonProperty(JSON_PROPERTY_CLIENT_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setClientId(String clientId) {
    this.clientId = clientId;
  }


  public PazeSessionTokenResponse clientName(String clientName) {
    
    this.clientName = clientName;
    return this;
  }

   /**
   * Client Name to be displayed on the Paze screen
   * @return clientName
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Client Name to be displayed on the Paze screen")
  @JsonProperty(JSON_PROPERTY_CLIENT_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getClientName() {
    return clientName;
  }


  @JsonProperty(JSON_PROPERTY_CLIENT_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setClientName(String clientName) {
    this.clientName = clientName;
  }


  public PazeSessionTokenResponse clientProfileId(String clientProfileId) {
    
    this.clientProfileId = clientProfileId;
    return this;
  }

   /**
   * Paze Client Profile ID
   * @return clientProfileId
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Paze Client Profile ID")
  @JsonProperty(JSON_PROPERTY_CLIENT_PROFILE_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getClientProfileId() {
    return clientProfileId;
  }


  @JsonProperty(JSON_PROPERTY_CLIENT_PROFILE_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setClientProfileId(String clientProfileId) {
    this.clientProfileId = clientProfileId;
  }


  public PazeSessionTokenResponse transactionCurrencyCode(Currency transactionCurrencyCode) {
    
    this.transactionCurrencyCode = transactionCurrencyCode;
    return this;
  }

   /**
   * Get transactionCurrencyCode
   * @return transactionCurrencyCode
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_TRANSACTION_CURRENCY_CODE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Currency getTransactionCurrencyCode() {
    return transactionCurrencyCode;
  }


  @JsonProperty(JSON_PROPERTY_TRANSACTION_CURRENCY_CODE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setTransactionCurrencyCode(Currency transactionCurrencyCode) {
    this.transactionCurrencyCode = transactionCurrencyCode;
  }


  public PazeSessionTokenResponse transactionAmount(String transactionAmount) {
    
    this.transactionAmount = transactionAmount;
    return this;
  }

   /**
   * The transaction amount
   * @return transactionAmount
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "38.02", required = true, value = "The transaction amount")
  @JsonProperty(JSON_PROPERTY_TRANSACTION_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getTransactionAmount() {
    return transactionAmount;
  }


  @JsonProperty(JSON_PROPERTY_TRANSACTION_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setTransactionAmount(String transactionAmount) {
    this.transactionAmount = transactionAmount;
  }


  public PazeSessionTokenResponse emailAddress(String emailAddress) {
    this.emailAddress = JsonNullable.<String>of(emailAddress);
    
    return this;
  }

   /**
   * Email Address
   * @return emailAddress
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "johntest@test.com", value = "Email Address")
  @JsonIgnore

  public String getEmailAddress() {
        return emailAddress.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_EMAIL_ADDRESS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getEmailAddress_JsonNullable() {
    return emailAddress;
  }
  
  @JsonProperty(JSON_PROPERTY_EMAIL_ADDRESS)
  public void setEmailAddress_JsonNullable(JsonNullable<String> emailAddress) {
    this.emailAddress = emailAddress;
  }

  public void setEmailAddress(String emailAddress) {
    this.emailAddress = JsonNullable.<String>of(emailAddress);
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PazeSessionTokenResponse pazeSessionTokenResponse = (PazeSessionTokenResponse) o;
    return Objects.equals(this.clientId, pazeSessionTokenResponse.clientId) &&
        Objects.equals(this.clientName, pazeSessionTokenResponse.clientName) &&
        Objects.equals(this.clientProfileId, pazeSessionTokenResponse.clientProfileId) &&
        Objects.equals(this.transactionCurrencyCode, pazeSessionTokenResponse.transactionCurrencyCode) &&
        Objects.equals(this.transactionAmount, pazeSessionTokenResponse.transactionAmount) &&
        equalsNullable(this.emailAddress, pazeSessionTokenResponse.emailAddress);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(clientId, clientName, clientProfileId, transactionCurrencyCode, transactionAmount, hashCodeNullable(emailAddress));
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PazeSessionTokenResponse {\n");
    sb.append("    clientId: ").append(toIndentedString(clientId)).append("\n");
    sb.append("    clientName: ").append(toIndentedString(clientName)).append("\n");
    sb.append("    clientProfileId: ").append(toIndentedString(clientProfileId)).append("\n");
    sb.append("    transactionCurrencyCode: ").append(toIndentedString(transactionCurrencyCode)).append("\n");
    sb.append("    transactionAmount: ").append(toIndentedString(transactionAmount)).append("\n");
    sb.append("    emailAddress: ").append(toIndentedString(emailAddress)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

