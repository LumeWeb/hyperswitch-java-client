/*
 * Hyperswitch - API Documentation
 *  ## Get started  Hyperswitch provides a collection of APIs that enable you to process and manage payments. Our APIs accept and return JSON in the HTTP body, and return standard HTTP response codes.  You can consume the APIs directly using your favorite HTTP/REST library.  We have a testing environment referred to \"sandbox\", which you can setup to test API calls without affecting production data. Currently, our sandbox environment is live while our production environment is under development and will be available soon. You can sign up on our Dashboard to get API keys to access Hyperswitch API.  ### Environment  Use the following base URLs when making requests to the APIs:  | Environment   |  Base URL                          | |---------------|------------------------------------| | Sandbox       | <https://sandbox.hyperswitch.io>   | | Production    | <https://api.hyperswitch.io>       |  ## Authentication  When you sign up on our [dashboard](https://app.hyperswitch.io) and create a merchant account, you are given a secret key (also referred as api-key) and a publishable key. You may authenticate all API requests with Hyperswitch server by providing the appropriate key in the request Authorization header.  | Key             |  Description                                                                                  | |-----------------|-----------------------------------------------------------------------------------------------| | api-key         | Private key. Used to authenticate all API requests from your merchant server                  | | publishable key | Unique identifier for your account. Used to authenticate API requests from your app's client  |  Never share your secret api keys. Keep them guarded and secure. 
 *
 * The version of the OpenAPI document: 0.1.0
 * Contact: hyperswitch@juspay.in
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.hyperswitch.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.hyperswitch.model.EnabledPaymentMethod;
import java.util.ArrayList;
import java.util.LinkedHashSet;
import java.util.List;
import java.util.Set;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * BusinessCollectLinkConfig
 */
@JsonPropertyOrder({
  BusinessCollectLinkConfig.JSON_PROPERTY_LOGO,
  BusinessCollectLinkConfig.JSON_PROPERTY_MERCHANT_NAME,
  BusinessCollectLinkConfig.JSON_PROPERTY_THEME,
  BusinessCollectLinkConfig.JSON_PROPERTY_DOMAIN_NAME,
  BusinessCollectLinkConfig.JSON_PROPERTY_ALLOWED_DOMAINS,
  BusinessCollectLinkConfig.JSON_PROPERTY_ENABLED_PAYMENT_METHODS
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class BusinessCollectLinkConfig {
  public static final String JSON_PROPERTY_LOGO = "logo";
  private JsonNullable<String> logo = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_MERCHANT_NAME = "merchant_name";
  private JsonNullable<String> merchantName = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_THEME = "theme";
  private JsonNullable<String> theme = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_DOMAIN_NAME = "domain_name";
  private JsonNullable<String> domainName = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ALLOWED_DOMAINS = "allowed_domains";
  private Set<String> allowedDomains = new LinkedHashSet<>();

  public static final String JSON_PROPERTY_ENABLED_PAYMENT_METHODS = "enabled_payment_methods";
  private List<EnabledPaymentMethod> enabledPaymentMethods = new ArrayList<>();

  public BusinessCollectLinkConfig() {
  }

  public BusinessCollectLinkConfig logo(String logo) {
    this.logo = JsonNullable.<String>of(logo);
    
    return this;
  }

   /**
   * Merchant&#39;s display logo
   * @return logo
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public String getLogo() {
        return logo.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LOGO)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getLogo_JsonNullable() {
    return logo;
  }
  
  @JsonProperty(JSON_PROPERTY_LOGO)
  public void setLogo_JsonNullable(JsonNullable<String> logo) {
    this.logo = logo;
  }

  public void setLogo(String logo) {
    this.logo = JsonNullable.<String>of(logo);
  }


  public BusinessCollectLinkConfig merchantName(String merchantName) {
    this.merchantName = JsonNullable.<String>of(merchantName);
    
    return this;
  }

   /**
   * Custom merchant name for the link
   * @return merchantName
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public String getMerchantName() {
        return merchantName.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_MERCHANT_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getMerchantName_JsonNullable() {
    return merchantName;
  }
  
  @JsonProperty(JSON_PROPERTY_MERCHANT_NAME)
  public void setMerchantName_JsonNullable(JsonNullable<String> merchantName) {
    this.merchantName = merchantName;
  }

  public void setMerchantName(String merchantName) {
    this.merchantName = JsonNullable.<String>of(merchantName);
  }


  public BusinessCollectLinkConfig theme(String theme) {
    this.theme = JsonNullable.<String>of(theme);
    
    return this;
  }

   /**
   * Primary color to be used in the form represented in hex format
   * @return theme
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public String getTheme() {
        return theme.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_THEME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getTheme_JsonNullable() {
    return theme;
  }
  
  @JsonProperty(JSON_PROPERTY_THEME)
  public void setTheme_JsonNullable(JsonNullable<String> theme) {
    this.theme = theme;
  }

  public void setTheme(String theme) {
    this.theme = JsonNullable.<String>of(theme);
  }


  public BusinessCollectLinkConfig domainName(String domainName) {
    this.domainName = JsonNullable.<String>of(domainName);
    
    return this;
  }

   /**
   * Custom domain name to be used for hosting the link
   * @return domainName
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public String getDomainName() {
        return domainName.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_DOMAIN_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getDomainName_JsonNullable() {
    return domainName;
  }
  
  @JsonProperty(JSON_PROPERTY_DOMAIN_NAME)
  public void setDomainName_JsonNullable(JsonNullable<String> domainName) {
    this.domainName = domainName;
  }

  public void setDomainName(String domainName) {
    this.domainName = JsonNullable.<String>of(domainName);
  }


  public BusinessCollectLinkConfig allowedDomains(Set<String> allowedDomains) {
    
    this.allowedDomains = allowedDomains;
    return this;
  }

  public BusinessCollectLinkConfig addAllowedDomainsItem(String allowedDomainsItem) {
    if (this.allowedDomains == null) {
      this.allowedDomains = new LinkedHashSet<>();
    }
    this.allowedDomains.add(allowedDomainsItem);
    return this;
  }

   /**
   * A list of allowed domains (glob patterns) where this link can be embedded / opened from
   * @return allowedDomains
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_ALLOWED_DOMAINS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Set<String> getAllowedDomains() {
    return allowedDomains;
  }


  @JsonDeserialize(as = LinkedHashSet.class)
  @JsonProperty(JSON_PROPERTY_ALLOWED_DOMAINS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setAllowedDomains(Set<String> allowedDomains) {
    this.allowedDomains = allowedDomains;
  }


  public BusinessCollectLinkConfig enabledPaymentMethods(List<EnabledPaymentMethod> enabledPaymentMethods) {
    
    this.enabledPaymentMethods = enabledPaymentMethods;
    return this;
  }

  public BusinessCollectLinkConfig addEnabledPaymentMethodsItem(EnabledPaymentMethod enabledPaymentMethodsItem) {
    if (this.enabledPaymentMethods == null) {
      this.enabledPaymentMethods = new ArrayList<>();
    }
    this.enabledPaymentMethods.add(enabledPaymentMethodsItem);
    return this;
  }

   /**
   * List of payment methods shown on collect UI
   * @return enabledPaymentMethods
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_ENABLED_PAYMENT_METHODS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public List<EnabledPaymentMethod> getEnabledPaymentMethods() {
    return enabledPaymentMethods;
  }


  @JsonProperty(JSON_PROPERTY_ENABLED_PAYMENT_METHODS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setEnabledPaymentMethods(List<EnabledPaymentMethod> enabledPaymentMethods) {
    this.enabledPaymentMethods = enabledPaymentMethods;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    BusinessCollectLinkConfig businessCollectLinkConfig = (BusinessCollectLinkConfig) o;
    return equalsNullable(this.logo, businessCollectLinkConfig.logo) &&
        equalsNullable(this.merchantName, businessCollectLinkConfig.merchantName) &&
        equalsNullable(this.theme, businessCollectLinkConfig.theme) &&
        equalsNullable(this.domainName, businessCollectLinkConfig.domainName) &&
        Objects.equals(this.allowedDomains, businessCollectLinkConfig.allowedDomains) &&
        Objects.equals(this.enabledPaymentMethods, businessCollectLinkConfig.enabledPaymentMethods);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(hashCodeNullable(logo), hashCodeNullable(merchantName), hashCodeNullable(theme), hashCodeNullable(domainName), allowedDomains, enabledPaymentMethods);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class BusinessCollectLinkConfig {\n");
    sb.append("    logo: ").append(toIndentedString(logo)).append("\n");
    sb.append("    merchantName: ").append(toIndentedString(merchantName)).append("\n");
    sb.append("    theme: ").append(toIndentedString(theme)).append("\n");
    sb.append("    domainName: ").append(toIndentedString(domainName)).append("\n");
    sb.append("    allowedDomains: ").append(toIndentedString(allowedDomains)).append("\n");
    sb.append("    enabledPaymentMethods: ").append(toIndentedString(enabledPaymentMethods)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

