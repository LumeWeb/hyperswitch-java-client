/*
 * Hyperswitch - API Documentation
 *  ## Get started  Hyperswitch provides a collection of APIs that enable you to process and manage payments. Our APIs accept and return JSON in the HTTP body, and return standard HTTP response codes.  You can consume the APIs directly using your favorite HTTP/REST library.  We have a testing environment referred to \"sandbox\", which you can setup to test API calls without affecting production data. Currently, our sandbox environment is live while our production environment is under development and will be available soon. You can sign up on our Dashboard to get API keys to access Hyperswitch API.  ### Environment  Use the following base URLs when making requests to the APIs:  | Environment   |  Base URL                          | |---------------|------------------------------------| | Sandbox       | <https://sandbox.hyperswitch.io>   | | Production    | <https://api.hyperswitch.io>       |  ## Authentication  When you sign up on our [dashboard](https://app.hyperswitch.io) and create a merchant account, you are given a secret key (also referred as api-key) and a publishable key. You may authenticate all API requests with Hyperswitch server by providing the appropriate key in the request Authorization header.  | Key             |  Description                                                                                  | |-----------------|-----------------------------------------------------------------------------------------------| | api-key         | Private key. Used to authenticate all API requests from your merchant server                  | | publishable key | Unique identifier for your account. Used to authenticate API requests from your app's client  |  Never share your secret api keys. Keep them guarded and secure. 
 *
 * The version of the OpenAPI document: 0.1.0
 * Contact: hyperswitch@juspay.in
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.hyperswitch.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.hyperswitch.model.EphemeralKeyCreateResponse;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * PaymentsCreateResponseOpenApiEphemeralKey
 */
@JsonPropertyOrder({
  PaymentsCreateResponseOpenApiEphemeralKey.JSON_PROPERTY_CUSTOMER_ID,
  PaymentsCreateResponseOpenApiEphemeralKey.JSON_PROPERTY_CREATED_AT,
  PaymentsCreateResponseOpenApiEphemeralKey.JSON_PROPERTY_EXPIRES,
  PaymentsCreateResponseOpenApiEphemeralKey.JSON_PROPERTY_SECRET
})
@JsonTypeName("PaymentsCreateResponseOpenApi_ephemeral_key")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class PaymentsCreateResponseOpenApiEphemeralKey {
  public static final String JSON_PROPERTY_CUSTOMER_ID = "customer_id";
  private String customerId;

  public static final String JSON_PROPERTY_CREATED_AT = "created_at";
  private Long createdAt;

  public static final String JSON_PROPERTY_EXPIRES = "expires";
  private Long expires;

  public static final String JSON_PROPERTY_SECRET = "secret";
  private String secret;

  public PaymentsCreateResponseOpenApiEphemeralKey() { 
  }

  public PaymentsCreateResponseOpenApiEphemeralKey customerId(String customerId) {
    
    this.customerId = customerId;
    return this;
  }

   /**
   * customer_id to which this ephemeral key belongs to
   * @return customerId
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "cus_y3oqhf46pyzuxjbcn2giaqnb44", required = true, value = "customer_id to which this ephemeral key belongs to")
  @JsonProperty(JSON_PROPERTY_CUSTOMER_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getCustomerId() {
    return customerId;
  }


  @JsonProperty(JSON_PROPERTY_CUSTOMER_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setCustomerId(String customerId) {
    this.customerId = customerId;
  }


  public PaymentsCreateResponseOpenApiEphemeralKey createdAt(Long createdAt) {
    
    this.createdAt = createdAt;
    return this;
  }

   /**
   * time at which this ephemeral key was created
   * @return createdAt
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "time at which this ephemeral key was created")
  @JsonProperty(JSON_PROPERTY_CREATED_AT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Long getCreatedAt() {
    return createdAt;
  }


  @JsonProperty(JSON_PROPERTY_CREATED_AT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setCreatedAt(Long createdAt) {
    this.createdAt = createdAt;
  }


  public PaymentsCreateResponseOpenApiEphemeralKey expires(Long expires) {
    
    this.expires = expires;
    return this;
  }

   /**
   * time at which this ephemeral key would expire
   * @return expires
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "time at which this ephemeral key would expire")
  @JsonProperty(JSON_PROPERTY_EXPIRES)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Long getExpires() {
    return expires;
  }


  @JsonProperty(JSON_PROPERTY_EXPIRES)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setExpires(Long expires) {
    this.expires = expires;
  }


  public PaymentsCreateResponseOpenApiEphemeralKey secret(String secret) {
    
    this.secret = secret;
    return this;
  }

   /**
   * ephemeral key
   * @return secret
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "ephemeral key")
  @JsonProperty(JSON_PROPERTY_SECRET)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getSecret() {
    return secret;
  }


  @JsonProperty(JSON_PROPERTY_SECRET)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setSecret(String secret) {
    this.secret = secret;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PaymentsCreateResponseOpenApiEphemeralKey paymentsCreateResponseOpenApiEphemeralKey = (PaymentsCreateResponseOpenApiEphemeralKey) o;
    return Objects.equals(this.customerId, paymentsCreateResponseOpenApiEphemeralKey.customerId) &&
        Objects.equals(this.createdAt, paymentsCreateResponseOpenApiEphemeralKey.createdAt) &&
        Objects.equals(this.expires, paymentsCreateResponseOpenApiEphemeralKey.expires) &&
        Objects.equals(this.secret, paymentsCreateResponseOpenApiEphemeralKey.secret);
  }

  @Override
  public int hashCode() {
    return Objects.hash(customerId, createdAt, expires, secret);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PaymentsCreateResponseOpenApiEphemeralKey {\n");
    sb.append("    customerId: ").append(toIndentedString(customerId)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    expires: ").append(toIndentedString(expires)).append("\n");
    sb.append("    secret: ").append(toIndentedString(secret)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

