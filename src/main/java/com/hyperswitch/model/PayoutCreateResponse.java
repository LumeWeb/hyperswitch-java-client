/*
 * Hyperswitch - API Documentation
 *  ## Get started  Hyperswitch provides a collection of APIs that enable you to process and manage payments. Our APIs accept and return JSON in the HTTP body, and return standard HTTP response codes.  You can consume the APIs directly using your favorite HTTP/REST library.  We have a testing environment referred to \"sandbox\", which you can setup to test API calls without affecting production data. Currently, our sandbox environment is live while our production environment is under development and will be available soon. You can sign up on our Dashboard to get API keys to access Hyperswitch API.  ### Environment  Use the following base URLs when making requests to the APIs:  | Environment   |  Base URL                          | |---------------|------------------------------------| | Sandbox       | <https://sandbox.hyperswitch.io>   | | Production    | <https://api.hyperswitch.io>       |  ## Authentication  When you sign up on our [dashboard](https://app.hyperswitch.io) and create a merchant account, you are given a secret key (also referred as api-key) and a publishable key. You may authenticate all API requests with Hyperswitch server by providing the appropriate key in the request Authorization header.  | Key             |  Description                                                                                  | |-----------------|-----------------------------------------------------------------------------------------------| | api-key         | Private key. Used to authenticate all API requests from your merchant server                  | | publishable key | Unique identifier for your account. Used to authenticate API requests from your app's client  |  Never share your secret api keys. Keep them guarded and secure. 
 *
 * The version of the OpenAPI document: 0.1.0
 * Contact: hyperswitch@juspay.in
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.hyperswitch.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.hyperswitch.model.CountryAlpha2;
import com.hyperswitch.model.Currency;
import com.hyperswitch.model.CustomerPaymentMethodBilling;
import com.hyperswitch.model.PaymentsResponseCustomer;
import com.hyperswitch.model.PayoutAttemptResponse;
import com.hyperswitch.model.PayoutCreateResponsePayoutLink;
import com.hyperswitch.model.PayoutCreateResponsePayoutMethodData;
import com.hyperswitch.model.PayoutEntityType;
import com.hyperswitch.model.PayoutSendPriority;
import com.hyperswitch.model.PayoutStatus;
import com.hyperswitch.model.PayoutType;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.List;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * PayoutCreateResponse
 */
@JsonPropertyOrder({
  PayoutCreateResponse.JSON_PROPERTY_PAYOUT_ID,
  PayoutCreateResponse.JSON_PROPERTY_MERCHANT_ID,
  PayoutCreateResponse.JSON_PROPERTY_AMOUNT,
  PayoutCreateResponse.JSON_PROPERTY_CURRENCY,
  PayoutCreateResponse.JSON_PROPERTY_CONNECTOR,
  PayoutCreateResponse.JSON_PROPERTY_PAYOUT_TYPE,
  PayoutCreateResponse.JSON_PROPERTY_PAYOUT_METHOD_DATA,
  PayoutCreateResponse.JSON_PROPERTY_BILLING,
  PayoutCreateResponse.JSON_PROPERTY_AUTO_FULFILL,
  PayoutCreateResponse.JSON_PROPERTY_CUSTOMER_ID,
  PayoutCreateResponse.JSON_PROPERTY_CUSTOMER,
  PayoutCreateResponse.JSON_PROPERTY_CLIENT_SECRET,
  PayoutCreateResponse.JSON_PROPERTY_RETURN_URL,
  PayoutCreateResponse.JSON_PROPERTY_BUSINESS_COUNTRY,
  PayoutCreateResponse.JSON_PROPERTY_BUSINESS_LABEL,
  PayoutCreateResponse.JSON_PROPERTY_DESCRIPTION,
  PayoutCreateResponse.JSON_PROPERTY_ENTITY_TYPE,
  PayoutCreateResponse.JSON_PROPERTY_RECURRING,
  PayoutCreateResponse.JSON_PROPERTY_METADATA,
  PayoutCreateResponse.JSON_PROPERTY_MERCHANT_CONNECTOR_ID,
  PayoutCreateResponse.JSON_PROPERTY_STATUS,
  PayoutCreateResponse.JSON_PROPERTY_ERROR_MESSAGE,
  PayoutCreateResponse.JSON_PROPERTY_ERROR_CODE,
  PayoutCreateResponse.JSON_PROPERTY_PROFILE_ID,
  PayoutCreateResponse.JSON_PROPERTY_CREATED,
  PayoutCreateResponse.JSON_PROPERTY_CONNECTOR_TRANSACTION_ID,
  PayoutCreateResponse.JSON_PROPERTY_PRIORITY,
  PayoutCreateResponse.JSON_PROPERTY_ATTEMPTS,
  PayoutCreateResponse.JSON_PROPERTY_PAYOUT_LINK,
  PayoutCreateResponse.JSON_PROPERTY_EMAIL,
  PayoutCreateResponse.JSON_PROPERTY_NAME,
  PayoutCreateResponse.JSON_PROPERTY_PHONE,
  PayoutCreateResponse.JSON_PROPERTY_PHONE_COUNTRY_CODE,
  PayoutCreateResponse.JSON_PROPERTY_UNIFIED_CODE,
  PayoutCreateResponse.JSON_PROPERTY_UNIFIED_MESSAGE
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class PayoutCreateResponse {
  public static final String JSON_PROPERTY_PAYOUT_ID = "payout_id";
  private String payoutId;

  public static final String JSON_PROPERTY_MERCHANT_ID = "merchant_id";
  private String merchantId;

  public static final String JSON_PROPERTY_AMOUNT = "amount";
  private Long amount;

  public static final String JSON_PROPERTY_CURRENCY = "currency";
  private Currency currency;

  public static final String JSON_PROPERTY_CONNECTOR = "connector";
  private JsonNullable<String> connector = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_PAYOUT_TYPE = "payout_type";
  private JsonNullable<PayoutType> payoutType = JsonNullable.<PayoutType>undefined();

  public static final String JSON_PROPERTY_PAYOUT_METHOD_DATA = "payout_method_data";
  private JsonNullable<PayoutCreateResponsePayoutMethodData> payoutMethodData = JsonNullable.<PayoutCreateResponsePayoutMethodData>undefined();

  public static final String JSON_PROPERTY_BILLING = "billing";
  private JsonNullable<CustomerPaymentMethodBilling> billing = JsonNullable.<CustomerPaymentMethodBilling>undefined();

  public static final String JSON_PROPERTY_AUTO_FULFILL = "auto_fulfill";
  private Boolean autoFulfill = false;

  public static final String JSON_PROPERTY_CUSTOMER_ID = "customer_id";
  private String customerId;

  public static final String JSON_PROPERTY_CUSTOMER = "customer";
  private JsonNullable<PaymentsResponseCustomer> customer = JsonNullable.<PaymentsResponseCustomer>undefined();

  public static final String JSON_PROPERTY_CLIENT_SECRET = "client_secret";
  private String clientSecret;

  public static final String JSON_PROPERTY_RETURN_URL = "return_url";
  private String returnUrl;

  public static final String JSON_PROPERTY_BUSINESS_COUNTRY = "business_country";
  private CountryAlpha2 businessCountry;

  public static final String JSON_PROPERTY_BUSINESS_LABEL = "business_label";
  private JsonNullable<String> businessLabel = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_DESCRIPTION = "description";
  private JsonNullable<String> description = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ENTITY_TYPE = "entity_type";
  private PayoutEntityType entityType;

  public static final String JSON_PROPERTY_RECURRING = "recurring";
  private Boolean recurring = false;

  public static final String JSON_PROPERTY_METADATA = "metadata";
  private JsonNullable<Object> metadata = JsonNullable.<Object>undefined();

  public static final String JSON_PROPERTY_MERCHANT_CONNECTOR_ID = "merchant_connector_id";
  private JsonNullable<String> merchantConnectorId = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_STATUS = "status";
  private PayoutStatus status;

  public static final String JSON_PROPERTY_ERROR_MESSAGE = "error_message";
  private JsonNullable<String> errorMessage = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ERROR_CODE = "error_code";
  private JsonNullable<String> errorCode = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_PROFILE_ID = "profile_id";
  private String profileId;

  public static final String JSON_PROPERTY_CREATED = "created";
  private JsonNullable<OffsetDateTime> created = JsonNullable.<OffsetDateTime>undefined();

  public static final String JSON_PROPERTY_CONNECTOR_TRANSACTION_ID = "connector_transaction_id";
  private JsonNullable<String> connectorTransactionId = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_PRIORITY = "priority";
  private JsonNullable<PayoutSendPriority> priority = JsonNullable.<PayoutSendPriority>undefined();

  public static final String JSON_PROPERTY_ATTEMPTS = "attempts";
  private JsonNullable<List<PayoutAttemptResponse>> attempts = JsonNullable.<List<PayoutAttemptResponse>>undefined();

  public static final String JSON_PROPERTY_PAYOUT_LINK = "payout_link";
  private JsonNullable<PayoutCreateResponsePayoutLink> payoutLink = JsonNullable.<PayoutCreateResponsePayoutLink>undefined();

  public static final String JSON_PROPERTY_EMAIL = "email";
  private JsonNullable<String> email = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_NAME = "name";
  private JsonNullable<String> name = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_PHONE = "phone";
  private JsonNullable<String> phone = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_PHONE_COUNTRY_CODE = "phone_country_code";
  private JsonNullable<String> phoneCountryCode = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_UNIFIED_CODE = "unified_code";
  private JsonNullable<String> unifiedCode = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_UNIFIED_MESSAGE = "unified_message";
  private JsonNullable<String> unifiedMessage = JsonNullable.<String>undefined();

  public PayoutCreateResponse() { 
  }

  public PayoutCreateResponse payoutId(String payoutId) {
    
    this.payoutId = payoutId;
    return this;
  }

   /**
   * Unique identifier for the payout. This ensures idempotency for multiple payouts that have been done by a single merchant. This field is auto generated and is returned in the API response.
   * @return payoutId
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "187282ab-40ef-47a9-9206-5099ba31e432", required = true, value = "Unique identifier for the payout. This ensures idempotency for multiple payouts that have been done by a single merchant. This field is auto generated and is returned in the API response.")
  @JsonProperty(JSON_PROPERTY_PAYOUT_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getPayoutId() {
    return payoutId;
  }


  @JsonProperty(JSON_PROPERTY_PAYOUT_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setPayoutId(String payoutId) {
    this.payoutId = payoutId;
  }


  public PayoutCreateResponse merchantId(String merchantId) {
    
    this.merchantId = merchantId;
    return this;
  }

   /**
   * This is an identifier for the merchant account. This is inferred from the API key provided during the request
   * @return merchantId
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "merchant_1668273825", required = true, value = "This is an identifier for the merchant account. This is inferred from the API key provided during the request")
  @JsonProperty(JSON_PROPERTY_MERCHANT_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getMerchantId() {
    return merchantId;
  }


  @JsonProperty(JSON_PROPERTY_MERCHANT_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setMerchantId(String merchantId) {
    this.merchantId = merchantId;
  }


  public PayoutCreateResponse amount(Long amount) {
    
    this.amount = amount;
    return this;
  }

   /**
   * The payout amount. Amount for the payout in lowest denomination of the currency. (i.e) in cents for USD denomination, in paisa for INR denomination etc.,
   * @return amount
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "1000", required = true, value = "The payout amount. Amount for the payout in lowest denomination of the currency. (i.e) in cents for USD denomination, in paisa for INR denomination etc.,")
  @JsonProperty(JSON_PROPERTY_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Long getAmount() {
    return amount;
  }


  @JsonProperty(JSON_PROPERTY_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setAmount(Long amount) {
    this.amount = amount;
  }


  public PayoutCreateResponse currency(Currency currency) {
    
    this.currency = currency;
    return this;
  }

   /**
   * Get currency
   * @return currency
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_CURRENCY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Currency getCurrency() {
    return currency;
  }


  @JsonProperty(JSON_PROPERTY_CURRENCY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setCurrency(Currency currency) {
    this.currency = currency;
  }


  public PayoutCreateResponse connector(String connector) {
    this.connector = JsonNullable.<String>of(connector);
    
    return this;
  }

   /**
   * The connector used for the payout
   * @return connector
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "wise", value = "The connector used for the payout")
  @JsonIgnore

  public String getConnector() {
        return connector.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_CONNECTOR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getConnector_JsonNullable() {
    return connector;
  }
  
  @JsonProperty(JSON_PROPERTY_CONNECTOR)
  public void setConnector_JsonNullable(JsonNullable<String> connector) {
    this.connector = connector;
  }

  public void setConnector(String connector) {
    this.connector = JsonNullable.<String>of(connector);
  }


  public PayoutCreateResponse payoutType(PayoutType payoutType) {
    this.payoutType = JsonNullable.<PayoutType>of(payoutType);
    
    return this;
  }

   /**
   * Get payoutType
   * @return payoutType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public PayoutType getPayoutType() {
        return payoutType.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PAYOUT_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<PayoutType> getPayoutType_JsonNullable() {
    return payoutType;
  }
  
  @JsonProperty(JSON_PROPERTY_PAYOUT_TYPE)
  public void setPayoutType_JsonNullable(JsonNullable<PayoutType> payoutType) {
    this.payoutType = payoutType;
  }

  public void setPayoutType(PayoutType payoutType) {
    this.payoutType = JsonNullable.<PayoutType>of(payoutType);
  }


  public PayoutCreateResponse payoutMethodData(PayoutCreateResponsePayoutMethodData payoutMethodData) {
    this.payoutMethodData = JsonNullable.<PayoutCreateResponsePayoutMethodData>of(payoutMethodData);
    
    return this;
  }

   /**
   * Get payoutMethodData
   * @return payoutMethodData
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public PayoutCreateResponsePayoutMethodData getPayoutMethodData() {
        return payoutMethodData.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PAYOUT_METHOD_DATA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<PayoutCreateResponsePayoutMethodData> getPayoutMethodData_JsonNullable() {
    return payoutMethodData;
  }
  
  @JsonProperty(JSON_PROPERTY_PAYOUT_METHOD_DATA)
  public void setPayoutMethodData_JsonNullable(JsonNullable<PayoutCreateResponsePayoutMethodData> payoutMethodData) {
    this.payoutMethodData = payoutMethodData;
  }

  public void setPayoutMethodData(PayoutCreateResponsePayoutMethodData payoutMethodData) {
    this.payoutMethodData = JsonNullable.<PayoutCreateResponsePayoutMethodData>of(payoutMethodData);
  }


  public PayoutCreateResponse billing(CustomerPaymentMethodBilling billing) {
    this.billing = JsonNullable.<CustomerPaymentMethodBilling>of(billing);
    
    return this;
  }

   /**
   * Get billing
   * @return billing
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public CustomerPaymentMethodBilling getBilling() {
        return billing.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_BILLING)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<CustomerPaymentMethodBilling> getBilling_JsonNullable() {
    return billing;
  }
  
  @JsonProperty(JSON_PROPERTY_BILLING)
  public void setBilling_JsonNullable(JsonNullable<CustomerPaymentMethodBilling> billing) {
    this.billing = billing;
  }

  public void setBilling(CustomerPaymentMethodBilling billing) {
    this.billing = JsonNullable.<CustomerPaymentMethodBilling>of(billing);
  }


  public PayoutCreateResponse autoFulfill(Boolean autoFulfill) {
    
    this.autoFulfill = autoFulfill;
    return this;
  }

   /**
   * Set to true to confirm the payout without review, no further action required
   * @return autoFulfill
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "true", required = true, value = "Set to true to confirm the payout without review, no further action required")
  @JsonProperty(JSON_PROPERTY_AUTO_FULFILL)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Boolean getAutoFulfill() {
    return autoFulfill;
  }


  @JsonProperty(JSON_PROPERTY_AUTO_FULFILL)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setAutoFulfill(Boolean autoFulfill) {
    this.autoFulfill = autoFulfill;
  }


  public PayoutCreateResponse customerId(String customerId) {
    
    this.customerId = customerId;
    return this;
  }

   /**
   * The identifier for the customer object. If not provided the customer ID will be autogenerated.
   * @return customerId
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "cus_y3oqhf46pyzuxjbcn2giaqnb44", required = true, value = "The identifier for the customer object. If not provided the customer ID will be autogenerated.")
  @JsonProperty(JSON_PROPERTY_CUSTOMER_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getCustomerId() {
    return customerId;
  }


  @JsonProperty(JSON_PROPERTY_CUSTOMER_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setCustomerId(String customerId) {
    this.customerId = customerId;
  }


  public PayoutCreateResponse customer(PaymentsResponseCustomer customer) {
    this.customer = JsonNullable.<PaymentsResponseCustomer>of(customer);
    
    return this;
  }

   /**
   * Get customer
   * @return customer
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public PaymentsResponseCustomer getCustomer() {
        return customer.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_CUSTOMER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<PaymentsResponseCustomer> getCustomer_JsonNullable() {
    return customer;
  }
  
  @JsonProperty(JSON_PROPERTY_CUSTOMER)
  public void setCustomer_JsonNullable(JsonNullable<PaymentsResponseCustomer> customer) {
    this.customer = customer;
  }

  public void setCustomer(PaymentsResponseCustomer customer) {
    this.customer = JsonNullable.<PaymentsResponseCustomer>of(customer);
  }


  public PayoutCreateResponse clientSecret(String clientSecret) {
    
    this.clientSecret = clientSecret;
    return this;
  }

   /**
   * It&#39;s a token used for client side verification.
   * @return clientSecret
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "pay_U42c409qyHwOkWo3vK60_secret_el9ksDkiB8hi6j9N78yo", required = true, value = "It's a token used for client side verification.")
  @JsonProperty(JSON_PROPERTY_CLIENT_SECRET)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getClientSecret() {
    return clientSecret;
  }


  @JsonProperty(JSON_PROPERTY_CLIENT_SECRET)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setClientSecret(String clientSecret) {
    this.clientSecret = clientSecret;
  }


  public PayoutCreateResponse returnUrl(String returnUrl) {
    
    this.returnUrl = returnUrl;
    return this;
  }

   /**
   * The URL to redirect after the completion of the operation
   * @return returnUrl
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "https://hyperswitch.io", required = true, value = "The URL to redirect after the completion of the operation")
  @JsonProperty(JSON_PROPERTY_RETURN_URL)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getReturnUrl() {
    return returnUrl;
  }


  @JsonProperty(JSON_PROPERTY_RETURN_URL)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setReturnUrl(String returnUrl) {
    this.returnUrl = returnUrl;
  }


  public PayoutCreateResponse businessCountry(CountryAlpha2 businessCountry) {
    
    this.businessCountry = businessCountry;
    return this;
  }

   /**
   * Get businessCountry
   * @return businessCountry
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_BUSINESS_COUNTRY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public CountryAlpha2 getBusinessCountry() {
    return businessCountry;
  }


  @JsonProperty(JSON_PROPERTY_BUSINESS_COUNTRY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setBusinessCountry(CountryAlpha2 businessCountry) {
    this.businessCountry = businessCountry;
  }


  public PayoutCreateResponse businessLabel(String businessLabel) {
    this.businessLabel = JsonNullable.<String>of(businessLabel);
    
    return this;
  }

   /**
   * Business label of the merchant for this payout
   * @return businessLabel
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "food", value = "Business label of the merchant for this payout")
  @JsonIgnore

  public String getBusinessLabel() {
        return businessLabel.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_BUSINESS_LABEL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getBusinessLabel_JsonNullable() {
    return businessLabel;
  }
  
  @JsonProperty(JSON_PROPERTY_BUSINESS_LABEL)
  public void setBusinessLabel_JsonNullable(JsonNullable<String> businessLabel) {
    this.businessLabel = businessLabel;
  }

  public void setBusinessLabel(String businessLabel) {
    this.businessLabel = JsonNullable.<String>of(businessLabel);
  }


  public PayoutCreateResponse description(String description) {
    this.description = JsonNullable.<String>of(description);
    
    return this;
  }

   /**
   * A description of the payout
   * @return description
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "It's my first payout request", value = "A description of the payout")
  @JsonIgnore

  public String getDescription() {
        return description.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getDescription_JsonNullable() {
    return description;
  }
  
  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  public void setDescription_JsonNullable(JsonNullable<String> description) {
    this.description = description;
  }

  public void setDescription(String description) {
    this.description = JsonNullable.<String>of(description);
  }


  public PayoutCreateResponse entityType(PayoutEntityType entityType) {
    
    this.entityType = entityType;
    return this;
  }

   /**
   * Get entityType
   * @return entityType
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_ENTITY_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public PayoutEntityType getEntityType() {
    return entityType;
  }


  @JsonProperty(JSON_PROPERTY_ENTITY_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setEntityType(PayoutEntityType entityType) {
    this.entityType = entityType;
  }


  public PayoutCreateResponse recurring(Boolean recurring) {
    
    this.recurring = recurring;
    return this;
  }

   /**
   * Specifies whether or not the payout request is recurring
   * @return recurring
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Specifies whether or not the payout request is recurring")
  @JsonProperty(JSON_PROPERTY_RECURRING)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Boolean getRecurring() {
    return recurring;
  }


  @JsonProperty(JSON_PROPERTY_RECURRING)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setRecurring(Boolean recurring) {
    this.recurring = recurring;
  }


  public PayoutCreateResponse metadata(Object metadata) {
    this.metadata = JsonNullable.<Object>of(metadata);
    
    return this;
  }

   /**
   * You can specify up to 50 keys, with key names up to 40 characters long and values up to 500 characters long. Metadata is useful for storing additional, structured information on an object.
   * @return metadata
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "You can specify up to 50 keys, with key names up to 40 characters long and values up to 500 characters long. Metadata is useful for storing additional, structured information on an object.")
  @JsonIgnore

  public Object getMetadata() {
        return metadata.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_METADATA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Object> getMetadata_JsonNullable() {
    return metadata;
  }
  
  @JsonProperty(JSON_PROPERTY_METADATA)
  public void setMetadata_JsonNullable(JsonNullable<Object> metadata) {
    this.metadata = metadata;
  }

  public void setMetadata(Object metadata) {
    this.metadata = JsonNullable.<Object>of(metadata);
  }


  public PayoutCreateResponse merchantConnectorId(String merchantConnectorId) {
    this.merchantConnectorId = JsonNullable.<String>of(merchantConnectorId);
    
    return this;
  }

   /**
   * Unique identifier of the merchant connector account
   * @return merchantConnectorId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "mca_sAD3OZLATetvjLOYhUSy", value = "Unique identifier of the merchant connector account")
  @JsonIgnore

  public String getMerchantConnectorId() {
        return merchantConnectorId.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_MERCHANT_CONNECTOR_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getMerchantConnectorId_JsonNullable() {
    return merchantConnectorId;
  }
  
  @JsonProperty(JSON_PROPERTY_MERCHANT_CONNECTOR_ID)
  public void setMerchantConnectorId_JsonNullable(JsonNullable<String> merchantConnectorId) {
    this.merchantConnectorId = merchantConnectorId;
  }

  public void setMerchantConnectorId(String merchantConnectorId) {
    this.merchantConnectorId = JsonNullable.<String>of(merchantConnectorId);
  }


  public PayoutCreateResponse status(PayoutStatus status) {
    
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_STATUS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public PayoutStatus getStatus() {
    return status;
  }


  @JsonProperty(JSON_PROPERTY_STATUS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setStatus(PayoutStatus status) {
    this.status = status;
  }


  public PayoutCreateResponse errorMessage(String errorMessage) {
    this.errorMessage = JsonNullable.<String>of(errorMessage);
    
    return this;
  }

   /**
   * If there was an error while calling the connector the error message is received here
   * @return errorMessage
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Failed while verifying the card", value = "If there was an error while calling the connector the error message is received here")
  @JsonIgnore

  public String getErrorMessage() {
        return errorMessage.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ERROR_MESSAGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getErrorMessage_JsonNullable() {
    return errorMessage;
  }
  
  @JsonProperty(JSON_PROPERTY_ERROR_MESSAGE)
  public void setErrorMessage_JsonNullable(JsonNullable<String> errorMessage) {
    this.errorMessage = errorMessage;
  }

  public void setErrorMessage(String errorMessage) {
    this.errorMessage = JsonNullable.<String>of(errorMessage);
  }


  public PayoutCreateResponse errorCode(String errorCode) {
    this.errorCode = JsonNullable.<String>of(errorCode);
    
    return this;
  }

   /**
   * If there was an error while calling the connectors the code is received here
   * @return errorCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "E0001", value = "If there was an error while calling the connectors the code is received here")
  @JsonIgnore

  public String getErrorCode() {
        return errorCode.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ERROR_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getErrorCode_JsonNullable() {
    return errorCode;
  }
  
  @JsonProperty(JSON_PROPERTY_ERROR_CODE)
  public void setErrorCode_JsonNullable(JsonNullable<String> errorCode) {
    this.errorCode = errorCode;
  }

  public void setErrorCode(String errorCode) {
    this.errorCode = JsonNullable.<String>of(errorCode);
  }


  public PayoutCreateResponse profileId(String profileId) {
    
    this.profileId = profileId;
    return this;
  }

   /**
   * The business profile that is associated with this payout
   * @return profileId
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "The business profile that is associated with this payout")
  @JsonProperty(JSON_PROPERTY_PROFILE_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getProfileId() {
    return profileId;
  }


  @JsonProperty(JSON_PROPERTY_PROFILE_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setProfileId(String profileId) {
    this.profileId = profileId;
  }


  public PayoutCreateResponse created(OffsetDateTime created) {
    this.created = JsonNullable.<OffsetDateTime>of(created);
    
    return this;
  }

   /**
   * Time when the payout was created
   * @return created
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "2022-09-10T10:11:12Z", value = "Time when the payout was created")
  @JsonIgnore

  public OffsetDateTime getCreated() {
        return created.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_CREATED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<OffsetDateTime> getCreated_JsonNullable() {
    return created;
  }
  
  @JsonProperty(JSON_PROPERTY_CREATED)
  public void setCreated_JsonNullable(JsonNullable<OffsetDateTime> created) {
    this.created = created;
  }

  public void setCreated(OffsetDateTime created) {
    this.created = JsonNullable.<OffsetDateTime>of(created);
  }


  public PayoutCreateResponse connectorTransactionId(String connectorTransactionId) {
    this.connectorTransactionId = JsonNullable.<String>of(connectorTransactionId);
    
    return this;
  }

   /**
   * Underlying processor&#39;s payout resource ID
   * @return connectorTransactionId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "S3FC9G9M2MVFDXT5", value = "Underlying processor's payout resource ID")
  @JsonIgnore

  public String getConnectorTransactionId() {
        return connectorTransactionId.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_CONNECTOR_TRANSACTION_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getConnectorTransactionId_JsonNullable() {
    return connectorTransactionId;
  }
  
  @JsonProperty(JSON_PROPERTY_CONNECTOR_TRANSACTION_ID)
  public void setConnectorTransactionId_JsonNullable(JsonNullable<String> connectorTransactionId) {
    this.connectorTransactionId = connectorTransactionId;
  }

  public void setConnectorTransactionId(String connectorTransactionId) {
    this.connectorTransactionId = JsonNullable.<String>of(connectorTransactionId);
  }


  public PayoutCreateResponse priority(PayoutSendPriority priority) {
    this.priority = JsonNullable.<PayoutSendPriority>of(priority);
    
    return this;
  }

   /**
   * Get priority
   * @return priority
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public PayoutSendPriority getPriority() {
        return priority.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PRIORITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<PayoutSendPriority> getPriority_JsonNullable() {
    return priority;
  }
  
  @JsonProperty(JSON_PROPERTY_PRIORITY)
  public void setPriority_JsonNullable(JsonNullable<PayoutSendPriority> priority) {
    this.priority = priority;
  }

  public void setPriority(PayoutSendPriority priority) {
    this.priority = JsonNullable.<PayoutSendPriority>of(priority);
  }


  public PayoutCreateResponse attempts(List<PayoutAttemptResponse> attempts) {
    this.attempts = JsonNullable.<List<PayoutAttemptResponse>>of(attempts);
    
    return this;
  }

  public PayoutCreateResponse addAttemptsItem(PayoutAttemptResponse attemptsItem) {
    if (this.attempts == null || !this.attempts.isPresent()) {
      this.attempts = JsonNullable.<List<PayoutAttemptResponse>>of(new ArrayList<>());
    }
    try {
      this.attempts.get().add(attemptsItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * List of attempts
   * @return attempts
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "List of attempts")
  @JsonIgnore

  public List<PayoutAttemptResponse> getAttempts() {
        return attempts.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ATTEMPTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<PayoutAttemptResponse>> getAttempts_JsonNullable() {
    return attempts;
  }
  
  @JsonProperty(JSON_PROPERTY_ATTEMPTS)
  public void setAttempts_JsonNullable(JsonNullable<List<PayoutAttemptResponse>> attempts) {
    this.attempts = attempts;
  }

  public void setAttempts(List<PayoutAttemptResponse> attempts) {
    this.attempts = JsonNullable.<List<PayoutAttemptResponse>>of(attempts);
  }


  public PayoutCreateResponse payoutLink(PayoutCreateResponsePayoutLink payoutLink) {
    this.payoutLink = JsonNullable.<PayoutCreateResponsePayoutLink>of(payoutLink);
    
    return this;
  }

   /**
   * Get payoutLink
   * @return payoutLink
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public PayoutCreateResponsePayoutLink getPayoutLink() {
        return payoutLink.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PAYOUT_LINK)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<PayoutCreateResponsePayoutLink> getPayoutLink_JsonNullable() {
    return payoutLink;
  }
  
  @JsonProperty(JSON_PROPERTY_PAYOUT_LINK)
  public void setPayoutLink_JsonNullable(JsonNullable<PayoutCreateResponsePayoutLink> payoutLink) {
    this.payoutLink = payoutLink;
  }

  public void setPayoutLink(PayoutCreateResponsePayoutLink payoutLink) {
    this.payoutLink = JsonNullable.<PayoutCreateResponsePayoutLink>of(payoutLink);
  }


  public PayoutCreateResponse email(String email) {
    this.email = JsonNullable.<String>of(email);
    
    return this;
  }

   /**
   * Customer&#39;s email. _Deprecated: Use customer object instead._
   * @return email
   * @deprecated
  **/
  @Deprecated
  @javax.annotation.Nullable
  @ApiModelProperty(example = "johntest@test.com", value = "Customer's email. _Deprecated: Use customer object instead._")
  @JsonIgnore

  public String getEmail() {
        return email.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_EMAIL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getEmail_JsonNullable() {
    return email;
  }
  
  @JsonProperty(JSON_PROPERTY_EMAIL)
  public void setEmail_JsonNullable(JsonNullable<String> email) {
    this.email = email;
  }

  public void setEmail(String email) {
    this.email = JsonNullable.<String>of(email);
  }


  public PayoutCreateResponse name(String name) {
    this.name = JsonNullable.<String>of(name);
    
    return this;
  }

   /**
   * Customer&#39;s name. _Deprecated: Use customer object instead._
   * @return name
   * @deprecated
  **/
  @Deprecated
  @javax.annotation.Nullable
  @ApiModelProperty(example = "John Test", value = "Customer's name. _Deprecated: Use customer object instead._")
  @JsonIgnore

  public String getName() {
        return name.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getName_JsonNullable() {
    return name;
  }
  
  @JsonProperty(JSON_PROPERTY_NAME)
  public void setName_JsonNullable(JsonNullable<String> name) {
    this.name = name;
  }

  public void setName(String name) {
    this.name = JsonNullable.<String>of(name);
  }


  public PayoutCreateResponse phone(String phone) {
    this.phone = JsonNullable.<String>of(phone);
    
    return this;
  }

   /**
   * Customer&#39;s phone. _Deprecated: Use customer object instead._
   * @return phone
   * @deprecated
  **/
  @Deprecated
  @javax.annotation.Nullable
  @ApiModelProperty(example = "9123456789", value = "Customer's phone. _Deprecated: Use customer object instead._")
  @JsonIgnore

  public String getPhone() {
        return phone.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PHONE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getPhone_JsonNullable() {
    return phone;
  }
  
  @JsonProperty(JSON_PROPERTY_PHONE)
  public void setPhone_JsonNullable(JsonNullable<String> phone) {
    this.phone = phone;
  }

  public void setPhone(String phone) {
    this.phone = JsonNullable.<String>of(phone);
  }


  public PayoutCreateResponse phoneCountryCode(String phoneCountryCode) {
    this.phoneCountryCode = JsonNullable.<String>of(phoneCountryCode);
    
    return this;
  }

   /**
   * Customer&#39;s phone country code. _Deprecated: Use customer object instead._
   * @return phoneCountryCode
   * @deprecated
  **/
  @Deprecated
  @javax.annotation.Nullable
  @ApiModelProperty(example = "+1", value = "Customer's phone country code. _Deprecated: Use customer object instead._")
  @JsonIgnore

  public String getPhoneCountryCode() {
        return phoneCountryCode.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PHONE_COUNTRY_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getPhoneCountryCode_JsonNullable() {
    return phoneCountryCode;
  }
  
  @JsonProperty(JSON_PROPERTY_PHONE_COUNTRY_CODE)
  public void setPhoneCountryCode_JsonNullable(JsonNullable<String> phoneCountryCode) {
    this.phoneCountryCode = phoneCountryCode;
  }

  public void setPhoneCountryCode(String phoneCountryCode) {
    this.phoneCountryCode = JsonNullable.<String>of(phoneCountryCode);
  }


  public PayoutCreateResponse unifiedCode(String unifiedCode) {
    this.unifiedCode = JsonNullable.<String>of(unifiedCode);
    
    return this;
  }

   /**
   * (This field is not live yet) Error code unified across the connectors is received here in case of errors while calling the underlying connector
   * @return unifiedCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "UE_000", value = "(This field is not live yet) Error code unified across the connectors is received here in case of errors while calling the underlying connector")
  @JsonIgnore

  public String getUnifiedCode() {
        return unifiedCode.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_UNIFIED_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getUnifiedCode_JsonNullable() {
    return unifiedCode;
  }
  
  @JsonProperty(JSON_PROPERTY_UNIFIED_CODE)
  public void setUnifiedCode_JsonNullable(JsonNullable<String> unifiedCode) {
    this.unifiedCode = unifiedCode;
  }

  public void setUnifiedCode(String unifiedCode) {
    this.unifiedCode = JsonNullable.<String>of(unifiedCode);
  }


  public PayoutCreateResponse unifiedMessage(String unifiedMessage) {
    this.unifiedMessage = JsonNullable.<String>of(unifiedMessage);
    
    return this;
  }

   /**
   * (This field is not live yet) Error message unified across the connectors is received here in case of errors while calling the underlying connector
   * @return unifiedMessage
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Invalid card details", value = "(This field is not live yet) Error message unified across the connectors is received here in case of errors while calling the underlying connector")
  @JsonIgnore

  public String getUnifiedMessage() {
        return unifiedMessage.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_UNIFIED_MESSAGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getUnifiedMessage_JsonNullable() {
    return unifiedMessage;
  }
  
  @JsonProperty(JSON_PROPERTY_UNIFIED_MESSAGE)
  public void setUnifiedMessage_JsonNullable(JsonNullable<String> unifiedMessage) {
    this.unifiedMessage = unifiedMessage;
  }

  public void setUnifiedMessage(String unifiedMessage) {
    this.unifiedMessage = JsonNullable.<String>of(unifiedMessage);
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PayoutCreateResponse payoutCreateResponse = (PayoutCreateResponse) o;
    return Objects.equals(this.payoutId, payoutCreateResponse.payoutId) &&
        Objects.equals(this.merchantId, payoutCreateResponse.merchantId) &&
        Objects.equals(this.amount, payoutCreateResponse.amount) &&
        Objects.equals(this.currency, payoutCreateResponse.currency) &&
        equalsNullable(this.connector, payoutCreateResponse.connector) &&
        equalsNullable(this.payoutType, payoutCreateResponse.payoutType) &&
        equalsNullable(this.payoutMethodData, payoutCreateResponse.payoutMethodData) &&
        equalsNullable(this.billing, payoutCreateResponse.billing) &&
        Objects.equals(this.autoFulfill, payoutCreateResponse.autoFulfill) &&
        Objects.equals(this.customerId, payoutCreateResponse.customerId) &&
        equalsNullable(this.customer, payoutCreateResponse.customer) &&
        Objects.equals(this.clientSecret, payoutCreateResponse.clientSecret) &&
        Objects.equals(this.returnUrl, payoutCreateResponse.returnUrl) &&
        Objects.equals(this.businessCountry, payoutCreateResponse.businessCountry) &&
        equalsNullable(this.businessLabel, payoutCreateResponse.businessLabel) &&
        equalsNullable(this.description, payoutCreateResponse.description) &&
        Objects.equals(this.entityType, payoutCreateResponse.entityType) &&
        Objects.equals(this.recurring, payoutCreateResponse.recurring) &&
        equalsNullable(this.metadata, payoutCreateResponse.metadata) &&
        equalsNullable(this.merchantConnectorId, payoutCreateResponse.merchantConnectorId) &&
        Objects.equals(this.status, payoutCreateResponse.status) &&
        equalsNullable(this.errorMessage, payoutCreateResponse.errorMessage) &&
        equalsNullable(this.errorCode, payoutCreateResponse.errorCode) &&
        Objects.equals(this.profileId, payoutCreateResponse.profileId) &&
        equalsNullable(this.created, payoutCreateResponse.created) &&
        equalsNullable(this.connectorTransactionId, payoutCreateResponse.connectorTransactionId) &&
        equalsNullable(this.priority, payoutCreateResponse.priority) &&
        equalsNullable(this.attempts, payoutCreateResponse.attempts) &&
        equalsNullable(this.payoutLink, payoutCreateResponse.payoutLink) &&
        equalsNullable(this.email, payoutCreateResponse.email) &&
        equalsNullable(this.name, payoutCreateResponse.name) &&
        equalsNullable(this.phone, payoutCreateResponse.phone) &&
        equalsNullable(this.phoneCountryCode, payoutCreateResponse.phoneCountryCode) &&
        equalsNullable(this.unifiedCode, payoutCreateResponse.unifiedCode) &&
        equalsNullable(this.unifiedMessage, payoutCreateResponse.unifiedMessage);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(payoutId, merchantId, amount, currency, hashCodeNullable(connector), hashCodeNullable(payoutType), hashCodeNullable(payoutMethodData), hashCodeNullable(billing), autoFulfill, customerId, hashCodeNullable(customer), clientSecret, returnUrl, businessCountry, hashCodeNullable(businessLabel), hashCodeNullable(description), entityType, recurring, hashCodeNullable(metadata), hashCodeNullable(merchantConnectorId), status, hashCodeNullable(errorMessage), hashCodeNullable(errorCode), profileId, hashCodeNullable(created), hashCodeNullable(connectorTransactionId), hashCodeNullable(priority), hashCodeNullable(attempts), hashCodeNullable(payoutLink), hashCodeNullable(email), hashCodeNullable(name), hashCodeNullable(phone), hashCodeNullable(phoneCountryCode), hashCodeNullable(unifiedCode), hashCodeNullable(unifiedMessage));
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PayoutCreateResponse {\n");
    sb.append("    payoutId: ").append(toIndentedString(payoutId)).append("\n");
    sb.append("    merchantId: ").append(toIndentedString(merchantId)).append("\n");
    sb.append("    amount: ").append(toIndentedString(amount)).append("\n");
    sb.append("    currency: ").append(toIndentedString(currency)).append("\n");
    sb.append("    connector: ").append(toIndentedString(connector)).append("\n");
    sb.append("    payoutType: ").append(toIndentedString(payoutType)).append("\n");
    sb.append("    payoutMethodData: ").append(toIndentedString(payoutMethodData)).append("\n");
    sb.append("    billing: ").append(toIndentedString(billing)).append("\n");
    sb.append("    autoFulfill: ").append(toIndentedString(autoFulfill)).append("\n");
    sb.append("    customerId: ").append(toIndentedString(customerId)).append("\n");
    sb.append("    customer: ").append(toIndentedString(customer)).append("\n");
    sb.append("    clientSecret: ").append(toIndentedString(clientSecret)).append("\n");
    sb.append("    returnUrl: ").append(toIndentedString(returnUrl)).append("\n");
    sb.append("    businessCountry: ").append(toIndentedString(businessCountry)).append("\n");
    sb.append("    businessLabel: ").append(toIndentedString(businessLabel)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    entityType: ").append(toIndentedString(entityType)).append("\n");
    sb.append("    recurring: ").append(toIndentedString(recurring)).append("\n");
    sb.append("    metadata: ").append(toIndentedString(metadata)).append("\n");
    sb.append("    merchantConnectorId: ").append(toIndentedString(merchantConnectorId)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    errorMessage: ").append(toIndentedString(errorMessage)).append("\n");
    sb.append("    errorCode: ").append(toIndentedString(errorCode)).append("\n");
    sb.append("    profileId: ").append(toIndentedString(profileId)).append("\n");
    sb.append("    created: ").append(toIndentedString(created)).append("\n");
    sb.append("    connectorTransactionId: ").append(toIndentedString(connectorTransactionId)).append("\n");
    sb.append("    priority: ").append(toIndentedString(priority)).append("\n");
    sb.append("    attempts: ").append(toIndentedString(attempts)).append("\n");
    sb.append("    payoutLink: ").append(toIndentedString(payoutLink)).append("\n");
    sb.append("    email: ").append(toIndentedString(email)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    phone: ").append(toIndentedString(phone)).append("\n");
    sb.append("    phoneCountryCode: ").append(toIndentedString(phoneCountryCode)).append("\n");
    sb.append("    unifiedCode: ").append(toIndentedString(unifiedCode)).append("\n");
    sb.append("    unifiedMessage: ").append(toIndentedString(unifiedMessage)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

