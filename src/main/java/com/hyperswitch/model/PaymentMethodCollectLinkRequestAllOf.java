/*
 * Hyperswitch - API Documentation
 *  ## Get started  Hyperswitch provides a collection of APIs that enable you to process and manage payments. Our APIs accept and return JSON in the HTTP body, and return standard HTTP response codes.  You can consume the APIs directly using your favorite HTTP/REST library.  We have a testing environment referred to \"sandbox\", which you can setup to test API calls without affecting production data. Currently, our sandbox environment is live while our production environment is under development and will be available soon. You can sign up on our Dashboard to get API keys to access Hyperswitch API.  ### Environment  Use the following base URLs when making requests to the APIs:  | Environment   |  Base URL                          | |---------------|------------------------------------| | Sandbox       | <https://sandbox.hyperswitch.io>   | | Production    | <https://api.hyperswitch.io>       |  ## Authentication  When you sign up on our [dashboard](https://app.hyperswitch.io) and create a merchant account, you are given a secret key (also referred as api-key) and a publishable key. You may authenticate all API requests with Hyperswitch server by providing the appropriate key in the request Authorization header.  | Key             |  Description                                                                                  | |-----------------|-----------------------------------------------------------------------------------------------| | api-key         | Private key. Used to authenticate all API requests from your merchant server                  | | publishable key | Unique identifier for your account. Used to authenticate API requests from your app's client  |  Never share your secret api keys. Keep them guarded and secure. 
 *
 * The version of the OpenAPI document: 0.1.0
 * Contact: hyperswitch@juspay.in
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.hyperswitch.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.hyperswitch.model.EnabledPaymentMethod;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * PaymentMethodCollectLinkRequestAllOf
 */
@JsonPropertyOrder({
  PaymentMethodCollectLinkRequestAllOf.JSON_PROPERTY_PM_COLLECT_LINK_ID,
  PaymentMethodCollectLinkRequestAllOf.JSON_PROPERTY_CUSTOMER_ID,
  PaymentMethodCollectLinkRequestAllOf.JSON_PROPERTY_SESSION_EXPIRY,
  PaymentMethodCollectLinkRequestAllOf.JSON_PROPERTY_RETURN_URL,
  PaymentMethodCollectLinkRequestAllOf.JSON_PROPERTY_ENABLED_PAYMENT_METHODS
})
@JsonTypeName("PaymentMethodCollectLinkRequest_allOf")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class PaymentMethodCollectLinkRequestAllOf {
  public static final String JSON_PROPERTY_PM_COLLECT_LINK_ID = "pm_collect_link_id";
  private JsonNullable<String> pmCollectLinkId = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_CUSTOMER_ID = "customer_id";
  private String customerId;

  public static final String JSON_PROPERTY_SESSION_EXPIRY = "session_expiry";
  private JsonNullable<Integer> sessionExpiry = JsonNullable.<Integer>undefined();

  public static final String JSON_PROPERTY_RETURN_URL = "return_url";
  private JsonNullable<String> returnUrl = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ENABLED_PAYMENT_METHODS = "enabled_payment_methods";
  private JsonNullable<List<EnabledPaymentMethod>> enabledPaymentMethods = JsonNullable.<List<EnabledPaymentMethod>>undefined();

  public PaymentMethodCollectLinkRequestAllOf() { 
  }

  public PaymentMethodCollectLinkRequestAllOf pmCollectLinkId(String pmCollectLinkId) {
    this.pmCollectLinkId = JsonNullable.<String>of(pmCollectLinkId);
    
    return this;
  }

   /**
   * The unique identifier for the collect link.
   * @return pmCollectLinkId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "pm_collect_link_2bdacf398vwzq5n422S1", value = "The unique identifier for the collect link.")
  @JsonIgnore

  public String getPmCollectLinkId() {
        return pmCollectLinkId.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PM_COLLECT_LINK_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getPmCollectLinkId_JsonNullable() {
    return pmCollectLinkId;
  }
  
  @JsonProperty(JSON_PROPERTY_PM_COLLECT_LINK_ID)
  public void setPmCollectLinkId_JsonNullable(JsonNullable<String> pmCollectLinkId) {
    this.pmCollectLinkId = pmCollectLinkId;
  }

  public void setPmCollectLinkId(String pmCollectLinkId) {
    this.pmCollectLinkId = JsonNullable.<String>of(pmCollectLinkId);
  }


  public PaymentMethodCollectLinkRequestAllOf customerId(String customerId) {
    
    this.customerId = customerId;
    return this;
  }

   /**
   * The unique identifier of the customer.
   * @return customerId
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "cus_92dnwed8s32bV9D8Snbiasd8v", required = true, value = "The unique identifier of the customer.")
  @JsonProperty(JSON_PROPERTY_CUSTOMER_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getCustomerId() {
    return customerId;
  }


  @JsonProperty(JSON_PROPERTY_CUSTOMER_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setCustomerId(String customerId) {
    this.customerId = customerId;
  }


  public PaymentMethodCollectLinkRequestAllOf sessionExpiry(Integer sessionExpiry) {
    this.sessionExpiry = JsonNullable.<Integer>of(sessionExpiry);
    
    return this;
  }

   /**
   * Will be used to expire client secret after certain amount of time to be supplied in seconds (900) for 15 mins
   * minimum: 0
   * @return sessionExpiry
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "900", value = "Will be used to expire client secret after certain amount of time to be supplied in seconds (900) for 15 mins")
  @JsonIgnore

  public Integer getSessionExpiry() {
        return sessionExpiry.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_SESSION_EXPIRY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Integer> getSessionExpiry_JsonNullable() {
    return sessionExpiry;
  }
  
  @JsonProperty(JSON_PROPERTY_SESSION_EXPIRY)
  public void setSessionExpiry_JsonNullable(JsonNullable<Integer> sessionExpiry) {
    this.sessionExpiry = sessionExpiry;
  }

  public void setSessionExpiry(Integer sessionExpiry) {
    this.sessionExpiry = JsonNullable.<Integer>of(sessionExpiry);
  }


  public PaymentMethodCollectLinkRequestAllOf returnUrl(String returnUrl) {
    this.returnUrl = JsonNullable.<String>of(returnUrl);
    
    return this;
  }

   /**
   * Redirect to this URL post completion
   * @return returnUrl
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "https://sandbox.hyperswitch.io/payment_method/collect/pm_collect_link_2bdacf398vwzq5n422S1/status", value = "Redirect to this URL post completion")
  @JsonIgnore

  public String getReturnUrl() {
        return returnUrl.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_RETURN_URL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getReturnUrl_JsonNullable() {
    return returnUrl;
  }
  
  @JsonProperty(JSON_PROPERTY_RETURN_URL)
  public void setReturnUrl_JsonNullable(JsonNullable<String> returnUrl) {
    this.returnUrl = returnUrl;
  }

  public void setReturnUrl(String returnUrl) {
    this.returnUrl = JsonNullable.<String>of(returnUrl);
  }


  public PaymentMethodCollectLinkRequestAllOf enabledPaymentMethods(List<EnabledPaymentMethod> enabledPaymentMethods) {
    this.enabledPaymentMethods = JsonNullable.<List<EnabledPaymentMethod>>of(enabledPaymentMethods);
    
    return this;
  }

  public PaymentMethodCollectLinkRequestAllOf addEnabledPaymentMethodsItem(EnabledPaymentMethod enabledPaymentMethodsItem) {
    if (this.enabledPaymentMethods == null || !this.enabledPaymentMethods.isPresent()) {
      this.enabledPaymentMethods = JsonNullable.<List<EnabledPaymentMethod>>of(new ArrayList<>());
    }
    try {
      this.enabledPaymentMethods.get().add(enabledPaymentMethodsItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * List of payment methods shown on collect UI
   * @return enabledPaymentMethods
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "[{\"payment_method\": \"bank_transfer\", \"payment_method_types\": [\"ach\", \"bacs\"]}]", value = "List of payment methods shown on collect UI")
  @JsonIgnore

  public List<EnabledPaymentMethod> getEnabledPaymentMethods() {
        return enabledPaymentMethods.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ENABLED_PAYMENT_METHODS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<EnabledPaymentMethod>> getEnabledPaymentMethods_JsonNullable() {
    return enabledPaymentMethods;
  }
  
  @JsonProperty(JSON_PROPERTY_ENABLED_PAYMENT_METHODS)
  public void setEnabledPaymentMethods_JsonNullable(JsonNullable<List<EnabledPaymentMethod>> enabledPaymentMethods) {
    this.enabledPaymentMethods = enabledPaymentMethods;
  }

  public void setEnabledPaymentMethods(List<EnabledPaymentMethod> enabledPaymentMethods) {
    this.enabledPaymentMethods = JsonNullable.<List<EnabledPaymentMethod>>of(enabledPaymentMethods);
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PaymentMethodCollectLinkRequestAllOf paymentMethodCollectLinkRequestAllOf = (PaymentMethodCollectLinkRequestAllOf) o;
    return equalsNullable(this.pmCollectLinkId, paymentMethodCollectLinkRequestAllOf.pmCollectLinkId) &&
        Objects.equals(this.customerId, paymentMethodCollectLinkRequestAllOf.customerId) &&
        equalsNullable(this.sessionExpiry, paymentMethodCollectLinkRequestAllOf.sessionExpiry) &&
        equalsNullable(this.returnUrl, paymentMethodCollectLinkRequestAllOf.returnUrl) &&
        equalsNullable(this.enabledPaymentMethods, paymentMethodCollectLinkRequestAllOf.enabledPaymentMethods);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(hashCodeNullable(pmCollectLinkId), customerId, hashCodeNullable(sessionExpiry), hashCodeNullable(returnUrl), hashCodeNullable(enabledPaymentMethods));
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PaymentMethodCollectLinkRequestAllOf {\n");
    sb.append("    pmCollectLinkId: ").append(toIndentedString(pmCollectLinkId)).append("\n");
    sb.append("    customerId: ").append(toIndentedString(customerId)).append("\n");
    sb.append("    sessionExpiry: ").append(toIndentedString(sessionExpiry)).append("\n");
    sb.append("    returnUrl: ").append(toIndentedString(returnUrl)).append("\n");
    sb.append("    enabledPaymentMethods: ").append(toIndentedString(enabledPaymentMethods)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

