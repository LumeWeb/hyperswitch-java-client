/*
 * Hyperswitch - API Documentation
 *  ## Get started  Hyperswitch provides a collection of APIs that enable you to process and manage payments. Our APIs accept and return JSON in the HTTP body, and return standard HTTP response codes.  You can consume the APIs directly using your favorite HTTP/REST library.  We have a testing environment referred to \"sandbox\", which you can setup to test API calls without affecting production data. Currently, our sandbox environment is live while our production environment is under development and will be available soon. You can sign up on our Dashboard to get API keys to access Hyperswitch API.  ### Environment  Use the following base URLs when making requests to the APIs:  | Environment   |  Base URL                          | |---------------|------------------------------------| | Sandbox       | <https://sandbox.hyperswitch.io>   | | Production    | <https://api.hyperswitch.io>       |  ## Authentication  When you sign up on our [dashboard](https://app.hyperswitch.io) and create a merchant account, you are given a secret key (also referred as api-key) and a publishable key. You may authenticate all API requests with Hyperswitch server by providing the appropriate key in the request Authorization header.  | Key             |  Description                                                                                  | |-----------------|-----------------------------------------------------------------------------------------------| | api-key         | Private key. Used to authenticate all API requests from your merchant server                  | | publishable key | Unique identifier for your account. Used to authenticate API requests from your app's client  |  Never share your secret api keys. Keep them guarded and secure. 
 *
 * The version of the OpenAPI document: 0.1.0
 * Contact: hyperswitch@juspay.in
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.hyperswitch.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.hyperswitch.model.BankRedirectDataOneOf;
import com.hyperswitch.model.BankRedirectDataOneOf1;
import com.hyperswitch.model.BankRedirectDataOneOf10;
import com.hyperswitch.model.BankRedirectDataOneOf11;
import com.hyperswitch.model.BankRedirectDataOneOf11OpenBankingUk;
import com.hyperswitch.model.BankRedirectDataOneOf12;
import com.hyperswitch.model.BankRedirectDataOneOf12Przelewy24;
import com.hyperswitch.model.BankRedirectDataOneOf13;
import com.hyperswitch.model.BankRedirectDataOneOf13Sofort;
import com.hyperswitch.model.BankRedirectDataOneOf14;
import com.hyperswitch.model.BankRedirectDataOneOf14Trustly;
import com.hyperswitch.model.BankRedirectDataOneOf15;
import com.hyperswitch.model.BankRedirectDataOneOf16;
import com.hyperswitch.model.BankRedirectDataOneOf17;
import com.hyperswitch.model.BankRedirectDataOneOf2;
import com.hyperswitch.model.BankRedirectDataOneOf2Blik;
import com.hyperswitch.model.BankRedirectDataOneOf3;
import com.hyperswitch.model.BankRedirectDataOneOf3Eps;
import com.hyperswitch.model.BankRedirectDataOneOf4;
import com.hyperswitch.model.BankRedirectDataOneOf4Giropay;
import com.hyperswitch.model.BankRedirectDataOneOf5;
import com.hyperswitch.model.BankRedirectDataOneOf6;
import com.hyperswitch.model.BankRedirectDataOneOf6Interac;
import com.hyperswitch.model.BankRedirectDataOneOf7;
import com.hyperswitch.model.BankRedirectDataOneOf7OnlineBankingCzechRepublic;
import com.hyperswitch.model.BankRedirectDataOneOf8;
import com.hyperswitch.model.BankRedirectDataOneOf8OnlineBankingFinland;
import com.hyperswitch.model.BankRedirectDataOneOf9;
import com.hyperswitch.model.BankRedirectDataOneOfBancontactCard;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * BankRedirectData
 */
@JsonPropertyOrder({
  BankRedirectData.JSON_PROPERTY_BANCONTACT_CARD,
  BankRedirectData.JSON_PROPERTY_BIZUM,
  BankRedirectData.JSON_PROPERTY_BLIK,
  BankRedirectData.JSON_PROPERTY_EPS,
  BankRedirectData.JSON_PROPERTY_GIROPAY,
  BankRedirectData.JSON_PROPERTY_IDEAL,
  BankRedirectData.JSON_PROPERTY_INTERAC,
  BankRedirectData.JSON_PROPERTY_ONLINE_BANKING_CZECH_REPUBLIC,
  BankRedirectData.JSON_PROPERTY_ONLINE_BANKING_FINLAND,
  BankRedirectData.JSON_PROPERTY_ONLINE_BANKING_POLAND,
  BankRedirectData.JSON_PROPERTY_ONLINE_BANKING_SLOVAKIA,
  BankRedirectData.JSON_PROPERTY_OPEN_BANKING_UK,
  BankRedirectData.JSON_PROPERTY_PRZELEWY24,
  BankRedirectData.JSON_PROPERTY_SOFORT,
  BankRedirectData.JSON_PROPERTY_TRUSTLY,
  BankRedirectData.JSON_PROPERTY_ONLINE_BANKING_FPX,
  BankRedirectData.JSON_PROPERTY_ONLINE_BANKING_THAILAND,
  BankRedirectData.JSON_PROPERTY_LOCAL_BANK_REDIRECT
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.11.0-SNAPSHOT")
public class BankRedirectData {
  public static final String JSON_PROPERTY_BANCONTACT_CARD = "bancontact_card";
  @javax.annotation.Nonnull
  private BankRedirectDataOneOfBancontactCard bancontactCard;

  public static final String JSON_PROPERTY_BIZUM = "bizum";
  @javax.annotation.Nonnull
  private Object bizum;

  public static final String JSON_PROPERTY_BLIK = "blik";
  @javax.annotation.Nonnull
  private BankRedirectDataOneOf2Blik blik;

  public static final String JSON_PROPERTY_EPS = "eps";
  @javax.annotation.Nonnull
  private BankRedirectDataOneOf3Eps eps;

  public static final String JSON_PROPERTY_GIROPAY = "giropay";
  @javax.annotation.Nonnull
  private BankRedirectDataOneOf4Giropay giropay;

  public static final String JSON_PROPERTY_IDEAL = "ideal";
  @javax.annotation.Nonnull
  private BankRedirectDataOneOf3Eps ideal;

  public static final String JSON_PROPERTY_INTERAC = "interac";
  @javax.annotation.Nonnull
  private BankRedirectDataOneOf6Interac interac;

  public static final String JSON_PROPERTY_ONLINE_BANKING_CZECH_REPUBLIC = "online_banking_czech_republic";
  @javax.annotation.Nonnull
  private BankRedirectDataOneOf7OnlineBankingCzechRepublic onlineBankingCzechRepublic;

  public static final String JSON_PROPERTY_ONLINE_BANKING_FINLAND = "online_banking_finland";
  @javax.annotation.Nonnull
  private BankRedirectDataOneOf8OnlineBankingFinland onlineBankingFinland;

  public static final String JSON_PROPERTY_ONLINE_BANKING_POLAND = "online_banking_poland";
  @javax.annotation.Nonnull
  private BankRedirectDataOneOf7OnlineBankingCzechRepublic onlineBankingPoland;

  public static final String JSON_PROPERTY_ONLINE_BANKING_SLOVAKIA = "online_banking_slovakia";
  @javax.annotation.Nonnull
  private BankRedirectDataOneOf7OnlineBankingCzechRepublic onlineBankingSlovakia;

  public static final String JSON_PROPERTY_OPEN_BANKING_UK = "open_banking_uk";
  @javax.annotation.Nonnull
  private BankRedirectDataOneOf11OpenBankingUk openBankingUk;

  public static final String JSON_PROPERTY_PRZELEWY24 = "przelewy24";
  @javax.annotation.Nonnull
  private BankRedirectDataOneOf12Przelewy24 przelewy24;

  public static final String JSON_PROPERTY_SOFORT = "sofort";
  @javax.annotation.Nonnull
  private BankRedirectDataOneOf13Sofort sofort;

  public static final String JSON_PROPERTY_TRUSTLY = "trustly";
  @javax.annotation.Nonnull
  private BankRedirectDataOneOf14Trustly trustly;

  public static final String JSON_PROPERTY_ONLINE_BANKING_FPX = "online_banking_fpx";
  @javax.annotation.Nonnull
  private BankRedirectDataOneOf7OnlineBankingCzechRepublic onlineBankingFpx;

  public static final String JSON_PROPERTY_ONLINE_BANKING_THAILAND = "online_banking_thailand";
  @javax.annotation.Nonnull
  private BankRedirectDataOneOf7OnlineBankingCzechRepublic onlineBankingThailand;

  public static final String JSON_PROPERTY_LOCAL_BANK_REDIRECT = "local_bank_redirect";
  @javax.annotation.Nonnull
  private Object localBankRedirect;

  public BankRedirectData() {
  }

  public BankRedirectData bancontactCard(@javax.annotation.Nonnull BankRedirectDataOneOfBancontactCard bancontactCard) {
    
    this.bancontactCard = bancontactCard;
    return this;
  }

  /**
   * Get bancontactCard
   * @return bancontactCard
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_BANCONTACT_CARD)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public BankRedirectDataOneOfBancontactCard getBancontactCard() {
    return bancontactCard;
  }


  @JsonProperty(JSON_PROPERTY_BANCONTACT_CARD)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setBancontactCard(@javax.annotation.Nonnull BankRedirectDataOneOfBancontactCard bancontactCard) {
    this.bancontactCard = bancontactCard;
  }


  public BankRedirectData bizum(@javax.annotation.Nonnull Object bizum) {
    
    this.bizum = bizum;
    return this;
  }

  /**
   * Get bizum
   * @return bizum
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_BIZUM)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Object getBizum() {
    return bizum;
  }


  @JsonProperty(JSON_PROPERTY_BIZUM)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setBizum(@javax.annotation.Nonnull Object bizum) {
    this.bizum = bizum;
  }


  public BankRedirectData blik(@javax.annotation.Nonnull BankRedirectDataOneOf2Blik blik) {
    
    this.blik = blik;
    return this;
  }

  /**
   * Get blik
   * @return blik
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_BLIK)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public BankRedirectDataOneOf2Blik getBlik() {
    return blik;
  }


  @JsonProperty(JSON_PROPERTY_BLIK)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setBlik(@javax.annotation.Nonnull BankRedirectDataOneOf2Blik blik) {
    this.blik = blik;
  }


  public BankRedirectData eps(@javax.annotation.Nonnull BankRedirectDataOneOf3Eps eps) {
    
    this.eps = eps;
    return this;
  }

  /**
   * Get eps
   * @return eps
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_EPS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public BankRedirectDataOneOf3Eps getEps() {
    return eps;
  }


  @JsonProperty(JSON_PROPERTY_EPS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setEps(@javax.annotation.Nonnull BankRedirectDataOneOf3Eps eps) {
    this.eps = eps;
  }


  public BankRedirectData giropay(@javax.annotation.Nonnull BankRedirectDataOneOf4Giropay giropay) {
    
    this.giropay = giropay;
    return this;
  }

  /**
   * Get giropay
   * @return giropay
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_GIROPAY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public BankRedirectDataOneOf4Giropay getGiropay() {
    return giropay;
  }


  @JsonProperty(JSON_PROPERTY_GIROPAY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setGiropay(@javax.annotation.Nonnull BankRedirectDataOneOf4Giropay giropay) {
    this.giropay = giropay;
  }


  public BankRedirectData ideal(@javax.annotation.Nonnull BankRedirectDataOneOf3Eps ideal) {
    
    this.ideal = ideal;
    return this;
  }

  /**
   * Get ideal
   * @return ideal
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_IDEAL)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public BankRedirectDataOneOf3Eps getIdeal() {
    return ideal;
  }


  @JsonProperty(JSON_PROPERTY_IDEAL)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setIdeal(@javax.annotation.Nonnull BankRedirectDataOneOf3Eps ideal) {
    this.ideal = ideal;
  }


  public BankRedirectData interac(@javax.annotation.Nonnull BankRedirectDataOneOf6Interac interac) {
    
    this.interac = interac;
    return this;
  }

  /**
   * Get interac
   * @return interac
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_INTERAC)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public BankRedirectDataOneOf6Interac getInterac() {
    return interac;
  }


  @JsonProperty(JSON_PROPERTY_INTERAC)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setInterac(@javax.annotation.Nonnull BankRedirectDataOneOf6Interac interac) {
    this.interac = interac;
  }


  public BankRedirectData onlineBankingCzechRepublic(@javax.annotation.Nonnull BankRedirectDataOneOf7OnlineBankingCzechRepublic onlineBankingCzechRepublic) {
    
    this.onlineBankingCzechRepublic = onlineBankingCzechRepublic;
    return this;
  }

  /**
   * Get onlineBankingCzechRepublic
   * @return onlineBankingCzechRepublic
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_ONLINE_BANKING_CZECH_REPUBLIC)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public BankRedirectDataOneOf7OnlineBankingCzechRepublic getOnlineBankingCzechRepublic() {
    return onlineBankingCzechRepublic;
  }


  @JsonProperty(JSON_PROPERTY_ONLINE_BANKING_CZECH_REPUBLIC)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setOnlineBankingCzechRepublic(@javax.annotation.Nonnull BankRedirectDataOneOf7OnlineBankingCzechRepublic onlineBankingCzechRepublic) {
    this.onlineBankingCzechRepublic = onlineBankingCzechRepublic;
  }


  public BankRedirectData onlineBankingFinland(@javax.annotation.Nonnull BankRedirectDataOneOf8OnlineBankingFinland onlineBankingFinland) {
    
    this.onlineBankingFinland = onlineBankingFinland;
    return this;
  }

  /**
   * Get onlineBankingFinland
   * @return onlineBankingFinland
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_ONLINE_BANKING_FINLAND)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public BankRedirectDataOneOf8OnlineBankingFinland getOnlineBankingFinland() {
    return onlineBankingFinland;
  }


  @JsonProperty(JSON_PROPERTY_ONLINE_BANKING_FINLAND)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setOnlineBankingFinland(@javax.annotation.Nonnull BankRedirectDataOneOf8OnlineBankingFinland onlineBankingFinland) {
    this.onlineBankingFinland = onlineBankingFinland;
  }


  public BankRedirectData onlineBankingPoland(@javax.annotation.Nonnull BankRedirectDataOneOf7OnlineBankingCzechRepublic onlineBankingPoland) {
    
    this.onlineBankingPoland = onlineBankingPoland;
    return this;
  }

  /**
   * Get onlineBankingPoland
   * @return onlineBankingPoland
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_ONLINE_BANKING_POLAND)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public BankRedirectDataOneOf7OnlineBankingCzechRepublic getOnlineBankingPoland() {
    return onlineBankingPoland;
  }


  @JsonProperty(JSON_PROPERTY_ONLINE_BANKING_POLAND)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setOnlineBankingPoland(@javax.annotation.Nonnull BankRedirectDataOneOf7OnlineBankingCzechRepublic onlineBankingPoland) {
    this.onlineBankingPoland = onlineBankingPoland;
  }


  public BankRedirectData onlineBankingSlovakia(@javax.annotation.Nonnull BankRedirectDataOneOf7OnlineBankingCzechRepublic onlineBankingSlovakia) {
    
    this.onlineBankingSlovakia = onlineBankingSlovakia;
    return this;
  }

  /**
   * Get onlineBankingSlovakia
   * @return onlineBankingSlovakia
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_ONLINE_BANKING_SLOVAKIA)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public BankRedirectDataOneOf7OnlineBankingCzechRepublic getOnlineBankingSlovakia() {
    return onlineBankingSlovakia;
  }


  @JsonProperty(JSON_PROPERTY_ONLINE_BANKING_SLOVAKIA)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setOnlineBankingSlovakia(@javax.annotation.Nonnull BankRedirectDataOneOf7OnlineBankingCzechRepublic onlineBankingSlovakia) {
    this.onlineBankingSlovakia = onlineBankingSlovakia;
  }


  public BankRedirectData openBankingUk(@javax.annotation.Nonnull BankRedirectDataOneOf11OpenBankingUk openBankingUk) {
    
    this.openBankingUk = openBankingUk;
    return this;
  }

  /**
   * Get openBankingUk
   * @return openBankingUk
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_OPEN_BANKING_UK)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public BankRedirectDataOneOf11OpenBankingUk getOpenBankingUk() {
    return openBankingUk;
  }


  @JsonProperty(JSON_PROPERTY_OPEN_BANKING_UK)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setOpenBankingUk(@javax.annotation.Nonnull BankRedirectDataOneOf11OpenBankingUk openBankingUk) {
    this.openBankingUk = openBankingUk;
  }


  public BankRedirectData przelewy24(@javax.annotation.Nonnull BankRedirectDataOneOf12Przelewy24 przelewy24) {
    
    this.przelewy24 = przelewy24;
    return this;
  }

  /**
   * Get przelewy24
   * @return przelewy24
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_PRZELEWY24)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public BankRedirectDataOneOf12Przelewy24 getPrzelewy24() {
    return przelewy24;
  }


  @JsonProperty(JSON_PROPERTY_PRZELEWY24)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setPrzelewy24(@javax.annotation.Nonnull BankRedirectDataOneOf12Przelewy24 przelewy24) {
    this.przelewy24 = przelewy24;
  }


  public BankRedirectData sofort(@javax.annotation.Nonnull BankRedirectDataOneOf13Sofort sofort) {
    
    this.sofort = sofort;
    return this;
  }

  /**
   * Get sofort
   * @return sofort
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_SOFORT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public BankRedirectDataOneOf13Sofort getSofort() {
    return sofort;
  }


  @JsonProperty(JSON_PROPERTY_SOFORT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setSofort(@javax.annotation.Nonnull BankRedirectDataOneOf13Sofort sofort) {
    this.sofort = sofort;
  }


  public BankRedirectData trustly(@javax.annotation.Nonnull BankRedirectDataOneOf14Trustly trustly) {
    
    this.trustly = trustly;
    return this;
  }

  /**
   * Get trustly
   * @return trustly
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_TRUSTLY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public BankRedirectDataOneOf14Trustly getTrustly() {
    return trustly;
  }


  @JsonProperty(JSON_PROPERTY_TRUSTLY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setTrustly(@javax.annotation.Nonnull BankRedirectDataOneOf14Trustly trustly) {
    this.trustly = trustly;
  }


  public BankRedirectData onlineBankingFpx(@javax.annotation.Nonnull BankRedirectDataOneOf7OnlineBankingCzechRepublic onlineBankingFpx) {
    
    this.onlineBankingFpx = onlineBankingFpx;
    return this;
  }

  /**
   * Get onlineBankingFpx
   * @return onlineBankingFpx
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_ONLINE_BANKING_FPX)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public BankRedirectDataOneOf7OnlineBankingCzechRepublic getOnlineBankingFpx() {
    return onlineBankingFpx;
  }


  @JsonProperty(JSON_PROPERTY_ONLINE_BANKING_FPX)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setOnlineBankingFpx(@javax.annotation.Nonnull BankRedirectDataOneOf7OnlineBankingCzechRepublic onlineBankingFpx) {
    this.onlineBankingFpx = onlineBankingFpx;
  }


  public BankRedirectData onlineBankingThailand(@javax.annotation.Nonnull BankRedirectDataOneOf7OnlineBankingCzechRepublic onlineBankingThailand) {
    
    this.onlineBankingThailand = onlineBankingThailand;
    return this;
  }

  /**
   * Get onlineBankingThailand
   * @return onlineBankingThailand
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_ONLINE_BANKING_THAILAND)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public BankRedirectDataOneOf7OnlineBankingCzechRepublic getOnlineBankingThailand() {
    return onlineBankingThailand;
  }


  @JsonProperty(JSON_PROPERTY_ONLINE_BANKING_THAILAND)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setOnlineBankingThailand(@javax.annotation.Nonnull BankRedirectDataOneOf7OnlineBankingCzechRepublic onlineBankingThailand) {
    this.onlineBankingThailand = onlineBankingThailand;
  }


  public BankRedirectData localBankRedirect(@javax.annotation.Nonnull Object localBankRedirect) {
    
    this.localBankRedirect = localBankRedirect;
    return this;
  }

  /**
   * Get localBankRedirect
   * @return localBankRedirect
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_LOCAL_BANK_REDIRECT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Object getLocalBankRedirect() {
    return localBankRedirect;
  }


  @JsonProperty(JSON_PROPERTY_LOCAL_BANK_REDIRECT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setLocalBankRedirect(@javax.annotation.Nonnull Object localBankRedirect) {
    this.localBankRedirect = localBankRedirect;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    BankRedirectData bankRedirectData = (BankRedirectData) o;
    return Objects.equals(this.bancontactCard, bankRedirectData.bancontactCard) &&
        Objects.equals(this.bizum, bankRedirectData.bizum) &&
        Objects.equals(this.blik, bankRedirectData.blik) &&
        Objects.equals(this.eps, bankRedirectData.eps) &&
        Objects.equals(this.giropay, bankRedirectData.giropay) &&
        Objects.equals(this.ideal, bankRedirectData.ideal) &&
        Objects.equals(this.interac, bankRedirectData.interac) &&
        Objects.equals(this.onlineBankingCzechRepublic, bankRedirectData.onlineBankingCzechRepublic) &&
        Objects.equals(this.onlineBankingFinland, bankRedirectData.onlineBankingFinland) &&
        Objects.equals(this.onlineBankingPoland, bankRedirectData.onlineBankingPoland) &&
        Objects.equals(this.onlineBankingSlovakia, bankRedirectData.onlineBankingSlovakia) &&
        Objects.equals(this.openBankingUk, bankRedirectData.openBankingUk) &&
        Objects.equals(this.przelewy24, bankRedirectData.przelewy24) &&
        Objects.equals(this.sofort, bankRedirectData.sofort) &&
        Objects.equals(this.trustly, bankRedirectData.trustly) &&
        Objects.equals(this.onlineBankingFpx, bankRedirectData.onlineBankingFpx) &&
        Objects.equals(this.onlineBankingThailand, bankRedirectData.onlineBankingThailand) &&
        Objects.equals(this.localBankRedirect, bankRedirectData.localBankRedirect);
  }

  @Override
  public int hashCode() {
    return Objects.hash(bancontactCard, bizum, blik, eps, giropay, ideal, interac, onlineBankingCzechRepublic, onlineBankingFinland, onlineBankingPoland, onlineBankingSlovakia, openBankingUk, przelewy24, sofort, trustly, onlineBankingFpx, onlineBankingThailand, localBankRedirect);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class BankRedirectData {\n");
    sb.append("    bancontactCard: ").append(toIndentedString(bancontactCard)).append("\n");
    sb.append("    bizum: ").append(toIndentedString(bizum)).append("\n");
    sb.append("    blik: ").append(toIndentedString(blik)).append("\n");
    sb.append("    eps: ").append(toIndentedString(eps)).append("\n");
    sb.append("    giropay: ").append(toIndentedString(giropay)).append("\n");
    sb.append("    ideal: ").append(toIndentedString(ideal)).append("\n");
    sb.append("    interac: ").append(toIndentedString(interac)).append("\n");
    sb.append("    onlineBankingCzechRepublic: ").append(toIndentedString(onlineBankingCzechRepublic)).append("\n");
    sb.append("    onlineBankingFinland: ").append(toIndentedString(onlineBankingFinland)).append("\n");
    sb.append("    onlineBankingPoland: ").append(toIndentedString(onlineBankingPoland)).append("\n");
    sb.append("    onlineBankingSlovakia: ").append(toIndentedString(onlineBankingSlovakia)).append("\n");
    sb.append("    openBankingUk: ").append(toIndentedString(openBankingUk)).append("\n");
    sb.append("    przelewy24: ").append(toIndentedString(przelewy24)).append("\n");
    sb.append("    sofort: ").append(toIndentedString(sofort)).append("\n");
    sb.append("    trustly: ").append(toIndentedString(trustly)).append("\n");
    sb.append("    onlineBankingFpx: ").append(toIndentedString(onlineBankingFpx)).append("\n");
    sb.append("    onlineBankingThailand: ").append(toIndentedString(onlineBankingThailand)).append("\n");
    sb.append("    localBankRedirect: ").append(toIndentedString(localBankRedirect)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

