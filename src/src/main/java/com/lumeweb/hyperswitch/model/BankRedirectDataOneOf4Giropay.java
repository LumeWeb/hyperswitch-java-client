/*
 * Hyperswitch - API Documentation
 *  ## Get started  Hyperswitch provides a collection of APIs that enable you to process and manage payments. Our APIs accept and return JSON in the HTTP body, and return standard HTTP response codes.  You can consume the APIs directly using your favorite HTTP/REST library.  We have a testing environment referred to \"sandbox\", which you can setup to test API calls without affecting production data. Currently, our sandbox environment is live while our production environment is under development and will be available soon. You can sign up on our Dashboard to get API keys to access Hyperswitch API.  ### Environment  Use the following base URLs when making requests to the APIs:  | Environment   |  Base URL                          | |---------------|------------------------------------| | Sandbox       | <https://sandbox.hyperswitch.io>   | | Production    | <https://api.hyperswitch.io>       |  ## Authentication  When you sign up on our [dashboard](https://app.hyperswitch.io) and create a merchant account, you are given a secret key (also referred as api-key) and a publishable key. You may authenticate all API requests with Hyperswitch server by providing the appropriate key in the request Authorization header.  | Key             |  Description                                                                                  | |-----------------|-----------------------------------------------------------------------------------------------| | api-key         | Private key. Used to authenticate all API requests from your merchant server                  | | publishable key | Unique identifier for your account. Used to authenticate API requests from your app's client  |  Never share your secret api keys. Keep them guarded and secure. 
 *
 * The version of the OpenAPI document: 0.1.0
 * Contact: hyperswitch@juspay.in
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.lumeweb.hyperswitch.model;

import java.net.URLEncoder;
import java.nio.charset.StandardCharsets;
import java.util.StringJoiner;
import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.lumeweb.hyperswitch.model.BankRedirectBilling;
import com.lumeweb.hyperswitch.model.CountryAlpha2;
import java.util.Arrays;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


import com.lumeweb.hyperswitch.client.ApiClient;
/**
 * BankRedirectDataOneOf4Giropay
 */
@JsonPropertyOrder({
  BankRedirectDataOneOf4Giropay.JSON_PROPERTY_BILLING_DETAILS,
  BankRedirectDataOneOf4Giropay.JSON_PROPERTY_BANK_ACCOUNT_BIC,
  BankRedirectDataOneOf4Giropay.JSON_PROPERTY_BANK_ACCOUNT_IBAN,
  BankRedirectDataOneOf4Giropay.JSON_PROPERTY_COUNTRY
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.11.0-SNAPSHOT")
public class BankRedirectDataOneOf4Giropay {
  public static final String JSON_PROPERTY_BILLING_DETAILS = "billing_details";
  private JsonNullable<BankRedirectBilling> billingDetails = JsonNullable.<BankRedirectBilling>undefined();

  public static final String JSON_PROPERTY_BANK_ACCOUNT_BIC = "bank_account_bic";
  private JsonNullable<String> bankAccountBic = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_BANK_ACCOUNT_IBAN = "bank_account_iban";
  private JsonNullable<String> bankAccountIban = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_COUNTRY = "country";
  @javax.annotation.Nonnull
  private CountryAlpha2 country;

  public BankRedirectDataOneOf4Giropay() { 
  }

  public BankRedirectDataOneOf4Giropay billingDetails(@javax.annotation.Nullable BankRedirectBilling billingDetails) {
    this.billingDetails = JsonNullable.<BankRedirectBilling>of(billingDetails);
    return this;
  }

  /**
   * Get billingDetails
   * @return billingDetails
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public BankRedirectBilling getBillingDetails() {
        return billingDetails.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_BILLING_DETAILS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<BankRedirectBilling> getBillingDetails_JsonNullable() {
    return billingDetails;
  }
  
  @JsonProperty(JSON_PROPERTY_BILLING_DETAILS)
  public void setBillingDetails_JsonNullable(JsonNullable<BankRedirectBilling> billingDetails) {
    this.billingDetails = billingDetails;
  }

  public void setBillingDetails(@javax.annotation.Nullable BankRedirectBilling billingDetails) {
    this.billingDetails = JsonNullable.<BankRedirectBilling>of(billingDetails);
  }


  public BankRedirectDataOneOf4Giropay bankAccountBic(@javax.annotation.Nullable String bankAccountBic) {
    this.bankAccountBic = JsonNullable.<String>of(bankAccountBic);
    return this;
  }

  /**
   * Bank account details for Giropay Bank account bic code
   * @return bankAccountBic
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public String getBankAccountBic() {
        return bankAccountBic.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_BANK_ACCOUNT_BIC)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getBankAccountBic_JsonNullable() {
    return bankAccountBic;
  }
  
  @JsonProperty(JSON_PROPERTY_BANK_ACCOUNT_BIC)
  public void setBankAccountBic_JsonNullable(JsonNullable<String> bankAccountBic) {
    this.bankAccountBic = bankAccountBic;
  }

  public void setBankAccountBic(@javax.annotation.Nullable String bankAccountBic) {
    this.bankAccountBic = JsonNullable.<String>of(bankAccountBic);
  }


  public BankRedirectDataOneOf4Giropay bankAccountIban(@javax.annotation.Nullable String bankAccountIban) {
    this.bankAccountIban = JsonNullable.<String>of(bankAccountIban);
    return this;
  }

  /**
   * Bank account iban
   * @return bankAccountIban
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public String getBankAccountIban() {
        return bankAccountIban.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_BANK_ACCOUNT_IBAN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getBankAccountIban_JsonNullable() {
    return bankAccountIban;
  }
  
  @JsonProperty(JSON_PROPERTY_BANK_ACCOUNT_IBAN)
  public void setBankAccountIban_JsonNullable(JsonNullable<String> bankAccountIban) {
    this.bankAccountIban = bankAccountIban;
  }

  public void setBankAccountIban(@javax.annotation.Nullable String bankAccountIban) {
    this.bankAccountIban = JsonNullable.<String>of(bankAccountIban);
  }


  public BankRedirectDataOneOf4Giropay country(@javax.annotation.Nonnull CountryAlpha2 country) {
    this.country = country;
    return this;
  }

  /**
   * Get country
   * @return country
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_COUNTRY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public CountryAlpha2 getCountry() {
    return country;
  }


  @JsonProperty(JSON_PROPERTY_COUNTRY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setCountry(@javax.annotation.Nonnull CountryAlpha2 country) {
    this.country = country;
  }


  /**
   * Return true if this BankRedirectData_oneOf_4_giropay object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    BankRedirectDataOneOf4Giropay bankRedirectDataOneOf4Giropay = (BankRedirectDataOneOf4Giropay) o;
    return equalsNullable(this.billingDetails, bankRedirectDataOneOf4Giropay.billingDetails) &&
        equalsNullable(this.bankAccountBic, bankRedirectDataOneOf4Giropay.bankAccountBic) &&
        equalsNullable(this.bankAccountIban, bankRedirectDataOneOf4Giropay.bankAccountIban) &&
        Objects.equals(this.country, bankRedirectDataOneOf4Giropay.country);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(hashCodeNullable(billingDetails), hashCodeNullable(bankAccountBic), hashCodeNullable(bankAccountIban), country);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class BankRedirectDataOneOf4Giropay {\n");
    sb.append("    billingDetails: ").append(toIndentedString(billingDetails)).append("\n");
    sb.append("    bankAccountBic: ").append(toIndentedString(bankAccountBic)).append("\n");
    sb.append("    bankAccountIban: ").append(toIndentedString(bankAccountIban)).append("\n");
    sb.append("    country: ").append(toIndentedString(country)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  /**
   * Convert the instance into URL query string.
   *
   * @return URL query string
   */
  public String toUrlQueryString() {
    return toUrlQueryString(null);
  }

  /**
   * Convert the instance into URL query string.
   *
   * @param prefix prefix of the query string
   * @return URL query string
   */
  public String toUrlQueryString(String prefix) {
    String suffix = "";
    String containerSuffix = "";
    String containerPrefix = "";
    if (prefix == null) {
      // style=form, explode=true, e.g. /pet?name=cat&type=manx
      prefix = "";
    } else {
      // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
      prefix = prefix + "[";
      suffix = "]";
      containerSuffix = "]";
      containerPrefix = "[";
    }

    StringJoiner joiner = new StringJoiner("&");

    // add `billing_details` to the URL query string
    if (getBillingDetails() != null) {
      joiner.add(getBillingDetails().toUrlQueryString(prefix + "billing_details" + suffix));
    }

    // add `bank_account_bic` to the URL query string
    if (getBankAccountBic() != null) {
      joiner.add(String.format("%sbank_account_bic%s=%s", prefix, suffix, URLEncoder.encode(ApiClient.valueToString(getBankAccountBic()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `bank_account_iban` to the URL query string
    if (getBankAccountIban() != null) {
      joiner.add(String.format("%sbank_account_iban%s=%s", prefix, suffix, URLEncoder.encode(ApiClient.valueToString(getBankAccountIban()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `country` to the URL query string
    if (getCountry() != null) {
      joiner.add(String.format("%scountry%s=%s", prefix, suffix, URLEncoder.encode(ApiClient.valueToString(getCountry()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    return joiner.toString();
  }
}

