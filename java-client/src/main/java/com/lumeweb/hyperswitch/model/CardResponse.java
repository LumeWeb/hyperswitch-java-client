/*
 * Hyperswitch - API Documentation
 *  ## Get started  Hyperswitch provides a collection of APIs that enable you to process and manage payments. Our APIs accept and return JSON in the HTTP body, and return standard HTTP response codes.  You can consume the APIs directly using your favorite HTTP/REST library.  We have a testing environment referred to \"sandbox\", which you can setup to test API calls without affecting production data. Currently, our sandbox environment is live while our production environment is under development and will be available soon. You can sign up on our Dashboard to get API keys to access Hyperswitch API.  ### Environment  Use the following base URLs when making requests to the APIs:  | Environment   |  Base URL                          | |---------------|------------------------------------| | Sandbox       | <https://sandbox.hyperswitch.io>   | | Production    | <https://api.hyperswitch.io>       |  ## Authentication  When you sign up on our [dashboard](https://app.hyperswitch.io) and create a merchant account, you are given a secret key (also referred as api-key) and a publishable key. You may authenticate all API requests with Hyperswitch server by providing the appropriate key in the request Authorization header.  | Key             |  Description                                                                                  | |-----------------|-----------------------------------------------------------------------------------------------| | api-key         | Private key. Used to authenticate all API requests from your merchant server                  | | publishable key | Unique identifier for your account. Used to authenticate API requests from your app's client  |  Never share your secret api keys. Keep them guarded and secure. 
 *
 * The version of the OpenAPI document: 0.1.0
 * Contact: hyperswitch@juspay.in
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.lumeweb.hyperswitch.model;

import java.net.URLEncoder;
import java.nio.charset.StandardCharsets;
import java.util.StringJoiner;
import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.lumeweb.hyperswitch.model.CardNetwork;
import java.util.Arrays;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


import com.lumeweb.hyperswitch.client.ApiClient;
/**
 * CardResponse
 */
@JsonPropertyOrder({
  CardResponse.JSON_PROPERTY_LAST4,
  CardResponse.JSON_PROPERTY_CARD_TYPE,
  CardResponse.JSON_PROPERTY_CARD_NETWORK,
  CardResponse.JSON_PROPERTY_CARD_ISSUER,
  CardResponse.JSON_PROPERTY_CARD_ISSUING_COUNTRY,
  CardResponse.JSON_PROPERTY_CARD_ISIN,
  CardResponse.JSON_PROPERTY_CARD_EXTENDED_BIN,
  CardResponse.JSON_PROPERTY_CARD_EXP_MONTH,
  CardResponse.JSON_PROPERTY_CARD_EXP_YEAR,
  CardResponse.JSON_PROPERTY_CARD_HOLDER_NAME,
  CardResponse.JSON_PROPERTY_PAYMENT_CHECKS,
  CardResponse.JSON_PROPERTY_AUTHENTICATION_DATA
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.11.0-SNAPSHOT")
public class CardResponse {
  public static final String JSON_PROPERTY_LAST4 = "last4";
  private JsonNullable<String> last4 = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_CARD_TYPE = "card_type";
  private JsonNullable<String> cardType = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_CARD_NETWORK = "card_network";
  private JsonNullable<CardNetwork> cardNetwork = JsonNullable.<CardNetwork>undefined();

  public static final String JSON_PROPERTY_CARD_ISSUER = "card_issuer";
  private JsonNullable<String> cardIssuer = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_CARD_ISSUING_COUNTRY = "card_issuing_country";
  private JsonNullable<String> cardIssuingCountry = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_CARD_ISIN = "card_isin";
  private JsonNullable<String> cardIsin = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_CARD_EXTENDED_BIN = "card_extended_bin";
  private JsonNullable<String> cardExtendedBin = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_CARD_EXP_MONTH = "card_exp_month";
  private JsonNullable<String> cardExpMonth = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_CARD_EXP_YEAR = "card_exp_year";
  private JsonNullable<String> cardExpYear = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_CARD_HOLDER_NAME = "card_holder_name";
  private JsonNullable<String> cardHolderName = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_PAYMENT_CHECKS = "payment_checks";
  private JsonNullable<Object> paymentChecks = JsonNullable.<Object>of(null);

  public static final String JSON_PROPERTY_AUTHENTICATION_DATA = "authentication_data";
  private JsonNullable<Object> authenticationData = JsonNullable.<Object>of(null);

  public CardResponse() { 
  }

  public CardResponse last4(@javax.annotation.Nullable String last4) {
    this.last4 = JsonNullable.<String>of(last4);
    return this;
  }

  /**
   * Get last4
   * @return last4
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public String getLast4() {
        return last4.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LAST4)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getLast4_JsonNullable() {
    return last4;
  }
  
  @JsonProperty(JSON_PROPERTY_LAST4)
  public void setLast4_JsonNullable(JsonNullable<String> last4) {
    this.last4 = last4;
  }

  public void setLast4(@javax.annotation.Nullable String last4) {
    this.last4 = JsonNullable.<String>of(last4);
  }


  public CardResponse cardType(@javax.annotation.Nullable String cardType) {
    this.cardType = JsonNullable.<String>of(cardType);
    return this;
  }

  /**
   * Get cardType
   * @return cardType
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public String getCardType() {
        return cardType.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_CARD_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getCardType_JsonNullable() {
    return cardType;
  }
  
  @JsonProperty(JSON_PROPERTY_CARD_TYPE)
  public void setCardType_JsonNullable(JsonNullable<String> cardType) {
    this.cardType = cardType;
  }

  public void setCardType(@javax.annotation.Nullable String cardType) {
    this.cardType = JsonNullable.<String>of(cardType);
  }


  public CardResponse cardNetwork(@javax.annotation.Nullable CardNetwork cardNetwork) {
    this.cardNetwork = JsonNullable.<CardNetwork>of(cardNetwork);
    return this;
  }

  /**
   * Get cardNetwork
   * @return cardNetwork
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public CardNetwork getCardNetwork() {
        return cardNetwork.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_CARD_NETWORK)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<CardNetwork> getCardNetwork_JsonNullable() {
    return cardNetwork;
  }
  
  @JsonProperty(JSON_PROPERTY_CARD_NETWORK)
  public void setCardNetwork_JsonNullable(JsonNullable<CardNetwork> cardNetwork) {
    this.cardNetwork = cardNetwork;
  }

  public void setCardNetwork(@javax.annotation.Nullable CardNetwork cardNetwork) {
    this.cardNetwork = JsonNullable.<CardNetwork>of(cardNetwork);
  }


  public CardResponse cardIssuer(@javax.annotation.Nullable String cardIssuer) {
    this.cardIssuer = JsonNullable.<String>of(cardIssuer);
    return this;
  }

  /**
   * Get cardIssuer
   * @return cardIssuer
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public String getCardIssuer() {
        return cardIssuer.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_CARD_ISSUER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getCardIssuer_JsonNullable() {
    return cardIssuer;
  }
  
  @JsonProperty(JSON_PROPERTY_CARD_ISSUER)
  public void setCardIssuer_JsonNullable(JsonNullable<String> cardIssuer) {
    this.cardIssuer = cardIssuer;
  }

  public void setCardIssuer(@javax.annotation.Nullable String cardIssuer) {
    this.cardIssuer = JsonNullable.<String>of(cardIssuer);
  }


  public CardResponse cardIssuingCountry(@javax.annotation.Nullable String cardIssuingCountry) {
    this.cardIssuingCountry = JsonNullable.<String>of(cardIssuingCountry);
    return this;
  }

  /**
   * Get cardIssuingCountry
   * @return cardIssuingCountry
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public String getCardIssuingCountry() {
        return cardIssuingCountry.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_CARD_ISSUING_COUNTRY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getCardIssuingCountry_JsonNullable() {
    return cardIssuingCountry;
  }
  
  @JsonProperty(JSON_PROPERTY_CARD_ISSUING_COUNTRY)
  public void setCardIssuingCountry_JsonNullable(JsonNullable<String> cardIssuingCountry) {
    this.cardIssuingCountry = cardIssuingCountry;
  }

  public void setCardIssuingCountry(@javax.annotation.Nullable String cardIssuingCountry) {
    this.cardIssuingCountry = JsonNullable.<String>of(cardIssuingCountry);
  }


  public CardResponse cardIsin(@javax.annotation.Nullable String cardIsin) {
    this.cardIsin = JsonNullable.<String>of(cardIsin);
    return this;
  }

  /**
   * Get cardIsin
   * @return cardIsin
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public String getCardIsin() {
        return cardIsin.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_CARD_ISIN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getCardIsin_JsonNullable() {
    return cardIsin;
  }
  
  @JsonProperty(JSON_PROPERTY_CARD_ISIN)
  public void setCardIsin_JsonNullable(JsonNullable<String> cardIsin) {
    this.cardIsin = cardIsin;
  }

  public void setCardIsin(@javax.annotation.Nullable String cardIsin) {
    this.cardIsin = JsonNullable.<String>of(cardIsin);
  }


  public CardResponse cardExtendedBin(@javax.annotation.Nullable String cardExtendedBin) {
    this.cardExtendedBin = JsonNullable.<String>of(cardExtendedBin);
    return this;
  }

  /**
   * Get cardExtendedBin
   * @return cardExtendedBin
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public String getCardExtendedBin() {
        return cardExtendedBin.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_CARD_EXTENDED_BIN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getCardExtendedBin_JsonNullable() {
    return cardExtendedBin;
  }
  
  @JsonProperty(JSON_PROPERTY_CARD_EXTENDED_BIN)
  public void setCardExtendedBin_JsonNullable(JsonNullable<String> cardExtendedBin) {
    this.cardExtendedBin = cardExtendedBin;
  }

  public void setCardExtendedBin(@javax.annotation.Nullable String cardExtendedBin) {
    this.cardExtendedBin = JsonNullable.<String>of(cardExtendedBin);
  }


  public CardResponse cardExpMonth(@javax.annotation.Nullable String cardExpMonth) {
    this.cardExpMonth = JsonNullable.<String>of(cardExpMonth);
    return this;
  }

  /**
   * Get cardExpMonth
   * @return cardExpMonth
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public String getCardExpMonth() {
        return cardExpMonth.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_CARD_EXP_MONTH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getCardExpMonth_JsonNullable() {
    return cardExpMonth;
  }
  
  @JsonProperty(JSON_PROPERTY_CARD_EXP_MONTH)
  public void setCardExpMonth_JsonNullable(JsonNullable<String> cardExpMonth) {
    this.cardExpMonth = cardExpMonth;
  }

  public void setCardExpMonth(@javax.annotation.Nullable String cardExpMonth) {
    this.cardExpMonth = JsonNullable.<String>of(cardExpMonth);
  }


  public CardResponse cardExpYear(@javax.annotation.Nullable String cardExpYear) {
    this.cardExpYear = JsonNullable.<String>of(cardExpYear);
    return this;
  }

  /**
   * Get cardExpYear
   * @return cardExpYear
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public String getCardExpYear() {
        return cardExpYear.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_CARD_EXP_YEAR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getCardExpYear_JsonNullable() {
    return cardExpYear;
  }
  
  @JsonProperty(JSON_PROPERTY_CARD_EXP_YEAR)
  public void setCardExpYear_JsonNullable(JsonNullable<String> cardExpYear) {
    this.cardExpYear = cardExpYear;
  }

  public void setCardExpYear(@javax.annotation.Nullable String cardExpYear) {
    this.cardExpYear = JsonNullable.<String>of(cardExpYear);
  }


  public CardResponse cardHolderName(@javax.annotation.Nullable String cardHolderName) {
    this.cardHolderName = JsonNullable.<String>of(cardHolderName);
    return this;
  }

  /**
   * Get cardHolderName
   * @return cardHolderName
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public String getCardHolderName() {
        return cardHolderName.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_CARD_HOLDER_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getCardHolderName_JsonNullable() {
    return cardHolderName;
  }
  
  @JsonProperty(JSON_PROPERTY_CARD_HOLDER_NAME)
  public void setCardHolderName_JsonNullable(JsonNullable<String> cardHolderName) {
    this.cardHolderName = cardHolderName;
  }

  public void setCardHolderName(@javax.annotation.Nullable String cardHolderName) {
    this.cardHolderName = JsonNullable.<String>of(cardHolderName);
  }


  public CardResponse paymentChecks(@javax.annotation.Nullable Object paymentChecks) {
    this.paymentChecks = JsonNullable.<Object>of(paymentChecks);
    return this;
  }

  /**
   * Get paymentChecks
   * @return paymentChecks
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public Object getPaymentChecks() {
        return paymentChecks.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PAYMENT_CHECKS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Object> getPaymentChecks_JsonNullable() {
    return paymentChecks;
  }
  
  @JsonProperty(JSON_PROPERTY_PAYMENT_CHECKS)
  public void setPaymentChecks_JsonNullable(JsonNullable<Object> paymentChecks) {
    this.paymentChecks = paymentChecks;
  }

  public void setPaymentChecks(@javax.annotation.Nullable Object paymentChecks) {
    this.paymentChecks = JsonNullable.<Object>of(paymentChecks);
  }


  public CardResponse authenticationData(@javax.annotation.Nullable Object authenticationData) {
    this.authenticationData = JsonNullable.<Object>of(authenticationData);
    return this;
  }

  /**
   * Get authenticationData
   * @return authenticationData
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public Object getAuthenticationData() {
        return authenticationData.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_AUTHENTICATION_DATA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Object> getAuthenticationData_JsonNullable() {
    return authenticationData;
  }
  
  @JsonProperty(JSON_PROPERTY_AUTHENTICATION_DATA)
  public void setAuthenticationData_JsonNullable(JsonNullable<Object> authenticationData) {
    this.authenticationData = authenticationData;
  }

  public void setAuthenticationData(@javax.annotation.Nullable Object authenticationData) {
    this.authenticationData = JsonNullable.<Object>of(authenticationData);
  }


  /**
   * Return true if this CardResponse object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CardResponse cardResponse = (CardResponse) o;
    return equalsNullable(this.last4, cardResponse.last4) &&
        equalsNullable(this.cardType, cardResponse.cardType) &&
        equalsNullable(this.cardNetwork, cardResponse.cardNetwork) &&
        equalsNullable(this.cardIssuer, cardResponse.cardIssuer) &&
        equalsNullable(this.cardIssuingCountry, cardResponse.cardIssuingCountry) &&
        equalsNullable(this.cardIsin, cardResponse.cardIsin) &&
        equalsNullable(this.cardExtendedBin, cardResponse.cardExtendedBin) &&
        equalsNullable(this.cardExpMonth, cardResponse.cardExpMonth) &&
        equalsNullable(this.cardExpYear, cardResponse.cardExpYear) &&
        equalsNullable(this.cardHolderName, cardResponse.cardHolderName) &&
        equalsNullable(this.paymentChecks, cardResponse.paymentChecks) &&
        equalsNullable(this.authenticationData, cardResponse.authenticationData);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(hashCodeNullable(last4), hashCodeNullable(cardType), hashCodeNullable(cardNetwork), hashCodeNullable(cardIssuer), hashCodeNullable(cardIssuingCountry), hashCodeNullable(cardIsin), hashCodeNullable(cardExtendedBin), hashCodeNullable(cardExpMonth), hashCodeNullable(cardExpYear), hashCodeNullable(cardHolderName), hashCodeNullable(paymentChecks), hashCodeNullable(authenticationData));
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CardResponse {\n");
    sb.append("    last4: ").append(toIndentedString(last4)).append("\n");
    sb.append("    cardType: ").append(toIndentedString(cardType)).append("\n");
    sb.append("    cardNetwork: ").append(toIndentedString(cardNetwork)).append("\n");
    sb.append("    cardIssuer: ").append(toIndentedString(cardIssuer)).append("\n");
    sb.append("    cardIssuingCountry: ").append(toIndentedString(cardIssuingCountry)).append("\n");
    sb.append("    cardIsin: ").append(toIndentedString(cardIsin)).append("\n");
    sb.append("    cardExtendedBin: ").append(toIndentedString(cardExtendedBin)).append("\n");
    sb.append("    cardExpMonth: ").append(toIndentedString(cardExpMonth)).append("\n");
    sb.append("    cardExpYear: ").append(toIndentedString(cardExpYear)).append("\n");
    sb.append("    cardHolderName: ").append(toIndentedString(cardHolderName)).append("\n");
    sb.append("    paymentChecks: ").append(toIndentedString(paymentChecks)).append("\n");
    sb.append("    authenticationData: ").append(toIndentedString(authenticationData)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  /**
   * Convert the instance into URL query string.
   *
   * @return URL query string
   */
  public String toUrlQueryString() {
    return toUrlQueryString(null);
  }

  /**
   * Convert the instance into URL query string.
   *
   * @param prefix prefix of the query string
   * @return URL query string
   */
  public String toUrlQueryString(String prefix) {
    String suffix = "";
    String containerSuffix = "";
    String containerPrefix = "";
    if (prefix == null) {
      // style=form, explode=true, e.g. /pet?name=cat&type=manx
      prefix = "";
    } else {
      // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
      prefix = prefix + "[";
      suffix = "]";
      containerSuffix = "]";
      containerPrefix = "[";
    }

    StringJoiner joiner = new StringJoiner("&");

    // add `last4` to the URL query string
    if (getLast4() != null) {
      joiner.add(String.format("%slast4%s=%s", prefix, suffix, URLEncoder.encode(ApiClient.valueToString(getLast4()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `card_type` to the URL query string
    if (getCardType() != null) {
      joiner.add(String.format("%scard_type%s=%s", prefix, suffix, URLEncoder.encode(ApiClient.valueToString(getCardType()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `card_network` to the URL query string
    if (getCardNetwork() != null) {
      joiner.add(String.format("%scard_network%s=%s", prefix, suffix, URLEncoder.encode(ApiClient.valueToString(getCardNetwork()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `card_issuer` to the URL query string
    if (getCardIssuer() != null) {
      joiner.add(String.format("%scard_issuer%s=%s", prefix, suffix, URLEncoder.encode(ApiClient.valueToString(getCardIssuer()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `card_issuing_country` to the URL query string
    if (getCardIssuingCountry() != null) {
      joiner.add(String.format("%scard_issuing_country%s=%s", prefix, suffix, URLEncoder.encode(ApiClient.valueToString(getCardIssuingCountry()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `card_isin` to the URL query string
    if (getCardIsin() != null) {
      joiner.add(String.format("%scard_isin%s=%s", prefix, suffix, URLEncoder.encode(ApiClient.valueToString(getCardIsin()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `card_extended_bin` to the URL query string
    if (getCardExtendedBin() != null) {
      joiner.add(String.format("%scard_extended_bin%s=%s", prefix, suffix, URLEncoder.encode(ApiClient.valueToString(getCardExtendedBin()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `card_exp_month` to the URL query string
    if (getCardExpMonth() != null) {
      joiner.add(String.format("%scard_exp_month%s=%s", prefix, suffix, URLEncoder.encode(ApiClient.valueToString(getCardExpMonth()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `card_exp_year` to the URL query string
    if (getCardExpYear() != null) {
      joiner.add(String.format("%scard_exp_year%s=%s", prefix, suffix, URLEncoder.encode(ApiClient.valueToString(getCardExpYear()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `card_holder_name` to the URL query string
    if (getCardHolderName() != null) {
      joiner.add(String.format("%scard_holder_name%s=%s", prefix, suffix, URLEncoder.encode(ApiClient.valueToString(getCardHolderName()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `payment_checks` to the URL query string
    if (getPaymentChecks() != null) {
      joiner.add(String.format("%spayment_checks%s=%s", prefix, suffix, URLEncoder.encode(ApiClient.valueToString(getPaymentChecks()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `authentication_data` to the URL query string
    if (getAuthenticationData() != null) {
      joiner.add(String.format("%sauthentication_data%s=%s", prefix, suffix, URLEncoder.encode(ApiClient.valueToString(getAuthenticationData()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    return joiner.toString();
  }
}

