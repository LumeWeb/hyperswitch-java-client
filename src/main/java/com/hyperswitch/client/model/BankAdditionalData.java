/*
 * Hyperswitch - API Documentation
 *  ## Get started  Hyperswitch provides a collection of APIs that enable you to process and manage payments. Our APIs accept and return JSON in the HTTP body, and return standard HTTP response codes.  You can consume the APIs directly using your favorite HTTP/REST library.  We have a testing environment referred to \"sandbox\", which you can setup to test API calls without affecting production data. Currently, our sandbox environment is live while our production environment is under development and will be available soon. You can sign up on our Dashboard to get API keys to access Hyperswitch API.  ### Environment  Use the following base URLs when making requests to the APIs:  | Environment   |  Base URL                          | |---------------|------------------------------------| | Sandbox       | <https://sandbox.hyperswitch.io>   | | Production    | <https://api.hyperswitch.io>       |  ## Authentication  When you sign up on our [dashboard](https://app.hyperswitch.io) and create a merchant account, you are given a secret key (also referred as api-key) and a publishable key. You may authenticate all API requests with Hyperswitch server by providing the appropriate key in the request Authorization header.  | Key             |  Description                                                                                  | |-----------------|-----------------------------------------------------------------------------------------------| | api-key         | Private key. Used to authenticate all API requests from your merchant server                  | | publishable key | Unique identifier for your account. Used to authenticate API requests from your app's client  |  Never share your secret api keys. Keep them guarded and secure. 
 *
 * The version of the OpenAPI document: 0.1.0
 * Contact: hyperswitch@juspay.in
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.hyperswitch.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.hyperswitch.client.model.AchBankTransferAdditionalData;
import com.hyperswitch.client.model.BacsBankTransferAdditionalData;
import com.hyperswitch.client.model.CountryAlpha2;
import com.hyperswitch.client.model.PixBankTransferAdditionalData;
import com.hyperswitch.client.model.SepaBankTransferAdditionalData;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * Masked payout method details for bank payout method
 */
@JsonPropertyOrder({
  BankAdditionalData.JSON_PROPERTY_BANK_ACCOUNT_NUMBER,
  BankAdditionalData.JSON_PROPERTY_BANK_ROUTING_NUMBER,
  BankAdditionalData.JSON_PROPERTY_BANK_NAME,
  BankAdditionalData.JSON_PROPERTY_BANK_COUNTRY_CODE,
  BankAdditionalData.JSON_PROPERTY_BANK_CITY,
  BankAdditionalData.JSON_PROPERTY_BANK_SORT_CODE,
  BankAdditionalData.JSON_PROPERTY_IBAN,
  BankAdditionalData.JSON_PROPERTY_BIC,
  BankAdditionalData.JSON_PROPERTY_PIX_KEY,
  BankAdditionalData.JSON_PROPERTY_CPF,
  BankAdditionalData.JSON_PROPERTY_CNPJ
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class BankAdditionalData {
  public static final String JSON_PROPERTY_BANK_ACCOUNT_NUMBER = "bank_account_number";
  private String bankAccountNumber;

  public static final String JSON_PROPERTY_BANK_ROUTING_NUMBER = "bank_routing_number";
  private String bankRoutingNumber;

  public static final String JSON_PROPERTY_BANK_NAME = "bank_name";
  private JsonNullable<String> bankName = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_BANK_COUNTRY_CODE = "bank_country_code";
  private JsonNullable<CountryAlpha2> bankCountryCode = JsonNullable.<CountryAlpha2>undefined();

  public static final String JSON_PROPERTY_BANK_CITY = "bank_city";
  private JsonNullable<String> bankCity = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_BANK_SORT_CODE = "bank_sort_code";
  private String bankSortCode;

  public static final String JSON_PROPERTY_IBAN = "iban";
  private String iban;

  public static final String JSON_PROPERTY_BIC = "bic";
  private JsonNullable<String> bic = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_PIX_KEY = "pix_key";
  private JsonNullable<String> pixKey = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_CPF = "cpf";
  private JsonNullable<String> cpf = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_CNPJ = "cnpj";
  private JsonNullable<String> cnpj = JsonNullable.<String>undefined();

  public BankAdditionalData() {
  }

  public BankAdditionalData bankAccountNumber(String bankAccountNumber) {
    
    this.bankAccountNumber = bankAccountNumber;
    return this;
  }

   /**
   * Bank account&#39;s owner name
   * @return bankAccountNumber
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_BANK_ACCOUNT_NUMBER)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getBankAccountNumber() {
    return bankAccountNumber;
  }


  @JsonProperty(JSON_PROPERTY_BANK_ACCOUNT_NUMBER)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setBankAccountNumber(String bankAccountNumber) {
    this.bankAccountNumber = bankAccountNumber;
  }


  public BankAdditionalData bankRoutingNumber(String bankRoutingNumber) {
    
    this.bankRoutingNumber = bankRoutingNumber;
    return this;
  }

   /**
   * Partially masked routing number for ach bank debit payment
   * @return bankRoutingNumber
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_BANK_ROUTING_NUMBER)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getBankRoutingNumber() {
    return bankRoutingNumber;
  }


  @JsonProperty(JSON_PROPERTY_BANK_ROUTING_NUMBER)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setBankRoutingNumber(String bankRoutingNumber) {
    this.bankRoutingNumber = bankRoutingNumber;
  }


  public BankAdditionalData bankName(String bankName) {
    this.bankName = JsonNullable.<String>of(bankName);
    
    return this;
  }

   /**
   * Bank name
   * @return bankName
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public String getBankName() {
        return bankName.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_BANK_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getBankName_JsonNullable() {
    return bankName;
  }
  
  @JsonProperty(JSON_PROPERTY_BANK_NAME)
  public void setBankName_JsonNullable(JsonNullable<String> bankName) {
    this.bankName = bankName;
  }

  public void setBankName(String bankName) {
    this.bankName = JsonNullable.<String>of(bankName);
  }


  public BankAdditionalData bankCountryCode(CountryAlpha2 bankCountryCode) {
    this.bankCountryCode = JsonNullable.<CountryAlpha2>of(bankCountryCode);
    
    return this;
  }

   /**
   * Get bankCountryCode
   * @return bankCountryCode
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public CountryAlpha2 getBankCountryCode() {
        return bankCountryCode.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_BANK_COUNTRY_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<CountryAlpha2> getBankCountryCode_JsonNullable() {
    return bankCountryCode;
  }
  
  @JsonProperty(JSON_PROPERTY_BANK_COUNTRY_CODE)
  public void setBankCountryCode_JsonNullable(JsonNullable<CountryAlpha2> bankCountryCode) {
    this.bankCountryCode = bankCountryCode;
  }

  public void setBankCountryCode(CountryAlpha2 bankCountryCode) {
    this.bankCountryCode = JsonNullable.<CountryAlpha2>of(bankCountryCode);
  }


  public BankAdditionalData bankCity(String bankCity) {
    this.bankCity = JsonNullable.<String>of(bankCity);
    
    return this;
  }

   /**
   * Bank city
   * @return bankCity
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public String getBankCity() {
        return bankCity.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_BANK_CITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getBankCity_JsonNullable() {
    return bankCity;
  }
  
  @JsonProperty(JSON_PROPERTY_BANK_CITY)
  public void setBankCity_JsonNullable(JsonNullable<String> bankCity) {
    this.bankCity = bankCity;
  }

  public void setBankCity(String bankCity) {
    this.bankCity = JsonNullable.<String>of(bankCity);
  }


  public BankAdditionalData bankSortCode(String bankSortCode) {
    
    this.bankSortCode = bankSortCode;
    return this;
  }

   /**
   * Partially masked sort code for Bacs payment method
   * @return bankSortCode
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_BANK_SORT_CODE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getBankSortCode() {
    return bankSortCode;
  }


  @JsonProperty(JSON_PROPERTY_BANK_SORT_CODE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setBankSortCode(String bankSortCode) {
    this.bankSortCode = bankSortCode;
  }


  public BankAdditionalData iban(String iban) {
    
    this.iban = iban;
    return this;
  }

   /**
   * Partially masked international bank account number (iban) for SEPA
   * @return iban
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_IBAN)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getIban() {
    return iban;
  }


  @JsonProperty(JSON_PROPERTY_IBAN)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setIban(String iban) {
    this.iban = iban;
  }


  public BankAdditionalData bic(String bic) {
    this.bic = JsonNullable.<String>of(bic);
    
    return this;
  }

   /**
   * [8 / 11 digits] Bank Identifier Code (bic) / Swift Code - used in many countries for identifying a bank and it&#39;s branches
   * @return bic
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public String getBic() {
        return bic.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_BIC)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getBic_JsonNullable() {
    return bic;
  }
  
  @JsonProperty(JSON_PROPERTY_BIC)
  public void setBic_JsonNullable(JsonNullable<String> bic) {
    this.bic = bic;
  }

  public void setBic(String bic) {
    this.bic = JsonNullable.<String>of(bic);
  }


  public BankAdditionalData pixKey(String pixKey) {
    this.pixKey = JsonNullable.<String>of(pixKey);
    
    return this;
  }

   /**
   * Partially masked unique key for pix transfer
   * @return pixKey
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public String getPixKey() {
        return pixKey.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PIX_KEY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getPixKey_JsonNullable() {
    return pixKey;
  }
  
  @JsonProperty(JSON_PROPERTY_PIX_KEY)
  public void setPixKey_JsonNullable(JsonNullable<String> pixKey) {
    this.pixKey = pixKey;
  }

  public void setPixKey(String pixKey) {
    this.pixKey = JsonNullable.<String>of(pixKey);
  }


  public BankAdditionalData cpf(String cpf) {
    this.cpf = JsonNullable.<String>of(cpf);
    
    return this;
  }

   /**
   * Partially masked CPF - CPF is a Brazilian tax identification number
   * @return cpf
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public String getCpf() {
        return cpf.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_CPF)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getCpf_JsonNullable() {
    return cpf;
  }
  
  @JsonProperty(JSON_PROPERTY_CPF)
  public void setCpf_JsonNullable(JsonNullable<String> cpf) {
    this.cpf = cpf;
  }

  public void setCpf(String cpf) {
    this.cpf = JsonNullable.<String>of(cpf);
  }


  public BankAdditionalData cnpj(String cnpj) {
    this.cnpj = JsonNullable.<String>of(cnpj);
    
    return this;
  }

   /**
   * Partially masked CNPJ - CNPJ is a Brazilian company tax identification number
   * @return cnpj
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public String getCnpj() {
        return cnpj.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_CNPJ)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getCnpj_JsonNullable() {
    return cnpj;
  }
  
  @JsonProperty(JSON_PROPERTY_CNPJ)
  public void setCnpj_JsonNullable(JsonNullable<String> cnpj) {
    this.cnpj = cnpj;
  }

  public void setCnpj(String cnpj) {
    this.cnpj = JsonNullable.<String>of(cnpj);
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    BankAdditionalData bankAdditionalData = (BankAdditionalData) o;
    return Objects.equals(this.bankAccountNumber, bankAdditionalData.bankAccountNumber) &&
        Objects.equals(this.bankRoutingNumber, bankAdditionalData.bankRoutingNumber) &&
        equalsNullable(this.bankName, bankAdditionalData.bankName) &&
        equalsNullable(this.bankCountryCode, bankAdditionalData.bankCountryCode) &&
        equalsNullable(this.bankCity, bankAdditionalData.bankCity) &&
        Objects.equals(this.bankSortCode, bankAdditionalData.bankSortCode) &&
        Objects.equals(this.iban, bankAdditionalData.iban) &&
        equalsNullable(this.bic, bankAdditionalData.bic) &&
        equalsNullable(this.pixKey, bankAdditionalData.pixKey) &&
        equalsNullable(this.cpf, bankAdditionalData.cpf) &&
        equalsNullable(this.cnpj, bankAdditionalData.cnpj);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(bankAccountNumber, bankRoutingNumber, hashCodeNullable(bankName), hashCodeNullable(bankCountryCode), hashCodeNullable(bankCity), bankSortCode, iban, hashCodeNullable(bic), hashCodeNullable(pixKey), hashCodeNullable(cpf), hashCodeNullable(cnpj));
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class BankAdditionalData {\n");
    sb.append("    bankAccountNumber: ").append(toIndentedString(bankAccountNumber)).append("\n");
    sb.append("    bankRoutingNumber: ").append(toIndentedString(bankRoutingNumber)).append("\n");
    sb.append("    bankName: ").append(toIndentedString(bankName)).append("\n");
    sb.append("    bankCountryCode: ").append(toIndentedString(bankCountryCode)).append("\n");
    sb.append("    bankCity: ").append(toIndentedString(bankCity)).append("\n");
    sb.append("    bankSortCode: ").append(toIndentedString(bankSortCode)).append("\n");
    sb.append("    iban: ").append(toIndentedString(iban)).append("\n");
    sb.append("    bic: ").append(toIndentedString(bic)).append("\n");
    sb.append("    pixKey: ").append(toIndentedString(pixKey)).append("\n");
    sb.append("    cpf: ").append(toIndentedString(cpf)).append("\n");
    sb.append("    cnpj: ").append(toIndentedString(cnpj)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

