/*
 * Hyperswitch - API Documentation
 *  ## Get started  Hyperswitch provides a collection of APIs that enable you to process and manage payments. Our APIs accept and return JSON in the HTTP body, and return standard HTTP response codes.  You can consume the APIs directly using your favorite HTTP/REST library.  We have a testing environment referred to \"sandbox\", which you can setup to test API calls without affecting production data. Currently, our sandbox environment is live while our production environment is under development and will be available soon. You can sign up on our Dashboard to get API keys to access Hyperswitch API.  ### Environment  Use the following base URLs when making requests to the APIs:  | Environment   |  Base URL                          | |---------------|------------------------------------| | Sandbox       | <https://sandbox.hyperswitch.io>   | | Production    | <https://api.hyperswitch.io>       |  ## Authentication  When you sign up on our [dashboard](https://app.hyperswitch.io) and create a merchant account, you are given a secret key (also referred as api-key) and a publishable key. You may authenticate all API requests with Hyperswitch server by providing the appropriate key in the request Authorization header.  | Key             |  Description                                                                                  | |-----------------|-----------------------------------------------------------------------------------------------| | api-key         | Private key. Used to authenticate all API requests from your merchant server                  | | publishable key | Unique identifier for your account. Used to authenticate API requests from your app's client  |  Never share your secret api keys. Keep them guarded and secure. 
 *
 * The version of the OpenAPI document: 0.1.0
 * Contact: hyperswitch@juspay.in
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.hyperswitch.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.hyperswitch.model.FieldTypeOneOf;
import com.hyperswitch.model.FieldTypeOneOf1;
import com.hyperswitch.model.FieldTypeOneOf10;
import com.hyperswitch.model.FieldTypeOneOf11;
import com.hyperswitch.model.FieldTypeOneOf12;
import com.hyperswitch.model.FieldTypeOneOf13;
import com.hyperswitch.model.FieldTypeOneOf14;
import com.hyperswitch.model.FieldTypeOneOf15;
import com.hyperswitch.model.FieldTypeOneOf16;
import com.hyperswitch.model.FieldTypeOneOf17;
import com.hyperswitch.model.FieldTypeOneOf18;
import com.hyperswitch.model.FieldTypeOneOf19;
import com.hyperswitch.model.FieldTypeOneOf2;
import com.hyperswitch.model.FieldTypeOneOf20;
import com.hyperswitch.model.FieldTypeOneOf21;
import com.hyperswitch.model.FieldTypeOneOf22;
import com.hyperswitch.model.FieldTypeOneOf23;
import com.hyperswitch.model.FieldTypeOneOf24;
import com.hyperswitch.model.FieldTypeOneOf25;
import com.hyperswitch.model.FieldTypeOneOf26;
import com.hyperswitch.model.FieldTypeOneOf27;
import com.hyperswitch.model.FieldTypeOneOf28;
import com.hyperswitch.model.FieldTypeOneOf29;
import com.hyperswitch.model.FieldTypeOneOf3;
import com.hyperswitch.model.FieldTypeOneOf30;
import com.hyperswitch.model.FieldTypeOneOf31;
import com.hyperswitch.model.FieldTypeOneOf32;
import com.hyperswitch.model.FieldTypeOneOf33;
import com.hyperswitch.model.FieldTypeOneOf34;
import com.hyperswitch.model.FieldTypeOneOf35;
import com.hyperswitch.model.FieldTypeOneOf36;
import com.hyperswitch.model.FieldTypeOneOf37;
import com.hyperswitch.model.FieldTypeOneOf38;
import com.hyperswitch.model.FieldTypeOneOf4;
import com.hyperswitch.model.FieldTypeOneOf5;
import com.hyperswitch.model.FieldTypeOneOf6;
import com.hyperswitch.model.FieldTypeOneOf7;
import com.hyperswitch.model.FieldTypeOneOf8;
import com.hyperswitch.model.FieldTypeOneOf8UserCountry;
import com.hyperswitch.model.FieldTypeOneOf9;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * Possible field type of required fields in payment_method_data
 */
@ApiModel(description = "Possible field type of required fields in payment_method_data")
@JsonPropertyOrder({
  FieldType.JSON_PROPERTY_USER_COUNTRY,
  FieldType.JSON_PROPERTY_USER_CURRENCY,
  FieldType.JSON_PROPERTY_USER_ADDRESS_COUNTRY,
  FieldType.JSON_PROPERTY_USER_SHIPPING_ADDRESS_COUNTRY,
  FieldType.JSON_PROPERTY_DROP_DOWN,
  FieldType.JSON_PROPERTY_LANGUAGE_PREFERENCE
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class FieldType {
  public static final String JSON_PROPERTY_USER_COUNTRY = "user_country";
  private FieldTypeOneOf8UserCountry userCountry;

  public static final String JSON_PROPERTY_USER_CURRENCY = "user_currency";
  private FieldTypeOneOf8UserCountry userCurrency;

  public static final String JSON_PROPERTY_USER_ADDRESS_COUNTRY = "user_address_country";
  private FieldTypeOneOf8UserCountry userAddressCountry;

  public static final String JSON_PROPERTY_USER_SHIPPING_ADDRESS_COUNTRY = "user_shipping_address_country";
  private FieldTypeOneOf8UserCountry userShippingAddressCountry;

  public static final String JSON_PROPERTY_DROP_DOWN = "drop_down";
  private FieldTypeOneOf8UserCountry dropDown;

  public static final String JSON_PROPERTY_LANGUAGE_PREFERENCE = "language_preference";
  private FieldTypeOneOf8UserCountry languagePreference;

  public FieldType() { 
  }

  public FieldType userCountry(FieldTypeOneOf8UserCountry userCountry) {
    
    this.userCountry = userCountry;
    return this;
  }

   /**
   * Get userCountry
   * @return userCountry
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_USER_COUNTRY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public FieldTypeOneOf8UserCountry getUserCountry() {
    return userCountry;
  }


  @JsonProperty(JSON_PROPERTY_USER_COUNTRY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setUserCountry(FieldTypeOneOf8UserCountry userCountry) {
    this.userCountry = userCountry;
  }


  public FieldType userCurrency(FieldTypeOneOf8UserCountry userCurrency) {
    
    this.userCurrency = userCurrency;
    return this;
  }

   /**
   * Get userCurrency
   * @return userCurrency
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_USER_CURRENCY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public FieldTypeOneOf8UserCountry getUserCurrency() {
    return userCurrency;
  }


  @JsonProperty(JSON_PROPERTY_USER_CURRENCY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setUserCurrency(FieldTypeOneOf8UserCountry userCurrency) {
    this.userCurrency = userCurrency;
  }


  public FieldType userAddressCountry(FieldTypeOneOf8UserCountry userAddressCountry) {
    
    this.userAddressCountry = userAddressCountry;
    return this;
  }

   /**
   * Get userAddressCountry
   * @return userAddressCountry
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_USER_ADDRESS_COUNTRY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public FieldTypeOneOf8UserCountry getUserAddressCountry() {
    return userAddressCountry;
  }


  @JsonProperty(JSON_PROPERTY_USER_ADDRESS_COUNTRY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setUserAddressCountry(FieldTypeOneOf8UserCountry userAddressCountry) {
    this.userAddressCountry = userAddressCountry;
  }


  public FieldType userShippingAddressCountry(FieldTypeOneOf8UserCountry userShippingAddressCountry) {
    
    this.userShippingAddressCountry = userShippingAddressCountry;
    return this;
  }

   /**
   * Get userShippingAddressCountry
   * @return userShippingAddressCountry
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_USER_SHIPPING_ADDRESS_COUNTRY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public FieldTypeOneOf8UserCountry getUserShippingAddressCountry() {
    return userShippingAddressCountry;
  }


  @JsonProperty(JSON_PROPERTY_USER_SHIPPING_ADDRESS_COUNTRY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setUserShippingAddressCountry(FieldTypeOneOf8UserCountry userShippingAddressCountry) {
    this.userShippingAddressCountry = userShippingAddressCountry;
  }


  public FieldType dropDown(FieldTypeOneOf8UserCountry dropDown) {
    
    this.dropDown = dropDown;
    return this;
  }

   /**
   * Get dropDown
   * @return dropDown
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_DROP_DOWN)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public FieldTypeOneOf8UserCountry getDropDown() {
    return dropDown;
  }


  @JsonProperty(JSON_PROPERTY_DROP_DOWN)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setDropDown(FieldTypeOneOf8UserCountry dropDown) {
    this.dropDown = dropDown;
  }


  public FieldType languagePreference(FieldTypeOneOf8UserCountry languagePreference) {
    
    this.languagePreference = languagePreference;
    return this;
  }

   /**
   * Get languagePreference
   * @return languagePreference
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_LANGUAGE_PREFERENCE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public FieldTypeOneOf8UserCountry getLanguagePreference() {
    return languagePreference;
  }


  @JsonProperty(JSON_PROPERTY_LANGUAGE_PREFERENCE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setLanguagePreference(FieldTypeOneOf8UserCountry languagePreference) {
    this.languagePreference = languagePreference;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    FieldType fieldType = (FieldType) o;
    return Objects.equals(this.userCountry, fieldType.userCountry) &&
        Objects.equals(this.userCurrency, fieldType.userCurrency) &&
        Objects.equals(this.userAddressCountry, fieldType.userAddressCountry) &&
        Objects.equals(this.userShippingAddressCountry, fieldType.userShippingAddressCountry) &&
        Objects.equals(this.dropDown, fieldType.dropDown) &&
        Objects.equals(this.languagePreference, fieldType.languagePreference);
  }

  @Override
  public int hashCode() {
    return Objects.hash(userCountry, userCurrency, userAddressCountry, userShippingAddressCountry, dropDown, languagePreference);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class FieldType {\n");
    sb.append("    userCountry: ").append(toIndentedString(userCountry)).append("\n");
    sb.append("    userCurrency: ").append(toIndentedString(userCurrency)).append("\n");
    sb.append("    userAddressCountry: ").append(toIndentedString(userAddressCountry)).append("\n");
    sb.append("    userShippingAddressCountry: ").append(toIndentedString(userShippingAddressCountry)).append("\n");
    sb.append("    dropDown: ").append(toIndentedString(dropDown)).append("\n");
    sb.append("    languagePreference: ").append(toIndentedString(languagePreference)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

