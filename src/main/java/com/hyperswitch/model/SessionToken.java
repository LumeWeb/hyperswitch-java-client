/*
 * Hyperswitch - API Documentation
 *  ## Get started  Hyperswitch provides a collection of APIs that enable you to process and manage payments. Our APIs accept and return JSON in the HTTP body, and return standard HTTP response codes.  You can consume the APIs directly using your favorite HTTP/REST library.  We have a testing environment referred to \"sandbox\", which you can setup to test API calls without affecting production data. Currently, our sandbox environment is live while our production environment is under development and will be available soon. You can sign up on our Dashboard to get API keys to access Hyperswitch API.  ### Environment  Use the following base URLs when making requests to the APIs:  | Environment   |  Base URL                          | |---------------|------------------------------------| | Sandbox       | <https://sandbox.hyperswitch.io>   | | Production    | <https://api.hyperswitch.io>       |  ## Authentication  When you sign up on our [dashboard](https://app.hyperswitch.io) and create a merchant account, you are given a secret key (also referred as api-key) and a publishable key. You may authenticate all API requests with Hyperswitch server by providing the appropriate key in the request Authorization header.  | Key             |  Description                                                                                  | |-----------------|-----------------------------------------------------------------------------------------------| | api-key         | Private key. Used to authenticate all API requests from your merchant server                  | | publishable key | Unique identifier for your account. Used to authenticate API requests from your app's client  |  Never share your secret api keys. Keep them guarded and secure. 
 *
 * The version of the OpenAPI document: 0.1.0
 * Contact: hyperswitch@juspay.in
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.hyperswitch.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonSubTypes;
import com.fasterxml.jackson.annotation.JsonTypeInfo;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.hyperswitch.model.ERRORUNKNOWN;
import com.hyperswitch.model.GooglePaySessionResponseSecrets;
import com.hyperswitch.model.GpayAllowedPaymentMethods;
import com.hyperswitch.model.GpayMerchantInfo;
import com.hyperswitch.model.GpayShippingAddressParameters;
import com.hyperswitch.model.GpayTransactionInfo;
import com.hyperswitch.model.SdkNextAction;
import com.hyperswitch.model.SessionTokenOneOf;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * SessionToken
 */
@JsonPropertyOrder({
  SessionToken.JSON_PROPERTY_WALLET_NAME,
  SessionToken.JSON_PROPERTY_DELAYED_SESSION_TOKEN,
  SessionToken.JSON_PROPERTY_CONNECTOR,
  SessionToken.JSON_PROPERTY_SDK_NEXT_ACTION,
  SessionToken.JSON_PROPERTY_MERCHANT_INFO,
  SessionToken.JSON_PROPERTY_SHIPPING_ADDRESS_REQUIRED,
  SessionToken.JSON_PROPERTY_EMAIL_REQUIRED,
  SessionToken.JSON_PROPERTY_SHIPPING_ADDRESS_PARAMETERS,
  SessionToken.JSON_PROPERTY_ALLOWED_PAYMENT_METHODS,
  SessionToken.JSON_PROPERTY_TRANSACTION_INFO,
  SessionToken.JSON_PROPERTY_SECRETS
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
@JsonIgnoreProperties(
  value = "wallet_name", // ignore manually set wallet_name, it will be automatically generated by Jackson during serialization
  allowSetters = true // allows the wallet_name to be set during deserialization
)
@JsonTypeInfo(use = JsonTypeInfo.Id.NAME, include = JsonTypeInfo.As.PROPERTY, property = "wallet_name", visible = true)
@JsonSubTypes({
  @JsonSubTypes.Type(value = SessionTokenOneOf.class, name = "SessionToken_oneOf"),
  @JsonSubTypes.Type(value = ERRORUNKNOWN.class, name = ""),
})

public class SessionToken {
  /**
   * Gets or Sets walletName
   */
  public enum WalletNameEnum {
    GOOGLE_PAY("google_pay");

    private String value;

    WalletNameEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static WalletNameEnum fromValue(String value) {
      for (WalletNameEnum b : WalletNameEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_WALLET_NAME = "wallet_name";
  protected WalletNameEnum walletName;

  public static final String JSON_PROPERTY_DELAYED_SESSION_TOKEN = "delayed_session_token";
  private Boolean delayedSessionToken;

  public static final String JSON_PROPERTY_CONNECTOR = "connector";
  private String connector;

  public static final String JSON_PROPERTY_SDK_NEXT_ACTION = "sdk_next_action";
  private SdkNextAction sdkNextAction;

  public static final String JSON_PROPERTY_MERCHANT_INFO = "merchant_info";
  private GpayMerchantInfo merchantInfo;

  public static final String JSON_PROPERTY_SHIPPING_ADDRESS_REQUIRED = "shipping_address_required";
  private Boolean shippingAddressRequired;

  public static final String JSON_PROPERTY_EMAIL_REQUIRED = "email_required";
  private Boolean emailRequired;

  public static final String JSON_PROPERTY_SHIPPING_ADDRESS_PARAMETERS = "shipping_address_parameters";
  private GpayShippingAddressParameters shippingAddressParameters;

  public static final String JSON_PROPERTY_ALLOWED_PAYMENT_METHODS = "allowed_payment_methods";
  private List<GpayAllowedPaymentMethods> allowedPaymentMethods = new ArrayList<>();

  public static final String JSON_PROPERTY_TRANSACTION_INFO = "transaction_info";
  private GpayTransactionInfo transactionInfo;

  public static final String JSON_PROPERTY_SECRETS = "secrets";
  private JsonNullable<GooglePaySessionResponseSecrets> secrets = JsonNullable.<GooglePaySessionResponseSecrets>undefined();

  public SessionToken() { 
  }

  public SessionToken walletName(WalletNameEnum walletName) {
    
    this.walletName = walletName;
    return this;
  }

   /**
   * Get walletName
   * @return walletName
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_WALLET_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public WalletNameEnum getWalletName() {
    return walletName;
  }


  @JsonProperty(JSON_PROPERTY_WALLET_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setWalletName(WalletNameEnum walletName) {
    this.walletName = walletName;
  }


  public SessionToken delayedSessionToken(Boolean delayedSessionToken) {
    
    this.delayedSessionToken = delayedSessionToken;
    return this;
  }

   /**
   * Identifier for the delayed session response
   * @return delayedSessionToken
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Identifier for the delayed session response")
  @JsonProperty(JSON_PROPERTY_DELAYED_SESSION_TOKEN)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Boolean getDelayedSessionToken() {
    return delayedSessionToken;
  }


  @JsonProperty(JSON_PROPERTY_DELAYED_SESSION_TOKEN)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setDelayedSessionToken(Boolean delayedSessionToken) {
    this.delayedSessionToken = delayedSessionToken;
  }


  public SessionToken connector(String connector) {
    
    this.connector = connector;
    return this;
  }

   /**
   * The name of the connector
   * @return connector
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "The name of the connector")
  @JsonProperty(JSON_PROPERTY_CONNECTOR)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getConnector() {
    return connector;
  }


  @JsonProperty(JSON_PROPERTY_CONNECTOR)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setConnector(String connector) {
    this.connector = connector;
  }


  public SessionToken sdkNextAction(SdkNextAction sdkNextAction) {
    
    this.sdkNextAction = sdkNextAction;
    return this;
  }

   /**
   * Get sdkNextAction
   * @return sdkNextAction
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_SDK_NEXT_ACTION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public SdkNextAction getSdkNextAction() {
    return sdkNextAction;
  }


  @JsonProperty(JSON_PROPERTY_SDK_NEXT_ACTION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setSdkNextAction(SdkNextAction sdkNextAction) {
    this.sdkNextAction = sdkNextAction;
  }


  public SessionToken merchantInfo(GpayMerchantInfo merchantInfo) {
    
    this.merchantInfo = merchantInfo;
    return this;
  }

   /**
   * Get merchantInfo
   * @return merchantInfo
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_MERCHANT_INFO)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public GpayMerchantInfo getMerchantInfo() {
    return merchantInfo;
  }


  @JsonProperty(JSON_PROPERTY_MERCHANT_INFO)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setMerchantInfo(GpayMerchantInfo merchantInfo) {
    this.merchantInfo = merchantInfo;
  }


  public SessionToken shippingAddressRequired(Boolean shippingAddressRequired) {
    
    this.shippingAddressRequired = shippingAddressRequired;
    return this;
  }

   /**
   * Is shipping address required
   * @return shippingAddressRequired
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Is shipping address required")
  @JsonProperty(JSON_PROPERTY_SHIPPING_ADDRESS_REQUIRED)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Boolean getShippingAddressRequired() {
    return shippingAddressRequired;
  }


  @JsonProperty(JSON_PROPERTY_SHIPPING_ADDRESS_REQUIRED)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setShippingAddressRequired(Boolean shippingAddressRequired) {
    this.shippingAddressRequired = shippingAddressRequired;
  }


  public SessionToken emailRequired(Boolean emailRequired) {
    
    this.emailRequired = emailRequired;
    return this;
  }

   /**
   * Is email required
   * @return emailRequired
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Is email required")
  @JsonProperty(JSON_PROPERTY_EMAIL_REQUIRED)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Boolean getEmailRequired() {
    return emailRequired;
  }


  @JsonProperty(JSON_PROPERTY_EMAIL_REQUIRED)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setEmailRequired(Boolean emailRequired) {
    this.emailRequired = emailRequired;
  }


  public SessionToken shippingAddressParameters(GpayShippingAddressParameters shippingAddressParameters) {
    
    this.shippingAddressParameters = shippingAddressParameters;
    return this;
  }

   /**
   * Get shippingAddressParameters
   * @return shippingAddressParameters
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_SHIPPING_ADDRESS_PARAMETERS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public GpayShippingAddressParameters getShippingAddressParameters() {
    return shippingAddressParameters;
  }


  @JsonProperty(JSON_PROPERTY_SHIPPING_ADDRESS_PARAMETERS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setShippingAddressParameters(GpayShippingAddressParameters shippingAddressParameters) {
    this.shippingAddressParameters = shippingAddressParameters;
  }


  public SessionToken allowedPaymentMethods(List<GpayAllowedPaymentMethods> allowedPaymentMethods) {
    
    this.allowedPaymentMethods = allowedPaymentMethods;
    return this;
  }

  public SessionToken addAllowedPaymentMethodsItem(GpayAllowedPaymentMethods allowedPaymentMethodsItem) {
    this.allowedPaymentMethods.add(allowedPaymentMethodsItem);
    return this;
  }

   /**
   * List of the allowed payment meythods
   * @return allowedPaymentMethods
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "List of the allowed payment meythods")
  @JsonProperty(JSON_PROPERTY_ALLOWED_PAYMENT_METHODS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public List<GpayAllowedPaymentMethods> getAllowedPaymentMethods() {
    return allowedPaymentMethods;
  }


  @JsonProperty(JSON_PROPERTY_ALLOWED_PAYMENT_METHODS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setAllowedPaymentMethods(List<GpayAllowedPaymentMethods> allowedPaymentMethods) {
    this.allowedPaymentMethods = allowedPaymentMethods;
  }


  public SessionToken transactionInfo(GpayTransactionInfo transactionInfo) {
    
    this.transactionInfo = transactionInfo;
    return this;
  }

   /**
   * Get transactionInfo
   * @return transactionInfo
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_TRANSACTION_INFO)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public GpayTransactionInfo getTransactionInfo() {
    return transactionInfo;
  }


  @JsonProperty(JSON_PROPERTY_TRANSACTION_INFO)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setTransactionInfo(GpayTransactionInfo transactionInfo) {
    this.transactionInfo = transactionInfo;
  }


  public SessionToken secrets(GooglePaySessionResponseSecrets secrets) {
    this.secrets = JsonNullable.<GooglePaySessionResponseSecrets>of(secrets);
    
    return this;
  }

   /**
   * Get secrets
   * @return secrets
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public GooglePaySessionResponseSecrets getSecrets() {
        return secrets.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_SECRETS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<GooglePaySessionResponseSecrets> getSecrets_JsonNullable() {
    return secrets;
  }
  
  @JsonProperty(JSON_PROPERTY_SECRETS)
  public void setSecrets_JsonNullable(JsonNullable<GooglePaySessionResponseSecrets> secrets) {
    this.secrets = secrets;
  }

  public void setSecrets(GooglePaySessionResponseSecrets secrets) {
    this.secrets = JsonNullable.<GooglePaySessionResponseSecrets>of(secrets);
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SessionToken sessionToken = (SessionToken) o;
    return Objects.equals(this.walletName, sessionToken.walletName) &&
        Objects.equals(this.delayedSessionToken, sessionToken.delayedSessionToken) &&
        Objects.equals(this.connector, sessionToken.connector) &&
        Objects.equals(this.sdkNextAction, sessionToken.sdkNextAction) &&
        Objects.equals(this.merchantInfo, sessionToken.merchantInfo) &&
        Objects.equals(this.shippingAddressRequired, sessionToken.shippingAddressRequired) &&
        Objects.equals(this.emailRequired, sessionToken.emailRequired) &&
        Objects.equals(this.shippingAddressParameters, sessionToken.shippingAddressParameters) &&
        Objects.equals(this.allowedPaymentMethods, sessionToken.allowedPaymentMethods) &&
        Objects.equals(this.transactionInfo, sessionToken.transactionInfo) &&
        equalsNullable(this.secrets, sessionToken.secrets);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(walletName, delayedSessionToken, connector, sdkNextAction, merchantInfo, shippingAddressRequired, emailRequired, shippingAddressParameters, allowedPaymentMethods, transactionInfo, hashCodeNullable(secrets));
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SessionToken {\n");
    sb.append("    walletName: ").append(toIndentedString(walletName)).append("\n");
    sb.append("    delayedSessionToken: ").append(toIndentedString(delayedSessionToken)).append("\n");
    sb.append("    connector: ").append(toIndentedString(connector)).append("\n");
    sb.append("    sdkNextAction: ").append(toIndentedString(sdkNextAction)).append("\n");
    sb.append("    merchantInfo: ").append(toIndentedString(merchantInfo)).append("\n");
    sb.append("    shippingAddressRequired: ").append(toIndentedString(shippingAddressRequired)).append("\n");
    sb.append("    emailRequired: ").append(toIndentedString(emailRequired)).append("\n");
    sb.append("    shippingAddressParameters: ").append(toIndentedString(shippingAddressParameters)).append("\n");
    sb.append("    allowedPaymentMethods: ").append(toIndentedString(allowedPaymentMethods)).append("\n");
    sb.append("    transactionInfo: ").append(toIndentedString(transactionInfo)).append("\n");
    sb.append("    secrets: ").append(toIndentedString(secrets)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

