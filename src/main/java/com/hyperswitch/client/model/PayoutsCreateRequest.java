/*
 * Hyperswitch - API Documentation
 *  ## Get started  Hyperswitch provides a collection of APIs that enable you to process and manage payments. Our APIs accept and return JSON in the HTTP body, and return standard HTTP response codes.  You can consume the APIs directly using your favorite HTTP/REST library.  We have a testing environment referred to \"sandbox\", which you can setup to test API calls without affecting production data. Currently, our sandbox environment is live while our production environment is under development and will be available soon. You can sign up on our Dashboard to get API keys to access Hyperswitch API.  ### Environment  Use the following base URLs when making requests to the APIs:  | Environment   |  Base URL                          | |---------------|------------------------------------| | Sandbox       | <https://sandbox.hyperswitch.io>   | | Production    | <https://api.hyperswitch.io>       |  ## Authentication  When you sign up on our [dashboard](https://app.hyperswitch.io) and create a merchant account, you are given a secret key (also referred as api-key) and a publishable key. You may authenticate all API requests with Hyperswitch server by providing the appropriate key in the request Authorization header.  | Key             |  Description                                                                                  | |-----------------|-----------------------------------------------------------------------------------------------| | api-key         | Private key. Used to authenticate all API requests from your merchant server                  | | publishable key | Unique identifier for your account. Used to authenticate API requests from your app's client  |  Never share your secret api keys. Keep them guarded and secure. 
 *
 * The version of the OpenAPI document: 0.1.0
 * Contact: hyperswitch@juspay.in
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.hyperswitch.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.hyperswitch.client.model.Address;
import com.hyperswitch.client.model.CountryAlpha2;
import com.hyperswitch.client.model.Currency;
import com.hyperswitch.client.model.CustomerDetails;
import com.hyperswitch.client.model.PayoutConnectors;
import com.hyperswitch.client.model.PayoutCreatePayoutLinkConfig;
import com.hyperswitch.client.model.PayoutEntityType;
import com.hyperswitch.client.model.PayoutMethodData;
import com.hyperswitch.client.model.PayoutSendPriority;
import com.hyperswitch.client.model.PayoutType;
import com.hyperswitch.client.model.RoutingAlgorithm;
import java.util.ArrayList;
import java.util.List;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * PayoutsCreateRequest
 */
@JsonPropertyOrder({
  PayoutsCreateRequest.JSON_PROPERTY_AMOUNT,
  PayoutsCreateRequest.JSON_PROPERTY_CURRENCY,
  PayoutsCreateRequest.JSON_PROPERTY_ROUTING,
  PayoutsCreateRequest.JSON_PROPERTY_CONNECTOR,
  PayoutsCreateRequest.JSON_PROPERTY_CONFIRM,
  PayoutsCreateRequest.JSON_PROPERTY_PAYOUT_TYPE,
  PayoutsCreateRequest.JSON_PROPERTY_PAYOUT_METHOD_DATA,
  PayoutsCreateRequest.JSON_PROPERTY_BILLING,
  PayoutsCreateRequest.JSON_PROPERTY_AUTO_FULFILL,
  PayoutsCreateRequest.JSON_PROPERTY_CUSTOMER_ID,
  PayoutsCreateRequest.JSON_PROPERTY_CUSTOMER,
  PayoutsCreateRequest.JSON_PROPERTY_RETURN_URL,
  PayoutsCreateRequest.JSON_PROPERTY_BUSINESS_COUNTRY,
  PayoutsCreateRequest.JSON_PROPERTY_BUSINESS_LABEL,
  PayoutsCreateRequest.JSON_PROPERTY_DESCRIPTION,
  PayoutsCreateRequest.JSON_PROPERTY_ENTITY_TYPE,
  PayoutsCreateRequest.JSON_PROPERTY_RECURRING,
  PayoutsCreateRequest.JSON_PROPERTY_METADATA,
  PayoutsCreateRequest.JSON_PROPERTY_PAYOUT_TOKEN,
  PayoutsCreateRequest.JSON_PROPERTY_PROFILE_ID,
  PayoutsCreateRequest.JSON_PROPERTY_PRIORITY,
  PayoutsCreateRequest.JSON_PROPERTY_PAYOUT_LINK,
  PayoutsCreateRequest.JSON_PROPERTY_PAYOUT_LINK_CONFIG,
  PayoutsCreateRequest.JSON_PROPERTY_SESSION_EXPIRY,
  PayoutsCreateRequest.JSON_PROPERTY_EMAIL,
  PayoutsCreateRequest.JSON_PROPERTY_NAME,
  PayoutsCreateRequest.JSON_PROPERTY_PHONE,
  PayoutsCreateRequest.JSON_PROPERTY_PHONE_COUNTRY_CODE
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class PayoutsCreateRequest {
  public static final String JSON_PROPERTY_AMOUNT = "amount";
  private Long amount;

  public static final String JSON_PROPERTY_CURRENCY = "currency";
  private Currency currency;

  public static final String JSON_PROPERTY_ROUTING = "routing";
  private JsonNullable<RoutingAlgorithm> routing = JsonNullable.<RoutingAlgorithm>undefined();

  public static final String JSON_PROPERTY_CONNECTOR = "connector";
  private JsonNullable<List<PayoutConnectors>> connector = JsonNullable.<List<PayoutConnectors>>undefined();

  public static final String JSON_PROPERTY_CONFIRM = "confirm";
  private JsonNullable<Boolean> confirm = JsonNullable.<Boolean>of(false);

  public static final String JSON_PROPERTY_PAYOUT_TYPE = "payout_type";
  private JsonNullable<PayoutType> payoutType = JsonNullable.<PayoutType>undefined();

  public static final String JSON_PROPERTY_PAYOUT_METHOD_DATA = "payout_method_data";
  private JsonNullable<PayoutMethodData> payoutMethodData = JsonNullable.<PayoutMethodData>undefined();

  public static final String JSON_PROPERTY_BILLING = "billing";
  private JsonNullable<Address> billing = JsonNullable.<Address>undefined();

  public static final String JSON_PROPERTY_AUTO_FULFILL = "auto_fulfill";
  private JsonNullable<Boolean> autoFulfill = JsonNullable.<Boolean>of(false);

  public static final String JSON_PROPERTY_CUSTOMER_ID = "customer_id";
  private JsonNullable<String> customerId = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_CUSTOMER = "customer";
  private JsonNullable<CustomerDetails> customer = JsonNullable.<CustomerDetails>undefined();

  public static final String JSON_PROPERTY_RETURN_URL = "return_url";
  private JsonNullable<String> returnUrl = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_BUSINESS_COUNTRY = "business_country";
  private JsonNullable<CountryAlpha2> businessCountry = JsonNullable.<CountryAlpha2>undefined();

  public static final String JSON_PROPERTY_BUSINESS_LABEL = "business_label";
  private JsonNullable<String> businessLabel = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_DESCRIPTION = "description";
  private JsonNullable<String> description = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ENTITY_TYPE = "entity_type";
  private JsonNullable<PayoutEntityType> entityType = JsonNullable.<PayoutEntityType>undefined();

  public static final String JSON_PROPERTY_RECURRING = "recurring";
  private JsonNullable<Boolean> recurring = JsonNullable.<Boolean>of(false);

  public static final String JSON_PROPERTY_METADATA = "metadata";
  private JsonNullable<Object> metadata = JsonNullable.<Object>undefined();

  public static final String JSON_PROPERTY_PAYOUT_TOKEN = "payout_token";
  private JsonNullable<String> payoutToken = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_PROFILE_ID = "profile_id";
  private JsonNullable<String> profileId = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_PRIORITY = "priority";
  private JsonNullable<PayoutSendPriority> priority = JsonNullable.<PayoutSendPriority>undefined();

  public static final String JSON_PROPERTY_PAYOUT_LINK = "payout_link";
  private JsonNullable<Boolean> payoutLink = JsonNullable.<Boolean>of(false);

  public static final String JSON_PROPERTY_PAYOUT_LINK_CONFIG = "payout_link_config";
  private JsonNullable<PayoutCreatePayoutLinkConfig> payoutLinkConfig = JsonNullable.<PayoutCreatePayoutLinkConfig>undefined();

  public static final String JSON_PROPERTY_SESSION_EXPIRY = "session_expiry";
  private JsonNullable<Integer> sessionExpiry = JsonNullable.<Integer>undefined();

  public static final String JSON_PROPERTY_EMAIL = "email";
  private JsonNullable<String> email = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_NAME = "name";
  private JsonNullable<String> name = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_PHONE = "phone";
  private JsonNullable<String> phone = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_PHONE_COUNTRY_CODE = "phone_country_code";
  private JsonNullable<String> phoneCountryCode = JsonNullable.<String>undefined();

  public PayoutsCreateRequest() {
  }

  public PayoutsCreateRequest amount(Long amount) {
    
    this.amount = amount;
    return this;
  }

   /**
   * The payout amount. Amount for the payout in lowest denomination of the currency. (i.e) in cents for USD denomination, in paisa for INR denomination etc.,
   * minimum: 0
   * @return amount
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Long getAmount() {
    return amount;
  }


  @JsonProperty(JSON_PROPERTY_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setAmount(Long amount) {
    this.amount = amount;
  }


  public PayoutsCreateRequest currency(Currency currency) {
    
    this.currency = currency;
    return this;
  }

   /**
   * Get currency
   * @return currency
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_CURRENCY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Currency getCurrency() {
    return currency;
  }


  @JsonProperty(JSON_PROPERTY_CURRENCY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setCurrency(Currency currency) {
    this.currency = currency;
  }


  public PayoutsCreateRequest routing(RoutingAlgorithm routing) {
    this.routing = JsonNullable.<RoutingAlgorithm>of(routing);
    
    return this;
  }

   /**
   * Get routing
   * @return routing
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public RoutingAlgorithm getRouting() {
        return routing.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ROUTING)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<RoutingAlgorithm> getRouting_JsonNullable() {
    return routing;
  }
  
  @JsonProperty(JSON_PROPERTY_ROUTING)
  public void setRouting_JsonNullable(JsonNullable<RoutingAlgorithm> routing) {
    this.routing = routing;
  }

  public void setRouting(RoutingAlgorithm routing) {
    this.routing = JsonNullable.<RoutingAlgorithm>of(routing);
  }


  public PayoutsCreateRequest connector(List<PayoutConnectors> connector) {
    this.connector = JsonNullable.<List<PayoutConnectors>>of(connector);
    
    return this;
  }

  public PayoutsCreateRequest addConnectorItem(PayoutConnectors connectorItem) {
    if (this.connector == null || !this.connector.isPresent()) {
      this.connector = JsonNullable.<List<PayoutConnectors>>of(new ArrayList<>());
    }
    try {
      this.connector.get().add(connectorItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * This field allows the merchant to manually select a connector with which the payout can go through.
   * @return connector
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public List<PayoutConnectors> getConnector() {
        return connector.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_CONNECTOR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<PayoutConnectors>> getConnector_JsonNullable() {
    return connector;
  }
  
  @JsonProperty(JSON_PROPERTY_CONNECTOR)
  public void setConnector_JsonNullable(JsonNullable<List<PayoutConnectors>> connector) {
    this.connector = connector;
  }

  public void setConnector(List<PayoutConnectors> connector) {
    this.connector = JsonNullable.<List<PayoutConnectors>>of(connector);
  }


  public PayoutsCreateRequest confirm(Boolean confirm) {
    this.confirm = JsonNullable.<Boolean>of(confirm);
    
    return this;
  }

   /**
   * This field is used when merchant wants to confirm the payout, thus useful for the payout _Confirm_ request. Ideally merchants should _Create_ a payout, _Update_ it (if required), then _Confirm_ it.
   * @return confirm
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public Boolean getConfirm() {
        return confirm.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_CONFIRM)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Boolean> getConfirm_JsonNullable() {
    return confirm;
  }
  
  @JsonProperty(JSON_PROPERTY_CONFIRM)
  public void setConfirm_JsonNullable(JsonNullable<Boolean> confirm) {
    this.confirm = confirm;
  }

  public void setConfirm(Boolean confirm) {
    this.confirm = JsonNullable.<Boolean>of(confirm);
  }


  public PayoutsCreateRequest payoutType(PayoutType payoutType) {
    this.payoutType = JsonNullable.<PayoutType>of(payoutType);
    
    return this;
  }

   /**
   * Get payoutType
   * @return payoutType
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public PayoutType getPayoutType() {
        return payoutType.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PAYOUT_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<PayoutType> getPayoutType_JsonNullable() {
    return payoutType;
  }
  
  @JsonProperty(JSON_PROPERTY_PAYOUT_TYPE)
  public void setPayoutType_JsonNullable(JsonNullable<PayoutType> payoutType) {
    this.payoutType = payoutType;
  }

  public void setPayoutType(PayoutType payoutType) {
    this.payoutType = JsonNullable.<PayoutType>of(payoutType);
  }


  public PayoutsCreateRequest payoutMethodData(PayoutMethodData payoutMethodData) {
    this.payoutMethodData = JsonNullable.<PayoutMethodData>of(payoutMethodData);
    
    return this;
  }

   /**
   * Get payoutMethodData
   * @return payoutMethodData
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public PayoutMethodData getPayoutMethodData() {
        return payoutMethodData.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PAYOUT_METHOD_DATA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<PayoutMethodData> getPayoutMethodData_JsonNullable() {
    return payoutMethodData;
  }
  
  @JsonProperty(JSON_PROPERTY_PAYOUT_METHOD_DATA)
  public void setPayoutMethodData_JsonNullable(JsonNullable<PayoutMethodData> payoutMethodData) {
    this.payoutMethodData = payoutMethodData;
  }

  public void setPayoutMethodData(PayoutMethodData payoutMethodData) {
    this.payoutMethodData = JsonNullable.<PayoutMethodData>of(payoutMethodData);
  }


  public PayoutsCreateRequest billing(Address billing) {
    this.billing = JsonNullable.<Address>of(billing);
    
    return this;
  }

   /**
   * Get billing
   * @return billing
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public Address getBilling() {
        return billing.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_BILLING)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Address> getBilling_JsonNullable() {
    return billing;
  }
  
  @JsonProperty(JSON_PROPERTY_BILLING)
  public void setBilling_JsonNullable(JsonNullable<Address> billing) {
    this.billing = billing;
  }

  public void setBilling(Address billing) {
    this.billing = JsonNullable.<Address>of(billing);
  }


  public PayoutsCreateRequest autoFulfill(Boolean autoFulfill) {
    this.autoFulfill = JsonNullable.<Boolean>of(autoFulfill);
    
    return this;
  }

   /**
   * Set to true to confirm the payout without review, no further action required
   * @return autoFulfill
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public Boolean getAutoFulfill() {
        return autoFulfill.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_AUTO_FULFILL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Boolean> getAutoFulfill_JsonNullable() {
    return autoFulfill;
  }
  
  @JsonProperty(JSON_PROPERTY_AUTO_FULFILL)
  public void setAutoFulfill_JsonNullable(JsonNullable<Boolean> autoFulfill) {
    this.autoFulfill = autoFulfill;
  }

  public void setAutoFulfill(Boolean autoFulfill) {
    this.autoFulfill = JsonNullable.<Boolean>of(autoFulfill);
  }


  public PayoutsCreateRequest customerId(String customerId) {
    this.customerId = JsonNullable.<String>of(customerId);
    
    return this;
  }

   /**
   * The identifier for the customer object. If not provided the customer ID will be autogenerated. _Deprecated: Use customer_id instead._
   * @return customerId
   * @deprecated
  **/
  @Deprecated
  @javax.annotation.Nullable
  @JsonIgnore

  public String getCustomerId() {
        return customerId.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_CUSTOMER_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getCustomerId_JsonNullable() {
    return customerId;
  }
  
  @JsonProperty(JSON_PROPERTY_CUSTOMER_ID)
  public void setCustomerId_JsonNullable(JsonNullable<String> customerId) {
    this.customerId = customerId;
  }

  public void setCustomerId(String customerId) {
    this.customerId = JsonNullable.<String>of(customerId);
  }


  public PayoutsCreateRequest customer(CustomerDetails customer) {
    this.customer = JsonNullable.<CustomerDetails>of(customer);
    
    return this;
  }

   /**
   * Get customer
   * @return customer
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public CustomerDetails getCustomer() {
        return customer.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_CUSTOMER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<CustomerDetails> getCustomer_JsonNullable() {
    return customer;
  }
  
  @JsonProperty(JSON_PROPERTY_CUSTOMER)
  public void setCustomer_JsonNullable(JsonNullable<CustomerDetails> customer) {
    this.customer = customer;
  }

  public void setCustomer(CustomerDetails customer) {
    this.customer = JsonNullable.<CustomerDetails>of(customer);
  }


  public PayoutsCreateRequest returnUrl(String returnUrl) {
    this.returnUrl = JsonNullable.<String>of(returnUrl);
    
    return this;
  }

   /**
   * The URL to redirect after the completion of the operation
   * @return returnUrl
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public String getReturnUrl() {
        return returnUrl.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_RETURN_URL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getReturnUrl_JsonNullable() {
    return returnUrl;
  }
  
  @JsonProperty(JSON_PROPERTY_RETURN_URL)
  public void setReturnUrl_JsonNullable(JsonNullable<String> returnUrl) {
    this.returnUrl = returnUrl;
  }

  public void setReturnUrl(String returnUrl) {
    this.returnUrl = JsonNullable.<String>of(returnUrl);
  }


  public PayoutsCreateRequest businessCountry(CountryAlpha2 businessCountry) {
    this.businessCountry = JsonNullable.<CountryAlpha2>of(businessCountry);
    
    return this;
  }

   /**
   * Get businessCountry
   * @return businessCountry
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public CountryAlpha2 getBusinessCountry() {
        return businessCountry.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_BUSINESS_COUNTRY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<CountryAlpha2> getBusinessCountry_JsonNullable() {
    return businessCountry;
  }
  
  @JsonProperty(JSON_PROPERTY_BUSINESS_COUNTRY)
  public void setBusinessCountry_JsonNullable(JsonNullable<CountryAlpha2> businessCountry) {
    this.businessCountry = businessCountry;
  }

  public void setBusinessCountry(CountryAlpha2 businessCountry) {
    this.businessCountry = JsonNullable.<CountryAlpha2>of(businessCountry);
  }


  public PayoutsCreateRequest businessLabel(String businessLabel) {
    this.businessLabel = JsonNullable.<String>of(businessLabel);
    
    return this;
  }

   /**
   * Business label of the merchant for this payout. _Deprecated: Use profile_id instead._
   * @return businessLabel
   * @deprecated
  **/
  @Deprecated
  @javax.annotation.Nullable
  @JsonIgnore

  public String getBusinessLabel() {
        return businessLabel.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_BUSINESS_LABEL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getBusinessLabel_JsonNullable() {
    return businessLabel;
  }
  
  @JsonProperty(JSON_PROPERTY_BUSINESS_LABEL)
  public void setBusinessLabel_JsonNullable(JsonNullable<String> businessLabel) {
    this.businessLabel = businessLabel;
  }

  public void setBusinessLabel(String businessLabel) {
    this.businessLabel = JsonNullable.<String>of(businessLabel);
  }


  public PayoutsCreateRequest description(String description) {
    this.description = JsonNullable.<String>of(description);
    
    return this;
  }

   /**
   * A description of the payout
   * @return description
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public String getDescription() {
        return description.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getDescription_JsonNullable() {
    return description;
  }
  
  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  public void setDescription_JsonNullable(JsonNullable<String> description) {
    this.description = description;
  }

  public void setDescription(String description) {
    this.description = JsonNullable.<String>of(description);
  }


  public PayoutsCreateRequest entityType(PayoutEntityType entityType) {
    this.entityType = JsonNullable.<PayoutEntityType>of(entityType);
    
    return this;
  }

   /**
   * Get entityType
   * @return entityType
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public PayoutEntityType getEntityType() {
        return entityType.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ENTITY_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<PayoutEntityType> getEntityType_JsonNullable() {
    return entityType;
  }
  
  @JsonProperty(JSON_PROPERTY_ENTITY_TYPE)
  public void setEntityType_JsonNullable(JsonNullable<PayoutEntityType> entityType) {
    this.entityType = entityType;
  }

  public void setEntityType(PayoutEntityType entityType) {
    this.entityType = JsonNullable.<PayoutEntityType>of(entityType);
  }


  public PayoutsCreateRequest recurring(Boolean recurring) {
    this.recurring = JsonNullable.<Boolean>of(recurring);
    
    return this;
  }

   /**
   * Specifies whether or not the payout request is recurring
   * @return recurring
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public Boolean getRecurring() {
        return recurring.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_RECURRING)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Boolean> getRecurring_JsonNullable() {
    return recurring;
  }
  
  @JsonProperty(JSON_PROPERTY_RECURRING)
  public void setRecurring_JsonNullable(JsonNullable<Boolean> recurring) {
    this.recurring = recurring;
  }

  public void setRecurring(Boolean recurring) {
    this.recurring = JsonNullable.<Boolean>of(recurring);
  }


  public PayoutsCreateRequest metadata(Object metadata) {
    this.metadata = JsonNullable.<Object>of(metadata);
    
    return this;
  }

   /**
   * You can specify up to 50 keys, with key names up to 40 characters long and values up to 500 characters long. Metadata is useful for storing additional, structured information on an object.
   * @return metadata
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public Object getMetadata() {
        return metadata.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_METADATA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Object> getMetadata_JsonNullable() {
    return metadata;
  }
  
  @JsonProperty(JSON_PROPERTY_METADATA)
  public void setMetadata_JsonNullable(JsonNullable<Object> metadata) {
    this.metadata = metadata;
  }

  public void setMetadata(Object metadata) {
    this.metadata = JsonNullable.<Object>of(metadata);
  }


  public PayoutsCreateRequest payoutToken(String payoutToken) {
    this.payoutToken = JsonNullable.<String>of(payoutToken);
    
    return this;
  }

   /**
   * Provide a reference to a stored payout method, used to process the payout.
   * @return payoutToken
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public String getPayoutToken() {
        return payoutToken.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PAYOUT_TOKEN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getPayoutToken_JsonNullable() {
    return payoutToken;
  }
  
  @JsonProperty(JSON_PROPERTY_PAYOUT_TOKEN)
  public void setPayoutToken_JsonNullable(JsonNullable<String> payoutToken) {
    this.payoutToken = payoutToken;
  }

  public void setPayoutToken(String payoutToken) {
    this.payoutToken = JsonNullable.<String>of(payoutToken);
  }


  public PayoutsCreateRequest profileId(String profileId) {
    this.profileId = JsonNullable.<String>of(profileId);
    
    return this;
  }

   /**
   * The business profile to use for this payout, especially if there are multiple business profiles associated with the account, otherwise default business profile associated with the merchant account will be used.
   * @return profileId
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public String getProfileId() {
        return profileId.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PROFILE_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getProfileId_JsonNullable() {
    return profileId;
  }
  
  @JsonProperty(JSON_PROPERTY_PROFILE_ID)
  public void setProfileId_JsonNullable(JsonNullable<String> profileId) {
    this.profileId = profileId;
  }

  public void setProfileId(String profileId) {
    this.profileId = JsonNullable.<String>of(profileId);
  }


  public PayoutsCreateRequest priority(PayoutSendPriority priority) {
    this.priority = JsonNullable.<PayoutSendPriority>of(priority);
    
    return this;
  }

   /**
   * Get priority
   * @return priority
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public PayoutSendPriority getPriority() {
        return priority.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PRIORITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<PayoutSendPriority> getPriority_JsonNullable() {
    return priority;
  }
  
  @JsonProperty(JSON_PROPERTY_PRIORITY)
  public void setPriority_JsonNullable(JsonNullable<PayoutSendPriority> priority) {
    this.priority = priority;
  }

  public void setPriority(PayoutSendPriority priority) {
    this.priority = JsonNullable.<PayoutSendPriority>of(priority);
  }


  public PayoutsCreateRequest payoutLink(Boolean payoutLink) {
    this.payoutLink = JsonNullable.<Boolean>of(payoutLink);
    
    return this;
  }

   /**
   * Whether to get the payout link (if applicable). Merchant need to specify this during the Payout _Create_, this field can not be updated during Payout _Update_.
   * @return payoutLink
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public Boolean getPayoutLink() {
        return payoutLink.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PAYOUT_LINK)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Boolean> getPayoutLink_JsonNullable() {
    return payoutLink;
  }
  
  @JsonProperty(JSON_PROPERTY_PAYOUT_LINK)
  public void setPayoutLink_JsonNullable(JsonNullable<Boolean> payoutLink) {
    this.payoutLink = payoutLink;
  }

  public void setPayoutLink(Boolean payoutLink) {
    this.payoutLink = JsonNullable.<Boolean>of(payoutLink);
  }


  public PayoutsCreateRequest payoutLinkConfig(PayoutCreatePayoutLinkConfig payoutLinkConfig) {
    this.payoutLinkConfig = JsonNullable.<PayoutCreatePayoutLinkConfig>of(payoutLinkConfig);
    
    return this;
  }

   /**
   * Get payoutLinkConfig
   * @return payoutLinkConfig
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public PayoutCreatePayoutLinkConfig getPayoutLinkConfig() {
        return payoutLinkConfig.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PAYOUT_LINK_CONFIG)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<PayoutCreatePayoutLinkConfig> getPayoutLinkConfig_JsonNullable() {
    return payoutLinkConfig;
  }
  
  @JsonProperty(JSON_PROPERTY_PAYOUT_LINK_CONFIG)
  public void setPayoutLinkConfig_JsonNullable(JsonNullable<PayoutCreatePayoutLinkConfig> payoutLinkConfig) {
    this.payoutLinkConfig = payoutLinkConfig;
  }

  public void setPayoutLinkConfig(PayoutCreatePayoutLinkConfig payoutLinkConfig) {
    this.payoutLinkConfig = JsonNullable.<PayoutCreatePayoutLinkConfig>of(payoutLinkConfig);
  }


  public PayoutsCreateRequest sessionExpiry(Integer sessionExpiry) {
    this.sessionExpiry = JsonNullable.<Integer>of(sessionExpiry);
    
    return this;
  }

   /**
   * Will be used to expire client secret after certain amount of time to be supplied in seconds (900) for 15 mins
   * minimum: 0
   * @return sessionExpiry
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public Integer getSessionExpiry() {
        return sessionExpiry.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_SESSION_EXPIRY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Integer> getSessionExpiry_JsonNullable() {
    return sessionExpiry;
  }
  
  @JsonProperty(JSON_PROPERTY_SESSION_EXPIRY)
  public void setSessionExpiry_JsonNullable(JsonNullable<Integer> sessionExpiry) {
    this.sessionExpiry = sessionExpiry;
  }

  public void setSessionExpiry(Integer sessionExpiry) {
    this.sessionExpiry = JsonNullable.<Integer>of(sessionExpiry);
  }


  public PayoutsCreateRequest email(String email) {
    this.email = JsonNullable.<String>of(email);
    
    return this;
  }

   /**
   * Customer&#39;s email. _Deprecated: Use customer object instead._
   * @return email
   * @deprecated
  **/
  @Deprecated
  @javax.annotation.Nullable
  @JsonIgnore

  public String getEmail() {
        return email.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_EMAIL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getEmail_JsonNullable() {
    return email;
  }
  
  @JsonProperty(JSON_PROPERTY_EMAIL)
  public void setEmail_JsonNullable(JsonNullable<String> email) {
    this.email = email;
  }

  public void setEmail(String email) {
    this.email = JsonNullable.<String>of(email);
  }


  public PayoutsCreateRequest name(String name) {
    this.name = JsonNullable.<String>of(name);
    
    return this;
  }

   /**
   * Customer&#39;s name. _Deprecated: Use customer object instead._
   * @return name
   * @deprecated
  **/
  @Deprecated
  @javax.annotation.Nullable
  @JsonIgnore

  public String getName() {
        return name.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getName_JsonNullable() {
    return name;
  }
  
  @JsonProperty(JSON_PROPERTY_NAME)
  public void setName_JsonNullable(JsonNullable<String> name) {
    this.name = name;
  }

  public void setName(String name) {
    this.name = JsonNullable.<String>of(name);
  }


  public PayoutsCreateRequest phone(String phone) {
    this.phone = JsonNullable.<String>of(phone);
    
    return this;
  }

   /**
   * Customer&#39;s phone. _Deprecated: Use customer object instead._
   * @return phone
   * @deprecated
  **/
  @Deprecated
  @javax.annotation.Nullable
  @JsonIgnore

  public String getPhone() {
        return phone.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PHONE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getPhone_JsonNullable() {
    return phone;
  }
  
  @JsonProperty(JSON_PROPERTY_PHONE)
  public void setPhone_JsonNullable(JsonNullable<String> phone) {
    this.phone = phone;
  }

  public void setPhone(String phone) {
    this.phone = JsonNullable.<String>of(phone);
  }


  public PayoutsCreateRequest phoneCountryCode(String phoneCountryCode) {
    this.phoneCountryCode = JsonNullable.<String>of(phoneCountryCode);
    
    return this;
  }

   /**
   * Customer&#39;s phone country code. _Deprecated: Use customer object instead._
   * @return phoneCountryCode
   * @deprecated
  **/
  @Deprecated
  @javax.annotation.Nullable
  @JsonIgnore

  public String getPhoneCountryCode() {
        return phoneCountryCode.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PHONE_COUNTRY_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getPhoneCountryCode_JsonNullable() {
    return phoneCountryCode;
  }
  
  @JsonProperty(JSON_PROPERTY_PHONE_COUNTRY_CODE)
  public void setPhoneCountryCode_JsonNullable(JsonNullable<String> phoneCountryCode) {
    this.phoneCountryCode = phoneCountryCode;
  }

  public void setPhoneCountryCode(String phoneCountryCode) {
    this.phoneCountryCode = JsonNullable.<String>of(phoneCountryCode);
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PayoutsCreateRequest payoutsCreateRequest = (PayoutsCreateRequest) o;
    return Objects.equals(this.amount, payoutsCreateRequest.amount) &&
        Objects.equals(this.currency, payoutsCreateRequest.currency) &&
        equalsNullable(this.routing, payoutsCreateRequest.routing) &&
        equalsNullable(this.connector, payoutsCreateRequest.connector) &&
        equalsNullable(this.confirm, payoutsCreateRequest.confirm) &&
        equalsNullable(this.payoutType, payoutsCreateRequest.payoutType) &&
        equalsNullable(this.payoutMethodData, payoutsCreateRequest.payoutMethodData) &&
        equalsNullable(this.billing, payoutsCreateRequest.billing) &&
        equalsNullable(this.autoFulfill, payoutsCreateRequest.autoFulfill) &&
        equalsNullable(this.customerId, payoutsCreateRequest.customerId) &&
        equalsNullable(this.customer, payoutsCreateRequest.customer) &&
        equalsNullable(this.returnUrl, payoutsCreateRequest.returnUrl) &&
        equalsNullable(this.businessCountry, payoutsCreateRequest.businessCountry) &&
        equalsNullable(this.businessLabel, payoutsCreateRequest.businessLabel) &&
        equalsNullable(this.description, payoutsCreateRequest.description) &&
        equalsNullable(this.entityType, payoutsCreateRequest.entityType) &&
        equalsNullable(this.recurring, payoutsCreateRequest.recurring) &&
        equalsNullable(this.metadata, payoutsCreateRequest.metadata) &&
        equalsNullable(this.payoutToken, payoutsCreateRequest.payoutToken) &&
        equalsNullable(this.profileId, payoutsCreateRequest.profileId) &&
        equalsNullable(this.priority, payoutsCreateRequest.priority) &&
        equalsNullable(this.payoutLink, payoutsCreateRequest.payoutLink) &&
        equalsNullable(this.payoutLinkConfig, payoutsCreateRequest.payoutLinkConfig) &&
        equalsNullable(this.sessionExpiry, payoutsCreateRequest.sessionExpiry) &&
        equalsNullable(this.email, payoutsCreateRequest.email) &&
        equalsNullable(this.name, payoutsCreateRequest.name) &&
        equalsNullable(this.phone, payoutsCreateRequest.phone) &&
        equalsNullable(this.phoneCountryCode, payoutsCreateRequest.phoneCountryCode);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(amount, currency, hashCodeNullable(routing), hashCodeNullable(connector), hashCodeNullable(confirm), hashCodeNullable(payoutType), hashCodeNullable(payoutMethodData), hashCodeNullable(billing), hashCodeNullable(autoFulfill), hashCodeNullable(customerId), hashCodeNullable(customer), hashCodeNullable(returnUrl), hashCodeNullable(businessCountry), hashCodeNullable(businessLabel), hashCodeNullable(description), hashCodeNullable(entityType), hashCodeNullable(recurring), hashCodeNullable(metadata), hashCodeNullable(payoutToken), hashCodeNullable(profileId), hashCodeNullable(priority), hashCodeNullable(payoutLink), hashCodeNullable(payoutLinkConfig), hashCodeNullable(sessionExpiry), hashCodeNullable(email), hashCodeNullable(name), hashCodeNullable(phone), hashCodeNullable(phoneCountryCode));
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PayoutsCreateRequest {\n");
    sb.append("    amount: ").append(toIndentedString(amount)).append("\n");
    sb.append("    currency: ").append(toIndentedString(currency)).append("\n");
    sb.append("    routing: ").append(toIndentedString(routing)).append("\n");
    sb.append("    connector: ").append(toIndentedString(connector)).append("\n");
    sb.append("    confirm: ").append(toIndentedString(confirm)).append("\n");
    sb.append("    payoutType: ").append(toIndentedString(payoutType)).append("\n");
    sb.append("    payoutMethodData: ").append(toIndentedString(payoutMethodData)).append("\n");
    sb.append("    billing: ").append(toIndentedString(billing)).append("\n");
    sb.append("    autoFulfill: ").append(toIndentedString(autoFulfill)).append("\n");
    sb.append("    customerId: ").append(toIndentedString(customerId)).append("\n");
    sb.append("    customer: ").append(toIndentedString(customer)).append("\n");
    sb.append("    returnUrl: ").append(toIndentedString(returnUrl)).append("\n");
    sb.append("    businessCountry: ").append(toIndentedString(businessCountry)).append("\n");
    sb.append("    businessLabel: ").append(toIndentedString(businessLabel)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    entityType: ").append(toIndentedString(entityType)).append("\n");
    sb.append("    recurring: ").append(toIndentedString(recurring)).append("\n");
    sb.append("    metadata: ").append(toIndentedString(metadata)).append("\n");
    sb.append("    payoutToken: ").append(toIndentedString(payoutToken)).append("\n");
    sb.append("    profileId: ").append(toIndentedString(profileId)).append("\n");
    sb.append("    priority: ").append(toIndentedString(priority)).append("\n");
    sb.append("    payoutLink: ").append(toIndentedString(payoutLink)).append("\n");
    sb.append("    payoutLinkConfig: ").append(toIndentedString(payoutLinkConfig)).append("\n");
    sb.append("    sessionExpiry: ").append(toIndentedString(sessionExpiry)).append("\n");
    sb.append("    email: ").append(toIndentedString(email)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    phone: ").append(toIndentedString(phone)).append("\n");
    sb.append("    phoneCountryCode: ").append(toIndentedString(phoneCountryCode)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

