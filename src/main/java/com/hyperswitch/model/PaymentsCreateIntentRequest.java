/*
 * Hyperswitch - API Documentation
 *  ## Get started  Hyperswitch provides a collection of APIs that enable you to process and manage payments. Our APIs accept and return JSON in the HTTP body, and return standard HTTP response codes.  You can consume the APIs directly using your favorite HTTP/REST library.  We have a testing environment referred to \"sandbox\", which you can setup to test API calls without affecting production data. Currently, our sandbox environment is live while our production environment is under development and will be available soon. You can sign up on our Dashboard to get API keys to access Hyperswitch API.  ### Environment  Use the following base URLs when making requests to the APIs:  | Environment   |  Base URL                          | |---------------|------------------------------------| | Sandbox       | <https://sandbox.hyperswitch.io>   | | Production    | <https://api.hyperswitch.io>       |  ## Authentication  When you sign up on our [dashboard](https://app.hyperswitch.io) and create a merchant account, you are given a secret key (also referred as api-key) and a publishable key. You may authenticate all API requests with Hyperswitch server by providing the appropriate key in the request Authorization header.  | Key             |  Description                                                                                  | |-----------------|-----------------------------------------------------------------------------------------------| | api-key         | Private key. Used to authenticate all API requests from your merchant server                  | | publishable key | Unique identifier for your account. Used to authenticate API requests from your app's client  |  Never share your secret api keys. Keep them guarded and secure. 
 *
 * The version of the OpenAPI document: 0.1.0
 * Contact: hyperswitch@juspay.in
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.hyperswitch.model;

import java.net.URLEncoder;
import java.nio.charset.StandardCharsets;
import java.util.StringJoiner;
import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.hyperswitch.model.Address;
import com.hyperswitch.model.AmountDetails;
import com.hyperswitch.model.AuthenticationType;
import com.hyperswitch.model.CaptureMethod;
import com.hyperswitch.model.ConnectorMetadata;
import com.hyperswitch.model.EnablePaymentLinkRequest;
import com.hyperswitch.model.External3dsAuthenticationRequest;
import com.hyperswitch.model.FeatureMetadata;
import com.hyperswitch.model.FutureUsage;
import com.hyperswitch.model.MitExemptionRequest;
import com.hyperswitch.model.OrderDetailsWithAmount;
import com.hyperswitch.model.PaymentLinkConfigRequest;
import com.hyperswitch.model.PaymentMethodType;
import com.hyperswitch.model.PresenceOfCustomerDuringPayment;
import com.hyperswitch.model.RequestIncrementalAuthorization;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


import com.hyperswitch.client.ApiClient;
/**
 * PaymentsCreateIntentRequest
 */
@JsonPropertyOrder({
  PaymentsCreateIntentRequest.JSON_PROPERTY_AMOUNT_DETAILS,
  PaymentsCreateIntentRequest.JSON_PROPERTY_MERCHANT_REFERENCE_ID,
  PaymentsCreateIntentRequest.JSON_PROPERTY_ROUTING_ALGORITHM_ID,
  PaymentsCreateIntentRequest.JSON_PROPERTY_CAPTURE_METHOD,
  PaymentsCreateIntentRequest.JSON_PROPERTY_AUTHENTICATION_TYPE,
  PaymentsCreateIntentRequest.JSON_PROPERTY_BILLING,
  PaymentsCreateIntentRequest.JSON_PROPERTY_SHIPPING,
  PaymentsCreateIntentRequest.JSON_PROPERTY_CUSTOMER_ID,
  PaymentsCreateIntentRequest.JSON_PROPERTY_CUSTOMER_PRESENT,
  PaymentsCreateIntentRequest.JSON_PROPERTY_DESCRIPTION,
  PaymentsCreateIntentRequest.JSON_PROPERTY_RETURN_URL,
  PaymentsCreateIntentRequest.JSON_PROPERTY_SETUP_FUTURE_USAGE,
  PaymentsCreateIntentRequest.JSON_PROPERTY_APPLY_MIT_EXEMPTION,
  PaymentsCreateIntentRequest.JSON_PROPERTY_STATEMENT_DESCRIPTOR,
  PaymentsCreateIntentRequest.JSON_PROPERTY_ORDER_DETAILS,
  PaymentsCreateIntentRequest.JSON_PROPERTY_ALLOWED_PAYMENT_METHOD_TYPES,
  PaymentsCreateIntentRequest.JSON_PROPERTY_METADATA,
  PaymentsCreateIntentRequest.JSON_PROPERTY_CONNECTOR_METADATA,
  PaymentsCreateIntentRequest.JSON_PROPERTY_FEATURE_METADATA,
  PaymentsCreateIntentRequest.JSON_PROPERTY_PAYMENT_LINK_ENABLED,
  PaymentsCreateIntentRequest.JSON_PROPERTY_PAYMENT_LINK_CONFIG,
  PaymentsCreateIntentRequest.JSON_PROPERTY_REQUEST_INCREMENTAL_AUTHORIZATION,
  PaymentsCreateIntentRequest.JSON_PROPERTY_SESSION_EXPIRY,
  PaymentsCreateIntentRequest.JSON_PROPERTY_FRM_METADATA,
  PaymentsCreateIntentRequest.JSON_PROPERTY_REQUEST_EXTERNAL_THREE_DS_AUTHENTICATION
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.11.0-SNAPSHOT")
public class PaymentsCreateIntentRequest {
  public static final String JSON_PROPERTY_AMOUNT_DETAILS = "amount_details";
  @javax.annotation.Nonnull
  private AmountDetails amountDetails;

  public static final String JSON_PROPERTY_MERCHANT_REFERENCE_ID = "merchant_reference_id";
  private JsonNullable<String> merchantReferenceId = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ROUTING_ALGORITHM_ID = "routing_algorithm_id";
  private JsonNullable<String> routingAlgorithmId = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_CAPTURE_METHOD = "capture_method";
  private JsonNullable<CaptureMethod> captureMethod = JsonNullable.<CaptureMethod>undefined();

  public static final String JSON_PROPERTY_AUTHENTICATION_TYPE = "authentication_type";
  private JsonNullable<AuthenticationType> authenticationType = JsonNullable.<AuthenticationType>of(AuthenticationType.NO_THREE_DS);

  public static final String JSON_PROPERTY_BILLING = "billing";
  private JsonNullable<Address> billing = JsonNullable.<Address>undefined();

  public static final String JSON_PROPERTY_SHIPPING = "shipping";
  private JsonNullable<Address> shipping = JsonNullable.<Address>undefined();

  public static final String JSON_PROPERTY_CUSTOMER_ID = "customer_id";
  private JsonNullable<String> customerId = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_CUSTOMER_PRESENT = "customer_present";
  private JsonNullable<PresenceOfCustomerDuringPayment> customerPresent = JsonNullable.<PresenceOfCustomerDuringPayment>undefined();

  public static final String JSON_PROPERTY_DESCRIPTION = "description";
  private JsonNullable<String> description = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_RETURN_URL = "return_url";
  private JsonNullable<String> returnUrl = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_SETUP_FUTURE_USAGE = "setup_future_usage";
  private JsonNullable<FutureUsage> setupFutureUsage = JsonNullable.<FutureUsage>undefined();

  public static final String JSON_PROPERTY_APPLY_MIT_EXEMPTION = "apply_mit_exemption";
  private JsonNullable<MitExemptionRequest> applyMitExemption = JsonNullable.<MitExemptionRequest>undefined();

  public static final String JSON_PROPERTY_STATEMENT_DESCRIPTOR = "statement_descriptor";
  private JsonNullable<String> statementDescriptor = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ORDER_DETAILS = "order_details";
  private JsonNullable<List<OrderDetailsWithAmount>> orderDetails = JsonNullable.<List<OrderDetailsWithAmount>>undefined();

  public static final String JSON_PROPERTY_ALLOWED_PAYMENT_METHOD_TYPES = "allowed_payment_method_types";
  private JsonNullable<List<PaymentMethodType>> allowedPaymentMethodTypes = JsonNullable.<List<PaymentMethodType>>undefined();

  public static final String JSON_PROPERTY_METADATA = "metadata";
  private JsonNullable<Object> metadata = JsonNullable.<Object>undefined();

  public static final String JSON_PROPERTY_CONNECTOR_METADATA = "connector_metadata";
  private JsonNullable<ConnectorMetadata> connectorMetadata = JsonNullable.<ConnectorMetadata>undefined();

  public static final String JSON_PROPERTY_FEATURE_METADATA = "feature_metadata";
  private JsonNullable<FeatureMetadata> featureMetadata = JsonNullable.<FeatureMetadata>undefined();

  public static final String JSON_PROPERTY_PAYMENT_LINK_ENABLED = "payment_link_enabled";
  private JsonNullable<EnablePaymentLinkRequest> paymentLinkEnabled = JsonNullable.<EnablePaymentLinkRequest>undefined();

  public static final String JSON_PROPERTY_PAYMENT_LINK_CONFIG = "payment_link_config";
  private JsonNullable<PaymentLinkConfigRequest> paymentLinkConfig = JsonNullable.<PaymentLinkConfigRequest>undefined();

  public static final String JSON_PROPERTY_REQUEST_INCREMENTAL_AUTHORIZATION = "request_incremental_authorization";
  private JsonNullable<RequestIncrementalAuthorization> requestIncrementalAuthorization = JsonNullable.<RequestIncrementalAuthorization>undefined();

  public static final String JSON_PROPERTY_SESSION_EXPIRY = "session_expiry";
  private JsonNullable<Integer> sessionExpiry = JsonNullable.<Integer>undefined();

  public static final String JSON_PROPERTY_FRM_METADATA = "frm_metadata";
  private JsonNullable<Object> frmMetadata = JsonNullable.<Object>undefined();

  public static final String JSON_PROPERTY_REQUEST_EXTERNAL_THREE_DS_AUTHENTICATION = "request_external_three_ds_authentication";
  private JsonNullable<External3dsAuthenticationRequest> requestExternalThreeDsAuthentication = JsonNullable.<External3dsAuthenticationRequest>undefined();

  public PaymentsCreateIntentRequest() { 
  }

  public PaymentsCreateIntentRequest amountDetails(@javax.annotation.Nonnull AmountDetails amountDetails) {
    this.amountDetails = amountDetails;
    return this;
  }

  /**
   * Get amountDetails
   * @return amountDetails
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_AMOUNT_DETAILS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public AmountDetails getAmountDetails() {
    return amountDetails;
  }


  @JsonProperty(JSON_PROPERTY_AMOUNT_DETAILS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setAmountDetails(@javax.annotation.Nonnull AmountDetails amountDetails) {
    this.amountDetails = amountDetails;
  }


  public PaymentsCreateIntentRequest merchantReferenceId(@javax.annotation.Nullable String merchantReferenceId) {
    this.merchantReferenceId = JsonNullable.<String>of(merchantReferenceId);
    return this;
  }

  /**
   * Unique identifier for the payment. This ensures idempotency for multiple payments that have been done by a single merchant.
   * @return merchantReferenceId
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public String getMerchantReferenceId() {
        return merchantReferenceId.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_MERCHANT_REFERENCE_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getMerchantReferenceId_JsonNullable() {
    return merchantReferenceId;
  }
  
  @JsonProperty(JSON_PROPERTY_MERCHANT_REFERENCE_ID)
  public void setMerchantReferenceId_JsonNullable(JsonNullable<String> merchantReferenceId) {
    this.merchantReferenceId = merchantReferenceId;
  }

  public void setMerchantReferenceId(@javax.annotation.Nullable String merchantReferenceId) {
    this.merchantReferenceId = JsonNullable.<String>of(merchantReferenceId);
  }


  public PaymentsCreateIntentRequest routingAlgorithmId(@javax.annotation.Nullable String routingAlgorithmId) {
    this.routingAlgorithmId = JsonNullable.<String>of(routingAlgorithmId);
    return this;
  }

  /**
   * The routing algorithm id to be used for the payment
   * @return routingAlgorithmId
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public String getRoutingAlgorithmId() {
        return routingAlgorithmId.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ROUTING_ALGORITHM_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getRoutingAlgorithmId_JsonNullable() {
    return routingAlgorithmId;
  }
  
  @JsonProperty(JSON_PROPERTY_ROUTING_ALGORITHM_ID)
  public void setRoutingAlgorithmId_JsonNullable(JsonNullable<String> routingAlgorithmId) {
    this.routingAlgorithmId = routingAlgorithmId;
  }

  public void setRoutingAlgorithmId(@javax.annotation.Nullable String routingAlgorithmId) {
    this.routingAlgorithmId = JsonNullable.<String>of(routingAlgorithmId);
  }


  public PaymentsCreateIntentRequest captureMethod(@javax.annotation.Nullable CaptureMethod captureMethod) {
    this.captureMethod = JsonNullable.<CaptureMethod>of(captureMethod);
    return this;
  }

  /**
   * Get captureMethod
   * @return captureMethod
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public CaptureMethod getCaptureMethod() {
        return captureMethod.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_CAPTURE_METHOD)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<CaptureMethod> getCaptureMethod_JsonNullable() {
    return captureMethod;
  }
  
  @JsonProperty(JSON_PROPERTY_CAPTURE_METHOD)
  public void setCaptureMethod_JsonNullable(JsonNullable<CaptureMethod> captureMethod) {
    this.captureMethod = captureMethod;
  }

  public void setCaptureMethod(@javax.annotation.Nullable CaptureMethod captureMethod) {
    this.captureMethod = JsonNullable.<CaptureMethod>of(captureMethod);
  }


  public PaymentsCreateIntentRequest authenticationType(@javax.annotation.Nullable AuthenticationType authenticationType) {
    this.authenticationType = JsonNullable.<AuthenticationType>of(authenticationType);
    return this;
  }

  /**
   * Get authenticationType
   * @return authenticationType
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public AuthenticationType getAuthenticationType() {
        return authenticationType.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_AUTHENTICATION_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<AuthenticationType> getAuthenticationType_JsonNullable() {
    return authenticationType;
  }
  
  @JsonProperty(JSON_PROPERTY_AUTHENTICATION_TYPE)
  public void setAuthenticationType_JsonNullable(JsonNullable<AuthenticationType> authenticationType) {
    this.authenticationType = authenticationType;
  }

  public void setAuthenticationType(@javax.annotation.Nullable AuthenticationType authenticationType) {
    this.authenticationType = JsonNullable.<AuthenticationType>of(authenticationType);
  }


  public PaymentsCreateIntentRequest billing(@javax.annotation.Nullable Address billing) {
    this.billing = JsonNullable.<Address>of(billing);
    return this;
  }

  /**
   * Get billing
   * @return billing
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public Address getBilling() {
        return billing.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_BILLING)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Address> getBilling_JsonNullable() {
    return billing;
  }
  
  @JsonProperty(JSON_PROPERTY_BILLING)
  public void setBilling_JsonNullable(JsonNullable<Address> billing) {
    this.billing = billing;
  }

  public void setBilling(@javax.annotation.Nullable Address billing) {
    this.billing = JsonNullable.<Address>of(billing);
  }


  public PaymentsCreateIntentRequest shipping(@javax.annotation.Nullable Address shipping) {
    this.shipping = JsonNullable.<Address>of(shipping);
    return this;
  }

  /**
   * Get shipping
   * @return shipping
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public Address getShipping() {
        return shipping.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_SHIPPING)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Address> getShipping_JsonNullable() {
    return shipping;
  }
  
  @JsonProperty(JSON_PROPERTY_SHIPPING)
  public void setShipping_JsonNullable(JsonNullable<Address> shipping) {
    this.shipping = shipping;
  }

  public void setShipping(@javax.annotation.Nullable Address shipping) {
    this.shipping = JsonNullable.<Address>of(shipping);
  }


  public PaymentsCreateIntentRequest customerId(@javax.annotation.Nullable String customerId) {
    this.customerId = JsonNullable.<String>of(customerId);
    return this;
  }

  /**
   * The identifier for the customer
   * @return customerId
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public String getCustomerId() {
        return customerId.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_CUSTOMER_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getCustomerId_JsonNullable() {
    return customerId;
  }
  
  @JsonProperty(JSON_PROPERTY_CUSTOMER_ID)
  public void setCustomerId_JsonNullable(JsonNullable<String> customerId) {
    this.customerId = customerId;
  }

  public void setCustomerId(@javax.annotation.Nullable String customerId) {
    this.customerId = JsonNullable.<String>of(customerId);
  }


  public PaymentsCreateIntentRequest customerPresent(@javax.annotation.Nullable PresenceOfCustomerDuringPayment customerPresent) {
    this.customerPresent = JsonNullable.<PresenceOfCustomerDuringPayment>of(customerPresent);
    return this;
  }

  /**
   * Get customerPresent
   * @return customerPresent
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public PresenceOfCustomerDuringPayment getCustomerPresent() {
        return customerPresent.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_CUSTOMER_PRESENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<PresenceOfCustomerDuringPayment> getCustomerPresent_JsonNullable() {
    return customerPresent;
  }
  
  @JsonProperty(JSON_PROPERTY_CUSTOMER_PRESENT)
  public void setCustomerPresent_JsonNullable(JsonNullable<PresenceOfCustomerDuringPayment> customerPresent) {
    this.customerPresent = customerPresent;
  }

  public void setCustomerPresent(@javax.annotation.Nullable PresenceOfCustomerDuringPayment customerPresent) {
    this.customerPresent = JsonNullable.<PresenceOfCustomerDuringPayment>of(customerPresent);
  }


  public PaymentsCreateIntentRequest description(@javax.annotation.Nullable String description) {
    this.description = JsonNullable.<String>of(description);
    return this;
  }

  /**
   * A description for the payment
   * @return description
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public String getDescription() {
        return description.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getDescription_JsonNullable() {
    return description;
  }
  
  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  public void setDescription_JsonNullable(JsonNullable<String> description) {
    this.description = description;
  }

  public void setDescription(@javax.annotation.Nullable String description) {
    this.description = JsonNullable.<String>of(description);
  }


  public PaymentsCreateIntentRequest returnUrl(@javax.annotation.Nullable String returnUrl) {
    this.returnUrl = JsonNullable.<String>of(returnUrl);
    return this;
  }

  /**
   * The URL to which you want the user to be redirected after the completion of the payment operation
   * @return returnUrl
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public String getReturnUrl() {
        return returnUrl.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_RETURN_URL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getReturnUrl_JsonNullable() {
    return returnUrl;
  }
  
  @JsonProperty(JSON_PROPERTY_RETURN_URL)
  public void setReturnUrl_JsonNullable(JsonNullable<String> returnUrl) {
    this.returnUrl = returnUrl;
  }

  public void setReturnUrl(@javax.annotation.Nullable String returnUrl) {
    this.returnUrl = JsonNullable.<String>of(returnUrl);
  }


  public PaymentsCreateIntentRequest setupFutureUsage(@javax.annotation.Nullable FutureUsage setupFutureUsage) {
    this.setupFutureUsage = JsonNullable.<FutureUsage>of(setupFutureUsage);
    return this;
  }

  /**
   * Get setupFutureUsage
   * @return setupFutureUsage
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public FutureUsage getSetupFutureUsage() {
        return setupFutureUsage.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_SETUP_FUTURE_USAGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<FutureUsage> getSetupFutureUsage_JsonNullable() {
    return setupFutureUsage;
  }
  
  @JsonProperty(JSON_PROPERTY_SETUP_FUTURE_USAGE)
  public void setSetupFutureUsage_JsonNullable(JsonNullable<FutureUsage> setupFutureUsage) {
    this.setupFutureUsage = setupFutureUsage;
  }

  public void setSetupFutureUsage(@javax.annotation.Nullable FutureUsage setupFutureUsage) {
    this.setupFutureUsage = JsonNullable.<FutureUsage>of(setupFutureUsage);
  }


  public PaymentsCreateIntentRequest applyMitExemption(@javax.annotation.Nullable MitExemptionRequest applyMitExemption) {
    this.applyMitExemption = JsonNullable.<MitExemptionRequest>of(applyMitExemption);
    return this;
  }

  /**
   * Get applyMitExemption
   * @return applyMitExemption
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public MitExemptionRequest getApplyMitExemption() {
        return applyMitExemption.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_APPLY_MIT_EXEMPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<MitExemptionRequest> getApplyMitExemption_JsonNullable() {
    return applyMitExemption;
  }
  
  @JsonProperty(JSON_PROPERTY_APPLY_MIT_EXEMPTION)
  public void setApplyMitExemption_JsonNullable(JsonNullable<MitExemptionRequest> applyMitExemption) {
    this.applyMitExemption = applyMitExemption;
  }

  public void setApplyMitExemption(@javax.annotation.Nullable MitExemptionRequest applyMitExemption) {
    this.applyMitExemption = JsonNullable.<MitExemptionRequest>of(applyMitExemption);
  }


  public PaymentsCreateIntentRequest statementDescriptor(@javax.annotation.Nullable String statementDescriptor) {
    this.statementDescriptor = JsonNullable.<String>of(statementDescriptor);
    return this;
  }

  /**
   * For non-card charges, you can use this value as the complete description that appears on your customers’ statements. Must contain at least one letter, maximum 22 characters.
   * @return statementDescriptor
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public String getStatementDescriptor() {
        return statementDescriptor.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_STATEMENT_DESCRIPTOR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getStatementDescriptor_JsonNullable() {
    return statementDescriptor;
  }
  
  @JsonProperty(JSON_PROPERTY_STATEMENT_DESCRIPTOR)
  public void setStatementDescriptor_JsonNullable(JsonNullable<String> statementDescriptor) {
    this.statementDescriptor = statementDescriptor;
  }

  public void setStatementDescriptor(@javax.annotation.Nullable String statementDescriptor) {
    this.statementDescriptor = JsonNullable.<String>of(statementDescriptor);
  }


  public PaymentsCreateIntentRequest orderDetails(@javax.annotation.Nullable List<OrderDetailsWithAmount> orderDetails) {
    this.orderDetails = JsonNullable.<List<OrderDetailsWithAmount>>of(orderDetails);
    return this;
  }

  public PaymentsCreateIntentRequest addOrderDetailsItem(OrderDetailsWithAmount orderDetailsItem) {
    if (this.orderDetails == null || !this.orderDetails.isPresent()) {
      this.orderDetails = JsonNullable.<List<OrderDetailsWithAmount>>of(new ArrayList<>());
    }
    try {
      this.orderDetails.get().add(orderDetailsItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

  /**
   * Use this object to capture the details about the different products for which the payment is being made. The sum of amount across different products here should be equal to the overall payment amount
   * @return orderDetails
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public List<OrderDetailsWithAmount> getOrderDetails() {
        return orderDetails.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ORDER_DETAILS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<OrderDetailsWithAmount>> getOrderDetails_JsonNullable() {
    return orderDetails;
  }
  
  @JsonProperty(JSON_PROPERTY_ORDER_DETAILS)
  public void setOrderDetails_JsonNullable(JsonNullable<List<OrderDetailsWithAmount>> orderDetails) {
    this.orderDetails = orderDetails;
  }

  public void setOrderDetails(@javax.annotation.Nullable List<OrderDetailsWithAmount> orderDetails) {
    this.orderDetails = JsonNullable.<List<OrderDetailsWithAmount>>of(orderDetails);
  }


  public PaymentsCreateIntentRequest allowedPaymentMethodTypes(@javax.annotation.Nullable List<PaymentMethodType> allowedPaymentMethodTypes) {
    this.allowedPaymentMethodTypes = JsonNullable.<List<PaymentMethodType>>of(allowedPaymentMethodTypes);
    return this;
  }

  public PaymentsCreateIntentRequest addAllowedPaymentMethodTypesItem(PaymentMethodType allowedPaymentMethodTypesItem) {
    if (this.allowedPaymentMethodTypes == null || !this.allowedPaymentMethodTypes.isPresent()) {
      this.allowedPaymentMethodTypes = JsonNullable.<List<PaymentMethodType>>of(new ArrayList<>());
    }
    try {
      this.allowedPaymentMethodTypes.get().add(allowedPaymentMethodTypesItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

  /**
   * Use this parameter to restrict the Payment Method Types to show for a given PaymentIntent
   * @return allowedPaymentMethodTypes
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public List<PaymentMethodType> getAllowedPaymentMethodTypes() {
        return allowedPaymentMethodTypes.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ALLOWED_PAYMENT_METHOD_TYPES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<PaymentMethodType>> getAllowedPaymentMethodTypes_JsonNullable() {
    return allowedPaymentMethodTypes;
  }
  
  @JsonProperty(JSON_PROPERTY_ALLOWED_PAYMENT_METHOD_TYPES)
  public void setAllowedPaymentMethodTypes_JsonNullable(JsonNullable<List<PaymentMethodType>> allowedPaymentMethodTypes) {
    this.allowedPaymentMethodTypes = allowedPaymentMethodTypes;
  }

  public void setAllowedPaymentMethodTypes(@javax.annotation.Nullable List<PaymentMethodType> allowedPaymentMethodTypes) {
    this.allowedPaymentMethodTypes = JsonNullable.<List<PaymentMethodType>>of(allowedPaymentMethodTypes);
  }


  public PaymentsCreateIntentRequest metadata(@javax.annotation.Nullable Object metadata) {
    this.metadata = JsonNullable.<Object>of(metadata);
    return this;
  }

  /**
   * Metadata is useful for storing additional, unstructured information on an object.
   * @return metadata
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public Object getMetadata() {
        return metadata.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_METADATA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Object> getMetadata_JsonNullable() {
    return metadata;
  }
  
  @JsonProperty(JSON_PROPERTY_METADATA)
  public void setMetadata_JsonNullable(JsonNullable<Object> metadata) {
    this.metadata = metadata;
  }

  public void setMetadata(@javax.annotation.Nullable Object metadata) {
    this.metadata = JsonNullable.<Object>of(metadata);
  }


  public PaymentsCreateIntentRequest connectorMetadata(@javax.annotation.Nullable ConnectorMetadata connectorMetadata) {
    this.connectorMetadata = JsonNullable.<ConnectorMetadata>of(connectorMetadata);
    return this;
  }

  /**
   * Get connectorMetadata
   * @return connectorMetadata
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public ConnectorMetadata getConnectorMetadata() {
        return connectorMetadata.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_CONNECTOR_METADATA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<ConnectorMetadata> getConnectorMetadata_JsonNullable() {
    return connectorMetadata;
  }
  
  @JsonProperty(JSON_PROPERTY_CONNECTOR_METADATA)
  public void setConnectorMetadata_JsonNullable(JsonNullable<ConnectorMetadata> connectorMetadata) {
    this.connectorMetadata = connectorMetadata;
  }

  public void setConnectorMetadata(@javax.annotation.Nullable ConnectorMetadata connectorMetadata) {
    this.connectorMetadata = JsonNullable.<ConnectorMetadata>of(connectorMetadata);
  }


  public PaymentsCreateIntentRequest featureMetadata(@javax.annotation.Nullable FeatureMetadata featureMetadata) {
    this.featureMetadata = JsonNullable.<FeatureMetadata>of(featureMetadata);
    return this;
  }

  /**
   * Get featureMetadata
   * @return featureMetadata
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public FeatureMetadata getFeatureMetadata() {
        return featureMetadata.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_FEATURE_METADATA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<FeatureMetadata> getFeatureMetadata_JsonNullable() {
    return featureMetadata;
  }
  
  @JsonProperty(JSON_PROPERTY_FEATURE_METADATA)
  public void setFeatureMetadata_JsonNullable(JsonNullable<FeatureMetadata> featureMetadata) {
    this.featureMetadata = featureMetadata;
  }

  public void setFeatureMetadata(@javax.annotation.Nullable FeatureMetadata featureMetadata) {
    this.featureMetadata = JsonNullable.<FeatureMetadata>of(featureMetadata);
  }


  public PaymentsCreateIntentRequest paymentLinkEnabled(@javax.annotation.Nullable EnablePaymentLinkRequest paymentLinkEnabled) {
    this.paymentLinkEnabled = JsonNullable.<EnablePaymentLinkRequest>of(paymentLinkEnabled);
    return this;
  }

  /**
   * Get paymentLinkEnabled
   * @return paymentLinkEnabled
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public EnablePaymentLinkRequest getPaymentLinkEnabled() {
        return paymentLinkEnabled.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PAYMENT_LINK_ENABLED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<EnablePaymentLinkRequest> getPaymentLinkEnabled_JsonNullable() {
    return paymentLinkEnabled;
  }
  
  @JsonProperty(JSON_PROPERTY_PAYMENT_LINK_ENABLED)
  public void setPaymentLinkEnabled_JsonNullable(JsonNullable<EnablePaymentLinkRequest> paymentLinkEnabled) {
    this.paymentLinkEnabled = paymentLinkEnabled;
  }

  public void setPaymentLinkEnabled(@javax.annotation.Nullable EnablePaymentLinkRequest paymentLinkEnabled) {
    this.paymentLinkEnabled = JsonNullable.<EnablePaymentLinkRequest>of(paymentLinkEnabled);
  }


  public PaymentsCreateIntentRequest paymentLinkConfig(@javax.annotation.Nullable PaymentLinkConfigRequest paymentLinkConfig) {
    this.paymentLinkConfig = JsonNullable.<PaymentLinkConfigRequest>of(paymentLinkConfig);
    return this;
  }

  /**
   * Get paymentLinkConfig
   * @return paymentLinkConfig
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public PaymentLinkConfigRequest getPaymentLinkConfig() {
        return paymentLinkConfig.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PAYMENT_LINK_CONFIG)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<PaymentLinkConfigRequest> getPaymentLinkConfig_JsonNullable() {
    return paymentLinkConfig;
  }
  
  @JsonProperty(JSON_PROPERTY_PAYMENT_LINK_CONFIG)
  public void setPaymentLinkConfig_JsonNullable(JsonNullable<PaymentLinkConfigRequest> paymentLinkConfig) {
    this.paymentLinkConfig = paymentLinkConfig;
  }

  public void setPaymentLinkConfig(@javax.annotation.Nullable PaymentLinkConfigRequest paymentLinkConfig) {
    this.paymentLinkConfig = JsonNullable.<PaymentLinkConfigRequest>of(paymentLinkConfig);
  }


  public PaymentsCreateIntentRequest requestIncrementalAuthorization(@javax.annotation.Nullable RequestIncrementalAuthorization requestIncrementalAuthorization) {
    this.requestIncrementalAuthorization = JsonNullable.<RequestIncrementalAuthorization>of(requestIncrementalAuthorization);
    return this;
  }

  /**
   * Get requestIncrementalAuthorization
   * @return requestIncrementalAuthorization
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public RequestIncrementalAuthorization getRequestIncrementalAuthorization() {
        return requestIncrementalAuthorization.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_REQUEST_INCREMENTAL_AUTHORIZATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<RequestIncrementalAuthorization> getRequestIncrementalAuthorization_JsonNullable() {
    return requestIncrementalAuthorization;
  }
  
  @JsonProperty(JSON_PROPERTY_REQUEST_INCREMENTAL_AUTHORIZATION)
  public void setRequestIncrementalAuthorization_JsonNullable(JsonNullable<RequestIncrementalAuthorization> requestIncrementalAuthorization) {
    this.requestIncrementalAuthorization = requestIncrementalAuthorization;
  }

  public void setRequestIncrementalAuthorization(@javax.annotation.Nullable RequestIncrementalAuthorization requestIncrementalAuthorization) {
    this.requestIncrementalAuthorization = JsonNullable.<RequestIncrementalAuthorization>of(requestIncrementalAuthorization);
  }


  public PaymentsCreateIntentRequest sessionExpiry(@javax.annotation.Nullable Integer sessionExpiry) {
    this.sessionExpiry = JsonNullable.<Integer>of(sessionExpiry);
    return this;
  }

  /**
   * Will be used to expire client secret after certain amount of time to be supplied in seconds, if not sent it will be taken from profile config (900) for 15 mins
   * minimum: 0
   * @return sessionExpiry
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public Integer getSessionExpiry() {
        return sessionExpiry.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_SESSION_EXPIRY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Integer> getSessionExpiry_JsonNullable() {
    return sessionExpiry;
  }
  
  @JsonProperty(JSON_PROPERTY_SESSION_EXPIRY)
  public void setSessionExpiry_JsonNullable(JsonNullable<Integer> sessionExpiry) {
    this.sessionExpiry = sessionExpiry;
  }

  public void setSessionExpiry(@javax.annotation.Nullable Integer sessionExpiry) {
    this.sessionExpiry = JsonNullable.<Integer>of(sessionExpiry);
  }


  public PaymentsCreateIntentRequest frmMetadata(@javax.annotation.Nullable Object frmMetadata) {
    this.frmMetadata = JsonNullable.<Object>of(frmMetadata);
    return this;
  }

  /**
   * Additional data related to some frm(Fraud Risk Management) connectors
   * @return frmMetadata
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public Object getFrmMetadata() {
        return frmMetadata.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_FRM_METADATA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Object> getFrmMetadata_JsonNullable() {
    return frmMetadata;
  }
  
  @JsonProperty(JSON_PROPERTY_FRM_METADATA)
  public void setFrmMetadata_JsonNullable(JsonNullable<Object> frmMetadata) {
    this.frmMetadata = frmMetadata;
  }

  public void setFrmMetadata(@javax.annotation.Nullable Object frmMetadata) {
    this.frmMetadata = JsonNullable.<Object>of(frmMetadata);
  }


  public PaymentsCreateIntentRequest requestExternalThreeDsAuthentication(@javax.annotation.Nullable External3dsAuthenticationRequest requestExternalThreeDsAuthentication) {
    this.requestExternalThreeDsAuthentication = JsonNullable.<External3dsAuthenticationRequest>of(requestExternalThreeDsAuthentication);
    return this;
  }

  /**
   * Get requestExternalThreeDsAuthentication
   * @return requestExternalThreeDsAuthentication
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public External3dsAuthenticationRequest getRequestExternalThreeDsAuthentication() {
        return requestExternalThreeDsAuthentication.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_REQUEST_EXTERNAL_THREE_DS_AUTHENTICATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<External3dsAuthenticationRequest> getRequestExternalThreeDsAuthentication_JsonNullable() {
    return requestExternalThreeDsAuthentication;
  }
  
  @JsonProperty(JSON_PROPERTY_REQUEST_EXTERNAL_THREE_DS_AUTHENTICATION)
  public void setRequestExternalThreeDsAuthentication_JsonNullable(JsonNullable<External3dsAuthenticationRequest> requestExternalThreeDsAuthentication) {
    this.requestExternalThreeDsAuthentication = requestExternalThreeDsAuthentication;
  }

  public void setRequestExternalThreeDsAuthentication(@javax.annotation.Nullable External3dsAuthenticationRequest requestExternalThreeDsAuthentication) {
    this.requestExternalThreeDsAuthentication = JsonNullable.<External3dsAuthenticationRequest>of(requestExternalThreeDsAuthentication);
  }


  /**
   * Return true if this PaymentsCreateIntentRequest object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PaymentsCreateIntentRequest paymentsCreateIntentRequest = (PaymentsCreateIntentRequest) o;
    return Objects.equals(this.amountDetails, paymentsCreateIntentRequest.amountDetails) &&
        equalsNullable(this.merchantReferenceId, paymentsCreateIntentRequest.merchantReferenceId) &&
        equalsNullable(this.routingAlgorithmId, paymentsCreateIntentRequest.routingAlgorithmId) &&
        equalsNullable(this.captureMethod, paymentsCreateIntentRequest.captureMethod) &&
        equalsNullable(this.authenticationType, paymentsCreateIntentRequest.authenticationType) &&
        equalsNullable(this.billing, paymentsCreateIntentRequest.billing) &&
        equalsNullable(this.shipping, paymentsCreateIntentRequest.shipping) &&
        equalsNullable(this.customerId, paymentsCreateIntentRequest.customerId) &&
        equalsNullable(this.customerPresent, paymentsCreateIntentRequest.customerPresent) &&
        equalsNullable(this.description, paymentsCreateIntentRequest.description) &&
        equalsNullable(this.returnUrl, paymentsCreateIntentRequest.returnUrl) &&
        equalsNullable(this.setupFutureUsage, paymentsCreateIntentRequest.setupFutureUsage) &&
        equalsNullable(this.applyMitExemption, paymentsCreateIntentRequest.applyMitExemption) &&
        equalsNullable(this.statementDescriptor, paymentsCreateIntentRequest.statementDescriptor) &&
        equalsNullable(this.orderDetails, paymentsCreateIntentRequest.orderDetails) &&
        equalsNullable(this.allowedPaymentMethodTypes, paymentsCreateIntentRequest.allowedPaymentMethodTypes) &&
        equalsNullable(this.metadata, paymentsCreateIntentRequest.metadata) &&
        equalsNullable(this.connectorMetadata, paymentsCreateIntentRequest.connectorMetadata) &&
        equalsNullable(this.featureMetadata, paymentsCreateIntentRequest.featureMetadata) &&
        equalsNullable(this.paymentLinkEnabled, paymentsCreateIntentRequest.paymentLinkEnabled) &&
        equalsNullable(this.paymentLinkConfig, paymentsCreateIntentRequest.paymentLinkConfig) &&
        equalsNullable(this.requestIncrementalAuthorization, paymentsCreateIntentRequest.requestIncrementalAuthorization) &&
        equalsNullable(this.sessionExpiry, paymentsCreateIntentRequest.sessionExpiry) &&
        equalsNullable(this.frmMetadata, paymentsCreateIntentRequest.frmMetadata) &&
        equalsNullable(this.requestExternalThreeDsAuthentication, paymentsCreateIntentRequest.requestExternalThreeDsAuthentication);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(amountDetails, hashCodeNullable(merchantReferenceId), hashCodeNullable(routingAlgorithmId), hashCodeNullable(captureMethod), hashCodeNullable(authenticationType), hashCodeNullable(billing), hashCodeNullable(shipping), hashCodeNullable(customerId), hashCodeNullable(customerPresent), hashCodeNullable(description), hashCodeNullable(returnUrl), hashCodeNullable(setupFutureUsage), hashCodeNullable(applyMitExemption), hashCodeNullable(statementDescriptor), hashCodeNullable(orderDetails), hashCodeNullable(allowedPaymentMethodTypes), hashCodeNullable(metadata), hashCodeNullable(connectorMetadata), hashCodeNullable(featureMetadata), hashCodeNullable(paymentLinkEnabled), hashCodeNullable(paymentLinkConfig), hashCodeNullable(requestIncrementalAuthorization), hashCodeNullable(sessionExpiry), hashCodeNullable(frmMetadata), hashCodeNullable(requestExternalThreeDsAuthentication));
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PaymentsCreateIntentRequest {\n");
    sb.append("    amountDetails: ").append(toIndentedString(amountDetails)).append("\n");
    sb.append("    merchantReferenceId: ").append(toIndentedString(merchantReferenceId)).append("\n");
    sb.append("    routingAlgorithmId: ").append(toIndentedString(routingAlgorithmId)).append("\n");
    sb.append("    captureMethod: ").append(toIndentedString(captureMethod)).append("\n");
    sb.append("    authenticationType: ").append(toIndentedString(authenticationType)).append("\n");
    sb.append("    billing: ").append(toIndentedString(billing)).append("\n");
    sb.append("    shipping: ").append(toIndentedString(shipping)).append("\n");
    sb.append("    customerId: ").append(toIndentedString(customerId)).append("\n");
    sb.append("    customerPresent: ").append(toIndentedString(customerPresent)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    returnUrl: ").append(toIndentedString(returnUrl)).append("\n");
    sb.append("    setupFutureUsage: ").append(toIndentedString(setupFutureUsage)).append("\n");
    sb.append("    applyMitExemption: ").append(toIndentedString(applyMitExemption)).append("\n");
    sb.append("    statementDescriptor: ").append(toIndentedString(statementDescriptor)).append("\n");
    sb.append("    orderDetails: ").append(toIndentedString(orderDetails)).append("\n");
    sb.append("    allowedPaymentMethodTypes: ").append(toIndentedString(allowedPaymentMethodTypes)).append("\n");
    sb.append("    metadata: ").append(toIndentedString(metadata)).append("\n");
    sb.append("    connectorMetadata: ").append(toIndentedString(connectorMetadata)).append("\n");
    sb.append("    featureMetadata: ").append(toIndentedString(featureMetadata)).append("\n");
    sb.append("    paymentLinkEnabled: ").append(toIndentedString(paymentLinkEnabled)).append("\n");
    sb.append("    paymentLinkConfig: ").append(toIndentedString(paymentLinkConfig)).append("\n");
    sb.append("    requestIncrementalAuthorization: ").append(toIndentedString(requestIncrementalAuthorization)).append("\n");
    sb.append("    sessionExpiry: ").append(toIndentedString(sessionExpiry)).append("\n");
    sb.append("    frmMetadata: ").append(toIndentedString(frmMetadata)).append("\n");
    sb.append("    requestExternalThreeDsAuthentication: ").append(toIndentedString(requestExternalThreeDsAuthentication)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  /**
   * Convert the instance into URL query string.
   *
   * @return URL query string
   */
  public String toUrlQueryString() {
    return toUrlQueryString(null);
  }

  /**
   * Convert the instance into URL query string.
   *
   * @param prefix prefix of the query string
   * @return URL query string
   */
  public String toUrlQueryString(String prefix) {
    String suffix = "";
    String containerSuffix = "";
    String containerPrefix = "";
    if (prefix == null) {
      // style=form, explode=true, e.g. /pet?name=cat&type=manx
      prefix = "";
    } else {
      // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
      prefix = prefix + "[";
      suffix = "]";
      containerSuffix = "]";
      containerPrefix = "[";
    }

    StringJoiner joiner = new StringJoiner("&");

    // add `amount_details` to the URL query string
    if (getAmountDetails() != null) {
      joiner.add(getAmountDetails().toUrlQueryString(prefix + "amount_details" + suffix));
    }

    // add `merchant_reference_id` to the URL query string
    if (getMerchantReferenceId() != null) {
      joiner.add(String.format("%smerchant_reference_id%s=%s", prefix, suffix, URLEncoder.encode(ApiClient.valueToString(getMerchantReferenceId()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `routing_algorithm_id` to the URL query string
    if (getRoutingAlgorithmId() != null) {
      joiner.add(String.format("%srouting_algorithm_id%s=%s", prefix, suffix, URLEncoder.encode(ApiClient.valueToString(getRoutingAlgorithmId()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `capture_method` to the URL query string
    if (getCaptureMethod() != null) {
      joiner.add(String.format("%scapture_method%s=%s", prefix, suffix, URLEncoder.encode(ApiClient.valueToString(getCaptureMethod()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `authentication_type` to the URL query string
    if (getAuthenticationType() != null) {
      joiner.add(String.format("%sauthentication_type%s=%s", prefix, suffix, URLEncoder.encode(ApiClient.valueToString(getAuthenticationType()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `billing` to the URL query string
    if (getBilling() != null) {
      joiner.add(getBilling().toUrlQueryString(prefix + "billing" + suffix));
    }

    // add `shipping` to the URL query string
    if (getShipping() != null) {
      joiner.add(getShipping().toUrlQueryString(prefix + "shipping" + suffix));
    }

    // add `customer_id` to the URL query string
    if (getCustomerId() != null) {
      joiner.add(String.format("%scustomer_id%s=%s", prefix, suffix, URLEncoder.encode(ApiClient.valueToString(getCustomerId()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `customer_present` to the URL query string
    if (getCustomerPresent() != null) {
      joiner.add(String.format("%scustomer_present%s=%s", prefix, suffix, URLEncoder.encode(ApiClient.valueToString(getCustomerPresent()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `description` to the URL query string
    if (getDescription() != null) {
      joiner.add(String.format("%sdescription%s=%s", prefix, suffix, URLEncoder.encode(ApiClient.valueToString(getDescription()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `return_url` to the URL query string
    if (getReturnUrl() != null) {
      joiner.add(String.format("%sreturn_url%s=%s", prefix, suffix, URLEncoder.encode(ApiClient.valueToString(getReturnUrl()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `setup_future_usage` to the URL query string
    if (getSetupFutureUsage() != null) {
      joiner.add(String.format("%ssetup_future_usage%s=%s", prefix, suffix, URLEncoder.encode(ApiClient.valueToString(getSetupFutureUsage()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `apply_mit_exemption` to the URL query string
    if (getApplyMitExemption() != null) {
      joiner.add(String.format("%sapply_mit_exemption%s=%s", prefix, suffix, URLEncoder.encode(ApiClient.valueToString(getApplyMitExemption()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `statement_descriptor` to the URL query string
    if (getStatementDescriptor() != null) {
      joiner.add(String.format("%sstatement_descriptor%s=%s", prefix, suffix, URLEncoder.encode(ApiClient.valueToString(getStatementDescriptor()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `order_details` to the URL query string
    if (getOrderDetails() != null) {
      for (int i = 0; i < getOrderDetails().size(); i++) {
        if (getOrderDetails().get(i) != null) {
          joiner.add(getOrderDetails().get(i).toUrlQueryString(String.format("%sorder_details%s%s", prefix, suffix,
          "".equals(suffix) ? "" : String.format("%s%d%s", containerPrefix, i, containerSuffix))));
        }
      }
    }

    // add `allowed_payment_method_types` to the URL query string
    if (getAllowedPaymentMethodTypes() != null) {
      for (int i = 0; i < getAllowedPaymentMethodTypes().size(); i++) {
        if (getAllowedPaymentMethodTypes().get(i) != null) {
          joiner.add(String.format("%sallowed_payment_method_types%s%s=%s", prefix, suffix,
              "".equals(suffix) ? "" : String.format("%s%d%s", containerPrefix, i, containerSuffix),
              URLEncoder.encode(ApiClient.valueToString(getAllowedPaymentMethodTypes().get(i)), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
        }
      }
    }

    // add `metadata` to the URL query string
    if (getMetadata() != null) {
      joiner.add(String.format("%smetadata%s=%s", prefix, suffix, URLEncoder.encode(ApiClient.valueToString(getMetadata()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `connector_metadata` to the URL query string
    if (getConnectorMetadata() != null) {
      joiner.add(getConnectorMetadata().toUrlQueryString(prefix + "connector_metadata" + suffix));
    }

    // add `feature_metadata` to the URL query string
    if (getFeatureMetadata() != null) {
      joiner.add(getFeatureMetadata().toUrlQueryString(prefix + "feature_metadata" + suffix));
    }

    // add `payment_link_enabled` to the URL query string
    if (getPaymentLinkEnabled() != null) {
      joiner.add(String.format("%spayment_link_enabled%s=%s", prefix, suffix, URLEncoder.encode(ApiClient.valueToString(getPaymentLinkEnabled()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `payment_link_config` to the URL query string
    if (getPaymentLinkConfig() != null) {
      joiner.add(getPaymentLinkConfig().toUrlQueryString(prefix + "payment_link_config" + suffix));
    }

    // add `request_incremental_authorization` to the URL query string
    if (getRequestIncrementalAuthorization() != null) {
      joiner.add(String.format("%srequest_incremental_authorization%s=%s", prefix, suffix, URLEncoder.encode(ApiClient.valueToString(getRequestIncrementalAuthorization()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `session_expiry` to the URL query string
    if (getSessionExpiry() != null) {
      joiner.add(String.format("%ssession_expiry%s=%s", prefix, suffix, URLEncoder.encode(ApiClient.valueToString(getSessionExpiry()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `frm_metadata` to the URL query string
    if (getFrmMetadata() != null) {
      joiner.add(String.format("%sfrm_metadata%s=%s", prefix, suffix, URLEncoder.encode(ApiClient.valueToString(getFrmMetadata()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `request_external_three_ds_authentication` to the URL query string
    if (getRequestExternalThreeDsAuthentication() != null) {
      joiner.add(String.format("%srequest_external_three_ds_authentication%s=%s", prefix, suffix, URLEncoder.encode(ApiClient.valueToString(getRequestExternalThreeDsAuthentication()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    return joiner.toString();
  }
}

