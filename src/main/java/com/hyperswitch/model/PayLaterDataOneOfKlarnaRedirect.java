/*
 * Hyperswitch - API Documentation
 *  ## Get started  Hyperswitch provides a collection of APIs that enable you to process and manage payments. Our APIs accept and return JSON in the HTTP body, and return standard HTTP response codes.  You can consume the APIs directly using your favorite HTTP/REST library.  We have a testing environment referred to \"sandbox\", which you can setup to test API calls without affecting production data. Currently, our sandbox environment is live while our production environment is under development and will be available soon. You can sign up on our Dashboard to get API keys to access Hyperswitch API.  ### Environment  Use the following base URLs when making requests to the APIs:  | Environment   |  Base URL                          | |---------------|------------------------------------| | Sandbox       | <https://sandbox.hyperswitch.io>   | | Production    | <https://api.hyperswitch.io>       |  ## Authentication  When you sign up on our [dashboard](https://app.hyperswitch.io) and create a merchant account, you are given a secret key (also referred as api-key) and a publishable key. You may authenticate all API requests with Hyperswitch server by providing the appropriate key in the request Authorization header.  | Key             |  Description                                                                                  | |-----------------|-----------------------------------------------------------------------------------------------| | api-key         | Private key. Used to authenticate all API requests from your merchant server                  | | publishable key | Unique identifier for your account. Used to authenticate API requests from your app's client  |  Never share your secret api keys. Keep them guarded and secure. 
 *
 * The version of the OpenAPI document: 0.1.0
 * Contact: hyperswitch@juspay.in
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.hyperswitch.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.hyperswitch.model.CountryAlpha2;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * For KlarnaRedirect as PayLater Option
 */
@ApiModel(description = "For KlarnaRedirect as PayLater Option")
@JsonPropertyOrder({
  PayLaterDataOneOfKlarnaRedirect.JSON_PROPERTY_BILLING_EMAIL,
  PayLaterDataOneOfKlarnaRedirect.JSON_PROPERTY_BILLING_COUNTRY
})
@JsonTypeName("PayLaterData_oneOf_klarna_redirect")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class PayLaterDataOneOfKlarnaRedirect {
  public static final String JSON_PROPERTY_BILLING_EMAIL = "billing_email";
  private JsonNullable<String> billingEmail = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_BILLING_COUNTRY = "billing_country";
  private JsonNullable<CountryAlpha2> billingCountry = JsonNullable.<CountryAlpha2>undefined();

  public PayLaterDataOneOfKlarnaRedirect() { 
  }

  public PayLaterDataOneOfKlarnaRedirect billingEmail(String billingEmail) {
    this.billingEmail = JsonNullable.<String>of(billingEmail);
    
    return this;
  }

   /**
   * The billing email
   * @return billingEmail
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The billing email")
  @JsonIgnore

  public String getBillingEmail() {
        return billingEmail.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_BILLING_EMAIL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getBillingEmail_JsonNullable() {
    return billingEmail;
  }
  
  @JsonProperty(JSON_PROPERTY_BILLING_EMAIL)
  public void setBillingEmail_JsonNullable(JsonNullable<String> billingEmail) {
    this.billingEmail = billingEmail;
  }

  public void setBillingEmail(String billingEmail) {
    this.billingEmail = JsonNullable.<String>of(billingEmail);
  }


  public PayLaterDataOneOfKlarnaRedirect billingCountry(CountryAlpha2 billingCountry) {
    this.billingCountry = JsonNullable.<CountryAlpha2>of(billingCountry);
    
    return this;
  }

   /**
   * Get billingCountry
   * @return billingCountry
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public CountryAlpha2 getBillingCountry() {
        return billingCountry.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_BILLING_COUNTRY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<CountryAlpha2> getBillingCountry_JsonNullable() {
    return billingCountry;
  }
  
  @JsonProperty(JSON_PROPERTY_BILLING_COUNTRY)
  public void setBillingCountry_JsonNullable(JsonNullable<CountryAlpha2> billingCountry) {
    this.billingCountry = billingCountry;
  }

  public void setBillingCountry(CountryAlpha2 billingCountry) {
    this.billingCountry = JsonNullable.<CountryAlpha2>of(billingCountry);
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PayLaterDataOneOfKlarnaRedirect payLaterDataOneOfKlarnaRedirect = (PayLaterDataOneOfKlarnaRedirect) o;
    return equalsNullable(this.billingEmail, payLaterDataOneOfKlarnaRedirect.billingEmail) &&
        equalsNullable(this.billingCountry, payLaterDataOneOfKlarnaRedirect.billingCountry);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(hashCodeNullable(billingEmail), hashCodeNullable(billingCountry));
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PayLaterDataOneOfKlarnaRedirect {\n");
    sb.append("    billingEmail: ").append(toIndentedString(billingEmail)).append("\n");
    sb.append("    billingCountry: ").append(toIndentedString(billingCountry)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

