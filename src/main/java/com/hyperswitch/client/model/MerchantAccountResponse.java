/*
 * Hyperswitch - API Documentation
 *  ## Get started  Hyperswitch provides a collection of APIs that enable you to process and manage payments. Our APIs accept and return JSON in the HTTP body, and return standard HTTP response codes.  You can consume the APIs directly using your favorite HTTP/REST library.  We have a testing environment referred to \"sandbox\", which you can setup to test API calls without affecting production data. Currently, our sandbox environment is live while our production environment is under development and will be available soon. You can sign up on our Dashboard to get API keys to access Hyperswitch API.  ### Environment  Use the following base URLs when making requests to the APIs:  | Environment   |  Base URL                          | |---------------|------------------------------------| | Sandbox       | <https://sandbox.hyperswitch.io>   | | Production    | <https://api.hyperswitch.io>       |  ## Authentication  When you sign up on our [dashboard](https://app.hyperswitch.io) and create a merchant account, you are given a secret key (also referred as api-key) and a publishable key. You may authenticate all API requests with Hyperswitch server by providing the appropriate key in the request Authorization header.  | Key             |  Description                                                                                  | |-----------------|-----------------------------------------------------------------------------------------------| | api-key         | Private key. Used to authenticate all API requests from your merchant server                  | | publishable key | Unique identifier for your account. Used to authenticate API requests from your app's client  |  Never share your secret api keys. Keep them guarded and secure. 
 *
 * The version of the OpenAPI document: 0.1.0
 * Contact: hyperswitch@juspay.in
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.hyperswitch.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.hyperswitch.client.model.BusinessCollectLinkConfig;
import com.hyperswitch.client.model.MerchantDetails;
import com.hyperswitch.client.model.PrimaryBusinessDetails;
import com.hyperswitch.client.model.ReconStatus;
import com.hyperswitch.client.model.RoutingAlgorithm;
import com.hyperswitch.client.model.WebhookDetails;
import java.util.ArrayList;
import java.util.List;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;
import java.io.UnsupportedEncodingException;
import java.net.URLEncoder;
import java.util.StringJoiner;

/**
 * MerchantAccountResponse
 */
@JsonPropertyOrder({
  MerchantAccountResponse.JSON_PROPERTY_MERCHANT_ID,
  MerchantAccountResponse.JSON_PROPERTY_MERCHANT_NAME,
  MerchantAccountResponse.JSON_PROPERTY_RETURN_URL,
  MerchantAccountResponse.JSON_PROPERTY_ENABLE_PAYMENT_RESPONSE_HASH,
  MerchantAccountResponse.JSON_PROPERTY_PAYMENT_RESPONSE_HASH_KEY,
  MerchantAccountResponse.JSON_PROPERTY_REDIRECT_TO_MERCHANT_WITH_HTTP_POST,
  MerchantAccountResponse.JSON_PROPERTY_MERCHANT_DETAILS,
  MerchantAccountResponse.JSON_PROPERTY_WEBHOOK_DETAILS,
  MerchantAccountResponse.JSON_PROPERTY_PAYOUT_ROUTING_ALGORITHM,
  MerchantAccountResponse.JSON_PROPERTY_SUB_MERCHANTS_ENABLED,
  MerchantAccountResponse.JSON_PROPERTY_PARENT_MERCHANT_ID,
  MerchantAccountResponse.JSON_PROPERTY_PUBLISHABLE_KEY,
  MerchantAccountResponse.JSON_PROPERTY_METADATA,
  MerchantAccountResponse.JSON_PROPERTY_LOCKER_ID,
  MerchantAccountResponse.JSON_PROPERTY_PRIMARY_BUSINESS_DETAILS,
  MerchantAccountResponse.JSON_PROPERTY_FRM_ROUTING_ALGORITHM,
  MerchantAccountResponse.JSON_PROPERTY_ORGANIZATION_ID,
  MerchantAccountResponse.JSON_PROPERTY_IS_RECON_ENABLED,
  MerchantAccountResponse.JSON_PROPERTY_DEFAULT_PROFILE,
  MerchantAccountResponse.JSON_PROPERTY_RECON_STATUS,
  MerchantAccountResponse.JSON_PROPERTY_PM_COLLECT_LINK_CONFIG
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class MerchantAccountResponse {
  public static final String JSON_PROPERTY_MERCHANT_ID = "merchant_id";
  private String merchantId;

  public static final String JSON_PROPERTY_MERCHANT_NAME = "merchant_name";
  private JsonNullable<String> merchantName = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_RETURN_URL = "return_url";
  private JsonNullable<String> returnUrl = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ENABLE_PAYMENT_RESPONSE_HASH = "enable_payment_response_hash";
  private Boolean enablePaymentResponseHash = false;

  public static final String JSON_PROPERTY_PAYMENT_RESPONSE_HASH_KEY = "payment_response_hash_key";
  private JsonNullable<String> paymentResponseHashKey = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_REDIRECT_TO_MERCHANT_WITH_HTTP_POST = "redirect_to_merchant_with_http_post";
  private Boolean redirectToMerchantWithHttpPost = false;

  public static final String JSON_PROPERTY_MERCHANT_DETAILS = "merchant_details";
  private JsonNullable<MerchantDetails> merchantDetails = JsonNullable.<MerchantDetails>undefined();

  public static final String JSON_PROPERTY_WEBHOOK_DETAILS = "webhook_details";
  private JsonNullable<WebhookDetails> webhookDetails = JsonNullable.<WebhookDetails>undefined();

  public static final String JSON_PROPERTY_PAYOUT_ROUTING_ALGORITHM = "payout_routing_algorithm";
  private JsonNullable<RoutingAlgorithm> payoutRoutingAlgorithm = JsonNullable.<RoutingAlgorithm>undefined();

  public static final String JSON_PROPERTY_SUB_MERCHANTS_ENABLED = "sub_merchants_enabled";
  private JsonNullable<Boolean> subMerchantsEnabled = JsonNullable.<Boolean>of(false);

  public static final String JSON_PROPERTY_PARENT_MERCHANT_ID = "parent_merchant_id";
  private JsonNullable<String> parentMerchantId = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_PUBLISHABLE_KEY = "publishable_key";
  private JsonNullable<String> publishableKey = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_METADATA = "metadata";
  private JsonNullable<Object> metadata = JsonNullable.<Object>undefined();

  public static final String JSON_PROPERTY_LOCKER_ID = "locker_id";
  private JsonNullable<String> lockerId = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_PRIMARY_BUSINESS_DETAILS = "primary_business_details";
  private List<PrimaryBusinessDetails> primaryBusinessDetails = new ArrayList<>();

  public static final String JSON_PROPERTY_FRM_ROUTING_ALGORITHM = "frm_routing_algorithm";
  private JsonNullable<RoutingAlgorithm> frmRoutingAlgorithm = JsonNullable.<RoutingAlgorithm>undefined();

  public static final String JSON_PROPERTY_ORGANIZATION_ID = "organization_id";
  private String organizationId;

  public static final String JSON_PROPERTY_IS_RECON_ENABLED = "is_recon_enabled";
  private Boolean isReconEnabled;

  public static final String JSON_PROPERTY_DEFAULT_PROFILE = "default_profile";
  private JsonNullable<String> defaultProfile = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_RECON_STATUS = "recon_status";
  private ReconStatus reconStatus;

  public static final String JSON_PROPERTY_PM_COLLECT_LINK_CONFIG = "pm_collect_link_config";
  private JsonNullable<BusinessCollectLinkConfig> pmCollectLinkConfig = JsonNullable.<BusinessCollectLinkConfig>undefined();

  public MerchantAccountResponse() {
  }

  public MerchantAccountResponse merchantId(String merchantId) {
    
    this.merchantId = merchantId;
    return this;
  }

   /**
   * The identifier for the Merchant Account
   * @return merchantId
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_MERCHANT_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getMerchantId() {
    return merchantId;
  }


  @JsonProperty(JSON_PROPERTY_MERCHANT_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setMerchantId(String merchantId) {
    this.merchantId = merchantId;
  }


  public MerchantAccountResponse merchantName(String merchantName) {
    this.merchantName = JsonNullable.<String>of(merchantName);
    
    return this;
  }

   /**
   * Name of the Merchant Account
   * @return merchantName
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public String getMerchantName() {
        return merchantName.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_MERCHANT_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getMerchantName_JsonNullable() {
    return merchantName;
  }
  
  @JsonProperty(JSON_PROPERTY_MERCHANT_NAME)
  public void setMerchantName_JsonNullable(JsonNullable<String> merchantName) {
    this.merchantName = merchantName;
  }

  public void setMerchantName(String merchantName) {
    this.merchantName = JsonNullable.<String>of(merchantName);
  }


  public MerchantAccountResponse returnUrl(String returnUrl) {
    this.returnUrl = JsonNullable.<String>of(returnUrl);
    
    return this;
  }

   /**
   * The URL to redirect after completion of the payment
   * @return returnUrl
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public String getReturnUrl() {
        return returnUrl.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_RETURN_URL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getReturnUrl_JsonNullable() {
    return returnUrl;
  }
  
  @JsonProperty(JSON_PROPERTY_RETURN_URL)
  public void setReturnUrl_JsonNullable(JsonNullable<String> returnUrl) {
    this.returnUrl = returnUrl;
  }

  public void setReturnUrl(String returnUrl) {
    this.returnUrl = JsonNullable.<String>of(returnUrl);
  }


  public MerchantAccountResponse enablePaymentResponseHash(Boolean enablePaymentResponseHash) {
    
    this.enablePaymentResponseHash = enablePaymentResponseHash;
    return this;
  }

   /**
   * A boolean value to indicate if payment response hash needs to be enabled
   * @return enablePaymentResponseHash
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_ENABLE_PAYMENT_RESPONSE_HASH)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Boolean getEnablePaymentResponseHash() {
    return enablePaymentResponseHash;
  }


  @JsonProperty(JSON_PROPERTY_ENABLE_PAYMENT_RESPONSE_HASH)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setEnablePaymentResponseHash(Boolean enablePaymentResponseHash) {
    this.enablePaymentResponseHash = enablePaymentResponseHash;
  }


  public MerchantAccountResponse paymentResponseHashKey(String paymentResponseHashKey) {
    this.paymentResponseHashKey = JsonNullable.<String>of(paymentResponseHashKey);
    
    return this;
  }

   /**
   * Refers to the hash key used for calculating the signature for webhooks and redirect response. If the value is not provided, a value is automatically generated.
   * @return paymentResponseHashKey
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public String getPaymentResponseHashKey() {
        return paymentResponseHashKey.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PAYMENT_RESPONSE_HASH_KEY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getPaymentResponseHashKey_JsonNullable() {
    return paymentResponseHashKey;
  }
  
  @JsonProperty(JSON_PROPERTY_PAYMENT_RESPONSE_HASH_KEY)
  public void setPaymentResponseHashKey_JsonNullable(JsonNullable<String> paymentResponseHashKey) {
    this.paymentResponseHashKey = paymentResponseHashKey;
  }

  public void setPaymentResponseHashKey(String paymentResponseHashKey) {
    this.paymentResponseHashKey = JsonNullable.<String>of(paymentResponseHashKey);
  }


  public MerchantAccountResponse redirectToMerchantWithHttpPost(Boolean redirectToMerchantWithHttpPost) {
    
    this.redirectToMerchantWithHttpPost = redirectToMerchantWithHttpPost;
    return this;
  }

   /**
   * A boolean value to indicate if redirect to merchant with http post needs to be enabled
   * @return redirectToMerchantWithHttpPost
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_REDIRECT_TO_MERCHANT_WITH_HTTP_POST)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Boolean getRedirectToMerchantWithHttpPost() {
    return redirectToMerchantWithHttpPost;
  }


  @JsonProperty(JSON_PROPERTY_REDIRECT_TO_MERCHANT_WITH_HTTP_POST)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setRedirectToMerchantWithHttpPost(Boolean redirectToMerchantWithHttpPost) {
    this.redirectToMerchantWithHttpPost = redirectToMerchantWithHttpPost;
  }


  public MerchantAccountResponse merchantDetails(MerchantDetails merchantDetails) {
    this.merchantDetails = JsonNullable.<MerchantDetails>of(merchantDetails);
    
    return this;
  }

   /**
   * Get merchantDetails
   * @return merchantDetails
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public MerchantDetails getMerchantDetails() {
        return merchantDetails.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_MERCHANT_DETAILS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<MerchantDetails> getMerchantDetails_JsonNullable() {
    return merchantDetails;
  }
  
  @JsonProperty(JSON_PROPERTY_MERCHANT_DETAILS)
  public void setMerchantDetails_JsonNullable(JsonNullable<MerchantDetails> merchantDetails) {
    this.merchantDetails = merchantDetails;
  }

  public void setMerchantDetails(MerchantDetails merchantDetails) {
    this.merchantDetails = JsonNullable.<MerchantDetails>of(merchantDetails);
  }


  public MerchantAccountResponse webhookDetails(WebhookDetails webhookDetails) {
    this.webhookDetails = JsonNullable.<WebhookDetails>of(webhookDetails);
    
    return this;
  }

   /**
   * Get webhookDetails
   * @return webhookDetails
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public WebhookDetails getWebhookDetails() {
        return webhookDetails.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_WEBHOOK_DETAILS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<WebhookDetails> getWebhookDetails_JsonNullable() {
    return webhookDetails;
  }
  
  @JsonProperty(JSON_PROPERTY_WEBHOOK_DETAILS)
  public void setWebhookDetails_JsonNullable(JsonNullable<WebhookDetails> webhookDetails) {
    this.webhookDetails = webhookDetails;
  }

  public void setWebhookDetails(WebhookDetails webhookDetails) {
    this.webhookDetails = JsonNullable.<WebhookDetails>of(webhookDetails);
  }


  public MerchantAccountResponse payoutRoutingAlgorithm(RoutingAlgorithm payoutRoutingAlgorithm) {
    this.payoutRoutingAlgorithm = JsonNullable.<RoutingAlgorithm>of(payoutRoutingAlgorithm);
    
    return this;
  }

   /**
   * Get payoutRoutingAlgorithm
   * @return payoutRoutingAlgorithm
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public RoutingAlgorithm getPayoutRoutingAlgorithm() {
        return payoutRoutingAlgorithm.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PAYOUT_ROUTING_ALGORITHM)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<RoutingAlgorithm> getPayoutRoutingAlgorithm_JsonNullable() {
    return payoutRoutingAlgorithm;
  }
  
  @JsonProperty(JSON_PROPERTY_PAYOUT_ROUTING_ALGORITHM)
  public void setPayoutRoutingAlgorithm_JsonNullable(JsonNullable<RoutingAlgorithm> payoutRoutingAlgorithm) {
    this.payoutRoutingAlgorithm = payoutRoutingAlgorithm;
  }

  public void setPayoutRoutingAlgorithm(RoutingAlgorithm payoutRoutingAlgorithm) {
    this.payoutRoutingAlgorithm = JsonNullable.<RoutingAlgorithm>of(payoutRoutingAlgorithm);
  }


  public MerchantAccountResponse subMerchantsEnabled(Boolean subMerchantsEnabled) {
    this.subMerchantsEnabled = JsonNullable.<Boolean>of(subMerchantsEnabled);
    
    return this;
  }

   /**
   * A boolean value to indicate if the merchant is a sub-merchant under a master or a parent merchant. By default, its value is false.
   * @return subMerchantsEnabled
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public Boolean getSubMerchantsEnabled() {
        return subMerchantsEnabled.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_SUB_MERCHANTS_ENABLED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Boolean> getSubMerchantsEnabled_JsonNullable() {
    return subMerchantsEnabled;
  }
  
  @JsonProperty(JSON_PROPERTY_SUB_MERCHANTS_ENABLED)
  public void setSubMerchantsEnabled_JsonNullable(JsonNullable<Boolean> subMerchantsEnabled) {
    this.subMerchantsEnabled = subMerchantsEnabled;
  }

  public void setSubMerchantsEnabled(Boolean subMerchantsEnabled) {
    this.subMerchantsEnabled = JsonNullable.<Boolean>of(subMerchantsEnabled);
  }


  public MerchantAccountResponse parentMerchantId(String parentMerchantId) {
    this.parentMerchantId = JsonNullable.<String>of(parentMerchantId);
    
    return this;
  }

   /**
   * Refers to the Parent Merchant ID if the merchant being created is a sub-merchant
   * @return parentMerchantId
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public String getParentMerchantId() {
        return parentMerchantId.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PARENT_MERCHANT_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getParentMerchantId_JsonNullable() {
    return parentMerchantId;
  }
  
  @JsonProperty(JSON_PROPERTY_PARENT_MERCHANT_ID)
  public void setParentMerchantId_JsonNullable(JsonNullable<String> parentMerchantId) {
    this.parentMerchantId = parentMerchantId;
  }

  public void setParentMerchantId(String parentMerchantId) {
    this.parentMerchantId = JsonNullable.<String>of(parentMerchantId);
  }


  public MerchantAccountResponse publishableKey(String publishableKey) {
    this.publishableKey = JsonNullable.<String>of(publishableKey);
    
    return this;
  }

   /**
   * API key that will be used for server side API access
   * @return publishableKey
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public String getPublishableKey() {
        return publishableKey.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PUBLISHABLE_KEY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getPublishableKey_JsonNullable() {
    return publishableKey;
  }
  
  @JsonProperty(JSON_PROPERTY_PUBLISHABLE_KEY)
  public void setPublishableKey_JsonNullable(JsonNullable<String> publishableKey) {
    this.publishableKey = publishableKey;
  }

  public void setPublishableKey(String publishableKey) {
    this.publishableKey = JsonNullable.<String>of(publishableKey);
  }


  public MerchantAccountResponse metadata(Object metadata) {
    this.metadata = JsonNullable.<Object>of(metadata);
    
    return this;
  }

   /**
   * Metadata is useful for storing additional, unstructured information on an object.
   * @return metadata
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public Object getMetadata() {
        return metadata.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_METADATA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Object> getMetadata_JsonNullable() {
    return metadata;
  }
  
  @JsonProperty(JSON_PROPERTY_METADATA)
  public void setMetadata_JsonNullable(JsonNullable<Object> metadata) {
    this.metadata = metadata;
  }

  public void setMetadata(Object metadata) {
    this.metadata = JsonNullable.<Object>of(metadata);
  }


  public MerchantAccountResponse lockerId(String lockerId) {
    this.lockerId = JsonNullable.<String>of(lockerId);
    
    return this;
  }

   /**
   * An identifier for the vault used to store payment method information.
   * @return lockerId
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public String getLockerId() {
        return lockerId.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LOCKER_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getLockerId_JsonNullable() {
    return lockerId;
  }
  
  @JsonProperty(JSON_PROPERTY_LOCKER_ID)
  public void setLockerId_JsonNullable(JsonNullable<String> lockerId) {
    this.lockerId = lockerId;
  }

  public void setLockerId(String lockerId) {
    this.lockerId = JsonNullable.<String>of(lockerId);
  }


  public MerchantAccountResponse primaryBusinessDetails(List<PrimaryBusinessDetails> primaryBusinessDetails) {
    
    this.primaryBusinessDetails = primaryBusinessDetails;
    return this;
  }

  public MerchantAccountResponse addPrimaryBusinessDetailsItem(PrimaryBusinessDetails primaryBusinessDetailsItem) {
    if (this.primaryBusinessDetails == null) {
      this.primaryBusinessDetails = new ArrayList<>();
    }
    this.primaryBusinessDetails.add(primaryBusinessDetailsItem);
    return this;
  }

   /**
   * Details about the primary business unit of the merchant account
   * @return primaryBusinessDetails
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_PRIMARY_BUSINESS_DETAILS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public List<PrimaryBusinessDetails> getPrimaryBusinessDetails() {
    return primaryBusinessDetails;
  }


  @JsonProperty(JSON_PROPERTY_PRIMARY_BUSINESS_DETAILS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setPrimaryBusinessDetails(List<PrimaryBusinessDetails> primaryBusinessDetails) {
    this.primaryBusinessDetails = primaryBusinessDetails;
  }


  public MerchantAccountResponse frmRoutingAlgorithm(RoutingAlgorithm frmRoutingAlgorithm) {
    this.frmRoutingAlgorithm = JsonNullable.<RoutingAlgorithm>of(frmRoutingAlgorithm);
    
    return this;
  }

   /**
   * Get frmRoutingAlgorithm
   * @return frmRoutingAlgorithm
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public RoutingAlgorithm getFrmRoutingAlgorithm() {
        return frmRoutingAlgorithm.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_FRM_ROUTING_ALGORITHM)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<RoutingAlgorithm> getFrmRoutingAlgorithm_JsonNullable() {
    return frmRoutingAlgorithm;
  }
  
  @JsonProperty(JSON_PROPERTY_FRM_ROUTING_ALGORITHM)
  public void setFrmRoutingAlgorithm_JsonNullable(JsonNullable<RoutingAlgorithm> frmRoutingAlgorithm) {
    this.frmRoutingAlgorithm = frmRoutingAlgorithm;
  }

  public void setFrmRoutingAlgorithm(RoutingAlgorithm frmRoutingAlgorithm) {
    this.frmRoutingAlgorithm = JsonNullable.<RoutingAlgorithm>of(frmRoutingAlgorithm);
  }


  public MerchantAccountResponse organizationId(String organizationId) {
    
    this.organizationId = organizationId;
    return this;
  }

   /**
   * The organization id merchant is associated with
   * @return organizationId
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_ORGANIZATION_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getOrganizationId() {
    return organizationId;
  }


  @JsonProperty(JSON_PROPERTY_ORGANIZATION_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setOrganizationId(String organizationId) {
    this.organizationId = organizationId;
  }


  public MerchantAccountResponse isReconEnabled(Boolean isReconEnabled) {
    
    this.isReconEnabled = isReconEnabled;
    return this;
  }

   /**
   * A boolean value to indicate if the merchant has recon service is enabled or not, by default value is false
   * @return isReconEnabled
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_IS_RECON_ENABLED)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Boolean getIsReconEnabled() {
    return isReconEnabled;
  }


  @JsonProperty(JSON_PROPERTY_IS_RECON_ENABLED)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setIsReconEnabled(Boolean isReconEnabled) {
    this.isReconEnabled = isReconEnabled;
  }


  public MerchantAccountResponse defaultProfile(String defaultProfile) {
    this.defaultProfile = JsonNullable.<String>of(defaultProfile);
    
    return this;
  }

   /**
   * The default profile that must be used for creating merchant accounts and payments
   * @return defaultProfile
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public String getDefaultProfile() {
        return defaultProfile.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_DEFAULT_PROFILE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getDefaultProfile_JsonNullable() {
    return defaultProfile;
  }
  
  @JsonProperty(JSON_PROPERTY_DEFAULT_PROFILE)
  public void setDefaultProfile_JsonNullable(JsonNullable<String> defaultProfile) {
    this.defaultProfile = defaultProfile;
  }

  public void setDefaultProfile(String defaultProfile) {
    this.defaultProfile = JsonNullable.<String>of(defaultProfile);
  }


  public MerchantAccountResponse reconStatus(ReconStatus reconStatus) {
    
    this.reconStatus = reconStatus;
    return this;
  }

   /**
   * Get reconStatus
   * @return reconStatus
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_RECON_STATUS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public ReconStatus getReconStatus() {
    return reconStatus;
  }


  @JsonProperty(JSON_PROPERTY_RECON_STATUS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setReconStatus(ReconStatus reconStatus) {
    this.reconStatus = reconStatus;
  }


  public MerchantAccountResponse pmCollectLinkConfig(BusinessCollectLinkConfig pmCollectLinkConfig) {
    this.pmCollectLinkConfig = JsonNullable.<BusinessCollectLinkConfig>of(pmCollectLinkConfig);
    
    return this;
  }

   /**
   * Get pmCollectLinkConfig
   * @return pmCollectLinkConfig
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public BusinessCollectLinkConfig getPmCollectLinkConfig() {
        return pmCollectLinkConfig.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PM_COLLECT_LINK_CONFIG)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<BusinessCollectLinkConfig> getPmCollectLinkConfig_JsonNullable() {
    return pmCollectLinkConfig;
  }
  
  @JsonProperty(JSON_PROPERTY_PM_COLLECT_LINK_CONFIG)
  public void setPmCollectLinkConfig_JsonNullable(JsonNullable<BusinessCollectLinkConfig> pmCollectLinkConfig) {
    this.pmCollectLinkConfig = pmCollectLinkConfig;
  }

  public void setPmCollectLinkConfig(BusinessCollectLinkConfig pmCollectLinkConfig) {
    this.pmCollectLinkConfig = JsonNullable.<BusinessCollectLinkConfig>of(pmCollectLinkConfig);
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    MerchantAccountResponse merchantAccountResponse = (MerchantAccountResponse) o;
    return Objects.equals(this.merchantId, merchantAccountResponse.merchantId) &&
        equalsNullable(this.merchantName, merchantAccountResponse.merchantName) &&
        equalsNullable(this.returnUrl, merchantAccountResponse.returnUrl) &&
        Objects.equals(this.enablePaymentResponseHash, merchantAccountResponse.enablePaymentResponseHash) &&
        equalsNullable(this.paymentResponseHashKey, merchantAccountResponse.paymentResponseHashKey) &&
        Objects.equals(this.redirectToMerchantWithHttpPost, merchantAccountResponse.redirectToMerchantWithHttpPost) &&
        equalsNullable(this.merchantDetails, merchantAccountResponse.merchantDetails) &&
        equalsNullable(this.webhookDetails, merchantAccountResponse.webhookDetails) &&
        equalsNullable(this.payoutRoutingAlgorithm, merchantAccountResponse.payoutRoutingAlgorithm) &&
        equalsNullable(this.subMerchantsEnabled, merchantAccountResponse.subMerchantsEnabled) &&
        equalsNullable(this.parentMerchantId, merchantAccountResponse.parentMerchantId) &&
        equalsNullable(this.publishableKey, merchantAccountResponse.publishableKey) &&
        equalsNullable(this.metadata, merchantAccountResponse.metadata) &&
        equalsNullable(this.lockerId, merchantAccountResponse.lockerId) &&
        Objects.equals(this.primaryBusinessDetails, merchantAccountResponse.primaryBusinessDetails) &&
        equalsNullable(this.frmRoutingAlgorithm, merchantAccountResponse.frmRoutingAlgorithm) &&
        Objects.equals(this.organizationId, merchantAccountResponse.organizationId) &&
        Objects.equals(this.isReconEnabled, merchantAccountResponse.isReconEnabled) &&
        equalsNullable(this.defaultProfile, merchantAccountResponse.defaultProfile) &&
        Objects.equals(this.reconStatus, merchantAccountResponse.reconStatus) &&
        equalsNullable(this.pmCollectLinkConfig, merchantAccountResponse.pmCollectLinkConfig);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(merchantId, hashCodeNullable(merchantName), hashCodeNullable(returnUrl), enablePaymentResponseHash, hashCodeNullable(paymentResponseHashKey), redirectToMerchantWithHttpPost, hashCodeNullable(merchantDetails), hashCodeNullable(webhookDetails), hashCodeNullable(payoutRoutingAlgorithm), hashCodeNullable(subMerchantsEnabled), hashCodeNullable(parentMerchantId), hashCodeNullable(publishableKey), hashCodeNullable(metadata), hashCodeNullable(lockerId), primaryBusinessDetails, hashCodeNullable(frmRoutingAlgorithm), organizationId, isReconEnabled, hashCodeNullable(defaultProfile), reconStatus, hashCodeNullable(pmCollectLinkConfig));
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class MerchantAccountResponse {\n");
    sb.append("    merchantId: ").append(toIndentedString(merchantId)).append("\n");
    sb.append("    merchantName: ").append(toIndentedString(merchantName)).append("\n");
    sb.append("    returnUrl: ").append(toIndentedString(returnUrl)).append("\n");
    sb.append("    enablePaymentResponseHash: ").append(toIndentedString(enablePaymentResponseHash)).append("\n");
    sb.append("    paymentResponseHashKey: ").append(toIndentedString(paymentResponseHashKey)).append("\n");
    sb.append("    redirectToMerchantWithHttpPost: ").append(toIndentedString(redirectToMerchantWithHttpPost)).append("\n");
    sb.append("    merchantDetails: ").append(toIndentedString(merchantDetails)).append("\n");
    sb.append("    webhookDetails: ").append(toIndentedString(webhookDetails)).append("\n");
    sb.append("    payoutRoutingAlgorithm: ").append(toIndentedString(payoutRoutingAlgorithm)).append("\n");
    sb.append("    subMerchantsEnabled: ").append(toIndentedString(subMerchantsEnabled)).append("\n");
    sb.append("    parentMerchantId: ").append(toIndentedString(parentMerchantId)).append("\n");
    sb.append("    publishableKey: ").append(toIndentedString(publishableKey)).append("\n");
    sb.append("    metadata: ").append(toIndentedString(metadata)).append("\n");
    sb.append("    lockerId: ").append(toIndentedString(lockerId)).append("\n");
    sb.append("    primaryBusinessDetails: ").append(toIndentedString(primaryBusinessDetails)).append("\n");
    sb.append("    frmRoutingAlgorithm: ").append(toIndentedString(frmRoutingAlgorithm)).append("\n");
    sb.append("    organizationId: ").append(toIndentedString(organizationId)).append("\n");
    sb.append("    isReconEnabled: ").append(toIndentedString(isReconEnabled)).append("\n");
    sb.append("    defaultProfile: ").append(toIndentedString(defaultProfile)).append("\n");
    sb.append("    reconStatus: ").append(toIndentedString(reconStatus)).append("\n");
    sb.append("    pmCollectLinkConfig: ").append(toIndentedString(pmCollectLinkConfig)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  /**
   * Convert the instance into URL query string.
   *
   * @return URL query string
   */
  public String toUrlQueryString() {
    return toUrlQueryString(null);
  }

  /**
   * Convert the instance into URL query string.
   *
   * @param prefix prefix of the query string
   * @return URL query string
   */
  public String toUrlQueryString(String prefix) {
    String suffix = "";
    String containerSuffix = "";
    String containerPrefix = "";
    if (prefix == null) {
      // style=form, explode=true, e.g. /pet?name=cat&type=manx
      prefix = "";
    } else {
      // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
      prefix = prefix + "[";
      suffix = "]";
      containerSuffix = "]";
      containerPrefix = "[";
    }

    StringJoiner joiner = new StringJoiner("&");

    // add `merchant_id` to the URL query string
    if (getMerchantId() != null) {
      try {
        joiner.add(String.format("%smerchant_id%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getMerchantId()), "UTF-8").replaceAll("\\+", "%20")));
      } catch (UnsupportedEncodingException e) {
        // Should never happen, UTF-8 is always supported
        throw new RuntimeException(e);
      }
    }

    // add `merchant_name` to the URL query string
    if (getMerchantName() != null) {
      try {
        joiner.add(String.format("%smerchant_name%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getMerchantName()), "UTF-8").replaceAll("\\+", "%20")));
      } catch (UnsupportedEncodingException e) {
        // Should never happen, UTF-8 is always supported
        throw new RuntimeException(e);
      }
    }

    // add `return_url` to the URL query string
    if (getReturnUrl() != null) {
      try {
        joiner.add(String.format("%sreturn_url%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getReturnUrl()), "UTF-8").replaceAll("\\+", "%20")));
      } catch (UnsupportedEncodingException e) {
        // Should never happen, UTF-8 is always supported
        throw new RuntimeException(e);
      }
    }

    // add `enable_payment_response_hash` to the URL query string
    if (getEnablePaymentResponseHash() != null) {
      try {
        joiner.add(String.format("%senable_payment_response_hash%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getEnablePaymentResponseHash()), "UTF-8").replaceAll("\\+", "%20")));
      } catch (UnsupportedEncodingException e) {
        // Should never happen, UTF-8 is always supported
        throw new RuntimeException(e);
      }
    }

    // add `payment_response_hash_key` to the URL query string
    if (getPaymentResponseHashKey() != null) {
      try {
        joiner.add(String.format("%spayment_response_hash_key%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getPaymentResponseHashKey()), "UTF-8").replaceAll("\\+", "%20")));
      } catch (UnsupportedEncodingException e) {
        // Should never happen, UTF-8 is always supported
        throw new RuntimeException(e);
      }
    }

    // add `redirect_to_merchant_with_http_post` to the URL query string
    if (getRedirectToMerchantWithHttpPost() != null) {
      try {
        joiner.add(String.format("%sredirect_to_merchant_with_http_post%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getRedirectToMerchantWithHttpPost()), "UTF-8").replaceAll("\\+", "%20")));
      } catch (UnsupportedEncodingException e) {
        // Should never happen, UTF-8 is always supported
        throw new RuntimeException(e);
      }
    }

    // add `merchant_details` to the URL query string
    if (getMerchantDetails() != null) {
      joiner.add(getMerchantDetails().toUrlQueryString(prefix + "merchant_details" + suffix));
    }

    // add `webhook_details` to the URL query string
    if (getWebhookDetails() != null) {
      joiner.add(getWebhookDetails().toUrlQueryString(prefix + "webhook_details" + suffix));
    }

    // add `payout_routing_algorithm` to the URL query string
    if (getPayoutRoutingAlgorithm() != null) {
      joiner.add(getPayoutRoutingAlgorithm().toUrlQueryString(prefix + "payout_routing_algorithm" + suffix));
    }

    // add `sub_merchants_enabled` to the URL query string
    if (getSubMerchantsEnabled() != null) {
      try {
        joiner.add(String.format("%ssub_merchants_enabled%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getSubMerchantsEnabled()), "UTF-8").replaceAll("\\+", "%20")));
      } catch (UnsupportedEncodingException e) {
        // Should never happen, UTF-8 is always supported
        throw new RuntimeException(e);
      }
    }

    // add `parent_merchant_id` to the URL query string
    if (getParentMerchantId() != null) {
      try {
        joiner.add(String.format("%sparent_merchant_id%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getParentMerchantId()), "UTF-8").replaceAll("\\+", "%20")));
      } catch (UnsupportedEncodingException e) {
        // Should never happen, UTF-8 is always supported
        throw new RuntimeException(e);
      }
    }

    // add `publishable_key` to the URL query string
    if (getPublishableKey() != null) {
      try {
        joiner.add(String.format("%spublishable_key%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getPublishableKey()), "UTF-8").replaceAll("\\+", "%20")));
      } catch (UnsupportedEncodingException e) {
        // Should never happen, UTF-8 is always supported
        throw new RuntimeException(e);
      }
    }

    // add `metadata` to the URL query string
    if (getMetadata() != null) {
      try {
        joiner.add(String.format("%smetadata%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getMetadata()), "UTF-8").replaceAll("\\+", "%20")));
      } catch (UnsupportedEncodingException e) {
        // Should never happen, UTF-8 is always supported
        throw new RuntimeException(e);
      }
    }

    // add `locker_id` to the URL query string
    if (getLockerId() != null) {
      try {
        joiner.add(String.format("%slocker_id%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getLockerId()), "UTF-8").replaceAll("\\+", "%20")));
      } catch (UnsupportedEncodingException e) {
        // Should never happen, UTF-8 is always supported
        throw new RuntimeException(e);
      }
    }

    // add `primary_business_details` to the URL query string
    if (getPrimaryBusinessDetails() != null) {
      for (int i = 0; i < getPrimaryBusinessDetails().size(); i++) {
        if (getPrimaryBusinessDetails().get(i) != null) {
          joiner.add(getPrimaryBusinessDetails().get(i).toUrlQueryString(String.format("%sprimary_business_details%s%s", prefix, suffix,
              "".equals(suffix) ? "" : String.format("%s%d%s", containerPrefix, i, containerSuffix))));
        }
      }
    }

    // add `frm_routing_algorithm` to the URL query string
    if (getFrmRoutingAlgorithm() != null) {
      joiner.add(getFrmRoutingAlgorithm().toUrlQueryString(prefix + "frm_routing_algorithm" + suffix));
    }

    // add `organization_id` to the URL query string
    if (getOrganizationId() != null) {
      try {
        joiner.add(String.format("%sorganization_id%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getOrganizationId()), "UTF-8").replaceAll("\\+", "%20")));
      } catch (UnsupportedEncodingException e) {
        // Should never happen, UTF-8 is always supported
        throw new RuntimeException(e);
      }
    }

    // add `is_recon_enabled` to the URL query string
    if (getIsReconEnabled() != null) {
      try {
        joiner.add(String.format("%sis_recon_enabled%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getIsReconEnabled()), "UTF-8").replaceAll("\\+", "%20")));
      } catch (UnsupportedEncodingException e) {
        // Should never happen, UTF-8 is always supported
        throw new RuntimeException(e);
      }
    }

    // add `default_profile` to the URL query string
    if (getDefaultProfile() != null) {
      try {
        joiner.add(String.format("%sdefault_profile%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getDefaultProfile()), "UTF-8").replaceAll("\\+", "%20")));
      } catch (UnsupportedEncodingException e) {
        // Should never happen, UTF-8 is always supported
        throw new RuntimeException(e);
      }
    }

    // add `recon_status` to the URL query string
    if (getReconStatus() != null) {
      try {
        joiner.add(String.format("%srecon_status%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getReconStatus()), "UTF-8").replaceAll("\\+", "%20")));
      } catch (UnsupportedEncodingException e) {
        // Should never happen, UTF-8 is always supported
        throw new RuntimeException(e);
      }
    }

    // add `pm_collect_link_config` to the URL query string
    if (getPmCollectLinkConfig() != null) {
      joiner.add(getPmCollectLinkConfig().toUrlQueryString(prefix + "pm_collect_link_config" + suffix));
    }

    return joiner.toString();
  }

}

