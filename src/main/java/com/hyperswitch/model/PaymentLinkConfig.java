/*
 * Hyperswitch - API Documentation
 *  ## Get started  Hyperswitch provides a collection of APIs that enable you to process and manage payments. Our APIs accept and return JSON in the HTTP body, and return standard HTTP response codes.  You can consume the APIs directly using your favorite HTTP/REST library.  We have a testing environment referred to \"sandbox\", which you can setup to test API calls without affecting production data. Currently, our sandbox environment is live while our production environment is under development and will be available soon. You can sign up on our Dashboard to get API keys to access Hyperswitch API.  ### Environment  Use the following base URLs when making requests to the APIs:  | Environment   |  Base URL                          | |---------------|------------------------------------| | Sandbox       | <https://sandbox.hyperswitch.io>   | | Production    | <https://api.hyperswitch.io>       |  ## Authentication  When you sign up on our [dashboard](https://app.hyperswitch.io) and create a merchant account, you are given a secret key (also referred as api-key) and a publishable key. You may authenticate all API requests with Hyperswitch server by providing the appropriate key in the request Authorization header.  | Key             |  Description                                                                                  | |-----------------|-----------------------------------------------------------------------------------------------| | api-key         | Private key. Used to authenticate all API requests from your merchant server                  | | publishable key | Unique identifier for your account. Used to authenticate API requests from your app's client  |  Never share your secret api keys. Keep them guarded and secure. 
 *
 * The version of the OpenAPI document: 0.1.0
 * Contact: hyperswitch@juspay.in
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.hyperswitch.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.hyperswitch.model.PaymentLinkTransactionDetails;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.LinkedHashSet;
import java.util.List;
import java.util.Set;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * PaymentLinkConfig
 */
@JsonPropertyOrder({
  PaymentLinkConfig.JSON_PROPERTY_THEME,
  PaymentLinkConfig.JSON_PROPERTY_LOGO,
  PaymentLinkConfig.JSON_PROPERTY_SELLER_NAME,
  PaymentLinkConfig.JSON_PROPERTY_SDK_LAYOUT,
  PaymentLinkConfig.JSON_PROPERTY_DISPLAY_SDK_ONLY,
  PaymentLinkConfig.JSON_PROPERTY_ENABLED_SAVED_PAYMENT_METHOD,
  PaymentLinkConfig.JSON_PROPERTY_ALLOWED_DOMAINS,
  PaymentLinkConfig.JSON_PROPERTY_TRANSACTION_DETAILS
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class PaymentLinkConfig {
  public static final String JSON_PROPERTY_THEME = "theme";
  private String theme;

  public static final String JSON_PROPERTY_LOGO = "logo";
  private String logo;

  public static final String JSON_PROPERTY_SELLER_NAME = "seller_name";
  private String sellerName;

  public static final String JSON_PROPERTY_SDK_LAYOUT = "sdk_layout";
  private String sdkLayout;

  public static final String JSON_PROPERTY_DISPLAY_SDK_ONLY = "display_sdk_only";
  private Boolean displaySdkOnly;

  public static final String JSON_PROPERTY_ENABLED_SAVED_PAYMENT_METHOD = "enabled_saved_payment_method";
  private Boolean enabledSavedPaymentMethod;

  public static final String JSON_PROPERTY_ALLOWED_DOMAINS = "allowed_domains";
  private JsonNullable<Set<String>> allowedDomains = JsonNullable.<Set<String>>undefined();

  public static final String JSON_PROPERTY_TRANSACTION_DETAILS = "transaction_details";
  private JsonNullable<List<PaymentLinkTransactionDetails>> transactionDetails = JsonNullable.<List<PaymentLinkTransactionDetails>>undefined();

  public PaymentLinkConfig() { 
  }

  public PaymentLinkConfig theme(String theme) {
    
    this.theme = theme;
    return this;
  }

   /**
   * custom theme for the payment link
   * @return theme
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "custom theme for the payment link")
  @JsonProperty(JSON_PROPERTY_THEME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getTheme() {
    return theme;
  }


  @JsonProperty(JSON_PROPERTY_THEME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setTheme(String theme) {
    this.theme = theme;
  }


  public PaymentLinkConfig logo(String logo) {
    
    this.logo = logo;
    return this;
  }

   /**
   * merchant display logo
   * @return logo
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "merchant display logo")
  @JsonProperty(JSON_PROPERTY_LOGO)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getLogo() {
    return logo;
  }


  @JsonProperty(JSON_PROPERTY_LOGO)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setLogo(String logo) {
    this.logo = logo;
  }


  public PaymentLinkConfig sellerName(String sellerName) {
    
    this.sellerName = sellerName;
    return this;
  }

   /**
   * Custom merchant name for payment link
   * @return sellerName
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Custom merchant name for payment link")
  @JsonProperty(JSON_PROPERTY_SELLER_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getSellerName() {
    return sellerName;
  }


  @JsonProperty(JSON_PROPERTY_SELLER_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setSellerName(String sellerName) {
    this.sellerName = sellerName;
  }


  public PaymentLinkConfig sdkLayout(String sdkLayout) {
    
    this.sdkLayout = sdkLayout;
    return this;
  }

   /**
   * Custom layout for sdk
   * @return sdkLayout
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Custom layout for sdk")
  @JsonProperty(JSON_PROPERTY_SDK_LAYOUT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getSdkLayout() {
    return sdkLayout;
  }


  @JsonProperty(JSON_PROPERTY_SDK_LAYOUT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setSdkLayout(String sdkLayout) {
    this.sdkLayout = sdkLayout;
  }


  public PaymentLinkConfig displaySdkOnly(Boolean displaySdkOnly) {
    
    this.displaySdkOnly = displaySdkOnly;
    return this;
  }

   /**
   * Display only the sdk for payment link
   * @return displaySdkOnly
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Display only the sdk for payment link")
  @JsonProperty(JSON_PROPERTY_DISPLAY_SDK_ONLY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Boolean getDisplaySdkOnly() {
    return displaySdkOnly;
  }


  @JsonProperty(JSON_PROPERTY_DISPLAY_SDK_ONLY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setDisplaySdkOnly(Boolean displaySdkOnly) {
    this.displaySdkOnly = displaySdkOnly;
  }


  public PaymentLinkConfig enabledSavedPaymentMethod(Boolean enabledSavedPaymentMethod) {
    
    this.enabledSavedPaymentMethod = enabledSavedPaymentMethod;
    return this;
  }

   /**
   * Enable saved payment method option for payment link
   * @return enabledSavedPaymentMethod
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Enable saved payment method option for payment link")
  @JsonProperty(JSON_PROPERTY_ENABLED_SAVED_PAYMENT_METHOD)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Boolean getEnabledSavedPaymentMethod() {
    return enabledSavedPaymentMethod;
  }


  @JsonProperty(JSON_PROPERTY_ENABLED_SAVED_PAYMENT_METHOD)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setEnabledSavedPaymentMethod(Boolean enabledSavedPaymentMethod) {
    this.enabledSavedPaymentMethod = enabledSavedPaymentMethod;
  }


  public PaymentLinkConfig allowedDomains(Set<String> allowedDomains) {
    this.allowedDomains = JsonNullable.<Set<String>>of(allowedDomains);
    
    return this;
  }

  public PaymentLinkConfig addAllowedDomainsItem(String allowedDomainsItem) {
    if (this.allowedDomains == null || !this.allowedDomains.isPresent()) {
      this.allowedDomains = JsonNullable.<Set<String>>of(new LinkedHashSet<>());
    }
    try {
      this.allowedDomains.get().add(allowedDomainsItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * A list of allowed domains (glob patterns) where this link can be embedded / opened from
   * @return allowedDomains
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A list of allowed domains (glob patterns) where this link can be embedded / opened from")
  @JsonIgnore

  public Set<String> getAllowedDomains() {
        return allowedDomains.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ALLOWED_DOMAINS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Set<String>> getAllowedDomains_JsonNullable() {
    return allowedDomains;
  }
  
  @JsonProperty(JSON_PROPERTY_ALLOWED_DOMAINS)
  public void setAllowedDomains_JsonNullable(JsonNullable<Set<String>> allowedDomains) {
    this.allowedDomains = allowedDomains;
  }

  public void setAllowedDomains(Set<String> allowedDomains) {
    this.allowedDomains = JsonNullable.<Set<String>>of(allowedDomains);
  }


  public PaymentLinkConfig transactionDetails(List<PaymentLinkTransactionDetails> transactionDetails) {
    this.transactionDetails = JsonNullable.<List<PaymentLinkTransactionDetails>>of(transactionDetails);
    
    return this;
  }

  public PaymentLinkConfig addTransactionDetailsItem(PaymentLinkTransactionDetails transactionDetailsItem) {
    if (this.transactionDetails == null || !this.transactionDetails.isPresent()) {
      this.transactionDetails = JsonNullable.<List<PaymentLinkTransactionDetails>>of(new ArrayList<>());
    }
    try {
      this.transactionDetails.get().add(transactionDetailsItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Dynamic details related to merchant to be rendered in payment link
   * @return transactionDetails
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Dynamic details related to merchant to be rendered in payment link")
  @JsonIgnore

  public List<PaymentLinkTransactionDetails> getTransactionDetails() {
        return transactionDetails.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_TRANSACTION_DETAILS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<PaymentLinkTransactionDetails>> getTransactionDetails_JsonNullable() {
    return transactionDetails;
  }
  
  @JsonProperty(JSON_PROPERTY_TRANSACTION_DETAILS)
  public void setTransactionDetails_JsonNullable(JsonNullable<List<PaymentLinkTransactionDetails>> transactionDetails) {
    this.transactionDetails = transactionDetails;
  }

  public void setTransactionDetails(List<PaymentLinkTransactionDetails> transactionDetails) {
    this.transactionDetails = JsonNullable.<List<PaymentLinkTransactionDetails>>of(transactionDetails);
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PaymentLinkConfig paymentLinkConfig = (PaymentLinkConfig) o;
    return Objects.equals(this.theme, paymentLinkConfig.theme) &&
        Objects.equals(this.logo, paymentLinkConfig.logo) &&
        Objects.equals(this.sellerName, paymentLinkConfig.sellerName) &&
        Objects.equals(this.sdkLayout, paymentLinkConfig.sdkLayout) &&
        Objects.equals(this.displaySdkOnly, paymentLinkConfig.displaySdkOnly) &&
        Objects.equals(this.enabledSavedPaymentMethod, paymentLinkConfig.enabledSavedPaymentMethod) &&
        equalsNullable(this.allowedDomains, paymentLinkConfig.allowedDomains) &&
        equalsNullable(this.transactionDetails, paymentLinkConfig.transactionDetails);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(theme, logo, sellerName, sdkLayout, displaySdkOnly, enabledSavedPaymentMethod, hashCodeNullable(allowedDomains), hashCodeNullable(transactionDetails));
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PaymentLinkConfig {\n");
    sb.append("    theme: ").append(toIndentedString(theme)).append("\n");
    sb.append("    logo: ").append(toIndentedString(logo)).append("\n");
    sb.append("    sellerName: ").append(toIndentedString(sellerName)).append("\n");
    sb.append("    sdkLayout: ").append(toIndentedString(sdkLayout)).append("\n");
    sb.append("    displaySdkOnly: ").append(toIndentedString(displaySdkOnly)).append("\n");
    sb.append("    enabledSavedPaymentMethod: ").append(toIndentedString(enabledSavedPaymentMethod)).append("\n");
    sb.append("    allowedDomains: ").append(toIndentedString(allowedDomains)).append("\n");
    sb.append("    transactionDetails: ").append(toIndentedString(transactionDetails)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

