/*
 * Hyperswitch - API Documentation
 *  ## Get started  Hyperswitch provides a collection of APIs that enable you to process and manage payments. Our APIs accept and return JSON in the HTTP body, and return standard HTTP response codes.  You can consume the APIs directly using your favorite HTTP/REST library.  We have a testing environment referred to \"sandbox\", which you can setup to test API calls without affecting production data. Currently, our sandbox environment is live while our production environment is under development and will be available soon. You can sign up on our Dashboard to get API keys to access Hyperswitch API.  ### Environment  Use the following base URLs when making requests to the APIs:  | Environment   |  Base URL                          | |---------------|------------------------------------| | Sandbox       | <https://sandbox.hyperswitch.io>   | | Production    | <https://api.hyperswitch.io>       |  ## Authentication  When you sign up on our [dashboard](https://app.hyperswitch.io) and create a merchant account, you are given a secret key (also referred as api-key) and a publishable key. You may authenticate all API requests with Hyperswitch server by providing the appropriate key in the request Authorization header.  | Key             |  Description                                                                                  | |-----------------|-----------------------------------------------------------------------------------------------| | api-key         | Private key. Used to authenticate all API requests from your merchant server                  | | publishable key | Unique identifier for your account. Used to authenticate API requests from your app's client  |  Never share your secret api keys. Keep them guarded and secure. 
 *
 * The version of the OpenAPI document: 0.1.0
 * Contact: hyperswitch@juspay.in
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.hyperswitch.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.hyperswitch.model.AmountInfo;
import com.hyperswitch.model.ApplePayAddressParameters;
import com.hyperswitch.model.CountryAlpha2;
import com.hyperswitch.model.Currency;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * ApplePayPaymentRequest
 */
@JsonPropertyOrder({
  ApplePayPaymentRequest.JSON_PROPERTY_COUNTRY_CODE,
  ApplePayPaymentRequest.JSON_PROPERTY_CURRENCY_CODE,
  ApplePayPaymentRequest.JSON_PROPERTY_TOTAL,
  ApplePayPaymentRequest.JSON_PROPERTY_MERCHANT_CAPABILITIES,
  ApplePayPaymentRequest.JSON_PROPERTY_SUPPORTED_NETWORKS,
  ApplePayPaymentRequest.JSON_PROPERTY_MERCHANT_IDENTIFIER,
  ApplePayPaymentRequest.JSON_PROPERTY_REQUIRED_BILLING_CONTACT_FIELDS,
  ApplePayPaymentRequest.JSON_PROPERTY_REQUIRED_SHIPPING_CONTACT_FIELDS
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.11.0-SNAPSHOT")
public class ApplePayPaymentRequest {
  public static final String JSON_PROPERTY_COUNTRY_CODE = "country_code";
  @javax.annotation.Nonnull
  private CountryAlpha2 countryCode;

  public static final String JSON_PROPERTY_CURRENCY_CODE = "currency_code";
  @javax.annotation.Nonnull
  private Currency currencyCode;

  public static final String JSON_PROPERTY_TOTAL = "total";
  @javax.annotation.Nonnull
  private AmountInfo total;

  public static final String JSON_PROPERTY_MERCHANT_CAPABILITIES = "merchant_capabilities";
  private JsonNullable<List<String>> merchantCapabilities = JsonNullable.<List<String>>undefined();

  public static final String JSON_PROPERTY_SUPPORTED_NETWORKS = "supported_networks";
  private JsonNullable<List<String>> supportedNetworks = JsonNullable.<List<String>>undefined();

  public static final String JSON_PROPERTY_MERCHANT_IDENTIFIER = "merchant_identifier";
  private JsonNullable<String> merchantIdentifier = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_REQUIRED_BILLING_CONTACT_FIELDS = "required_billing_contact_fields";
  private JsonNullable<List<ApplePayAddressParameters>> requiredBillingContactFields = JsonNullable.<List<ApplePayAddressParameters>>undefined();

  public static final String JSON_PROPERTY_REQUIRED_SHIPPING_CONTACT_FIELDS = "required_shipping_contact_fields";
  private JsonNullable<List<ApplePayAddressParameters>> requiredShippingContactFields = JsonNullable.<List<ApplePayAddressParameters>>undefined();

  public ApplePayPaymentRequest() {
  }

  public ApplePayPaymentRequest countryCode(@javax.annotation.Nonnull CountryAlpha2 countryCode) {
    
    this.countryCode = countryCode;
    return this;
  }

  /**
   * Get countryCode
   * @return countryCode
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_COUNTRY_CODE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public CountryAlpha2 getCountryCode() {
    return countryCode;
  }


  @JsonProperty(JSON_PROPERTY_COUNTRY_CODE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setCountryCode(@javax.annotation.Nonnull CountryAlpha2 countryCode) {
    this.countryCode = countryCode;
  }


  public ApplePayPaymentRequest currencyCode(@javax.annotation.Nonnull Currency currencyCode) {
    
    this.currencyCode = currencyCode;
    return this;
  }

  /**
   * Get currencyCode
   * @return currencyCode
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_CURRENCY_CODE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Currency getCurrencyCode() {
    return currencyCode;
  }


  @JsonProperty(JSON_PROPERTY_CURRENCY_CODE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setCurrencyCode(@javax.annotation.Nonnull Currency currencyCode) {
    this.currencyCode = currencyCode;
  }


  public ApplePayPaymentRequest total(@javax.annotation.Nonnull AmountInfo total) {
    
    this.total = total;
    return this;
  }

  /**
   * Get total
   * @return total
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_TOTAL)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public AmountInfo getTotal() {
    return total;
  }


  @JsonProperty(JSON_PROPERTY_TOTAL)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setTotal(@javax.annotation.Nonnull AmountInfo total) {
    this.total = total;
  }


  public ApplePayPaymentRequest merchantCapabilities(@javax.annotation.Nullable List<String> merchantCapabilities) {
    this.merchantCapabilities = JsonNullable.<List<String>>of(merchantCapabilities);
    
    return this;
  }

  public ApplePayPaymentRequest addMerchantCapabilitiesItem(String merchantCapabilitiesItem) {
    if (this.merchantCapabilities == null || !this.merchantCapabilities.isPresent()) {
      this.merchantCapabilities = JsonNullable.<List<String>>of(new ArrayList<>());
    }
    try {
      this.merchantCapabilities.get().add(merchantCapabilitiesItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

  /**
   * The list of merchant capabilities(ex: whether capable of 3ds or no-3ds)
   * @return merchantCapabilities
   */
  @javax.annotation.Nullable
  @JsonIgnore

  public List<String> getMerchantCapabilities() {
        return merchantCapabilities.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_MERCHANT_CAPABILITIES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<String>> getMerchantCapabilities_JsonNullable() {
    return merchantCapabilities;
  }
  
  @JsonProperty(JSON_PROPERTY_MERCHANT_CAPABILITIES)
  public void setMerchantCapabilities_JsonNullable(JsonNullable<List<String>> merchantCapabilities) {
    this.merchantCapabilities = merchantCapabilities;
  }

  public void setMerchantCapabilities(@javax.annotation.Nullable List<String> merchantCapabilities) {
    this.merchantCapabilities = JsonNullable.<List<String>>of(merchantCapabilities);
  }


  public ApplePayPaymentRequest supportedNetworks(@javax.annotation.Nullable List<String> supportedNetworks) {
    this.supportedNetworks = JsonNullable.<List<String>>of(supportedNetworks);
    
    return this;
  }

  public ApplePayPaymentRequest addSupportedNetworksItem(String supportedNetworksItem) {
    if (this.supportedNetworks == null || !this.supportedNetworks.isPresent()) {
      this.supportedNetworks = JsonNullable.<List<String>>of(new ArrayList<>());
    }
    try {
      this.supportedNetworks.get().add(supportedNetworksItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

  /**
   * The list of supported networks
   * @return supportedNetworks
   */
  @javax.annotation.Nullable
  @JsonIgnore

  public List<String> getSupportedNetworks() {
        return supportedNetworks.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_SUPPORTED_NETWORKS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<String>> getSupportedNetworks_JsonNullable() {
    return supportedNetworks;
  }
  
  @JsonProperty(JSON_PROPERTY_SUPPORTED_NETWORKS)
  public void setSupportedNetworks_JsonNullable(JsonNullable<List<String>> supportedNetworks) {
    this.supportedNetworks = supportedNetworks;
  }

  public void setSupportedNetworks(@javax.annotation.Nullable List<String> supportedNetworks) {
    this.supportedNetworks = JsonNullable.<List<String>>of(supportedNetworks);
  }


  public ApplePayPaymentRequest merchantIdentifier(@javax.annotation.Nullable String merchantIdentifier) {
    this.merchantIdentifier = JsonNullable.<String>of(merchantIdentifier);
    
    return this;
  }

  /**
   * Get merchantIdentifier
   * @return merchantIdentifier
   */
  @javax.annotation.Nullable
  @JsonIgnore

  public String getMerchantIdentifier() {
        return merchantIdentifier.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_MERCHANT_IDENTIFIER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getMerchantIdentifier_JsonNullable() {
    return merchantIdentifier;
  }
  
  @JsonProperty(JSON_PROPERTY_MERCHANT_IDENTIFIER)
  public void setMerchantIdentifier_JsonNullable(JsonNullable<String> merchantIdentifier) {
    this.merchantIdentifier = merchantIdentifier;
  }

  public void setMerchantIdentifier(@javax.annotation.Nullable String merchantIdentifier) {
    this.merchantIdentifier = JsonNullable.<String>of(merchantIdentifier);
  }


  public ApplePayPaymentRequest requiredBillingContactFields(@javax.annotation.Nullable List<ApplePayAddressParameters> requiredBillingContactFields) {
    this.requiredBillingContactFields = JsonNullable.<List<ApplePayAddressParameters>>of(requiredBillingContactFields);
    
    return this;
  }

  public ApplePayPaymentRequest addRequiredBillingContactFieldsItem(ApplePayAddressParameters requiredBillingContactFieldsItem) {
    if (this.requiredBillingContactFields == null || !this.requiredBillingContactFields.isPresent()) {
      this.requiredBillingContactFields = JsonNullable.<List<ApplePayAddressParameters>>of(new ArrayList<>());
    }
    try {
      this.requiredBillingContactFields.get().add(requiredBillingContactFieldsItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

  /**
   * Get requiredBillingContactFields
   * @return requiredBillingContactFields
   */
  @javax.annotation.Nullable
  @JsonIgnore

  public List<ApplePayAddressParameters> getRequiredBillingContactFields() {
        return requiredBillingContactFields.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_REQUIRED_BILLING_CONTACT_FIELDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<ApplePayAddressParameters>> getRequiredBillingContactFields_JsonNullable() {
    return requiredBillingContactFields;
  }
  
  @JsonProperty(JSON_PROPERTY_REQUIRED_BILLING_CONTACT_FIELDS)
  public void setRequiredBillingContactFields_JsonNullable(JsonNullable<List<ApplePayAddressParameters>> requiredBillingContactFields) {
    this.requiredBillingContactFields = requiredBillingContactFields;
  }

  public void setRequiredBillingContactFields(@javax.annotation.Nullable List<ApplePayAddressParameters> requiredBillingContactFields) {
    this.requiredBillingContactFields = JsonNullable.<List<ApplePayAddressParameters>>of(requiredBillingContactFields);
  }


  public ApplePayPaymentRequest requiredShippingContactFields(@javax.annotation.Nullable List<ApplePayAddressParameters> requiredShippingContactFields) {
    this.requiredShippingContactFields = JsonNullable.<List<ApplePayAddressParameters>>of(requiredShippingContactFields);
    
    return this;
  }

  public ApplePayPaymentRequest addRequiredShippingContactFieldsItem(ApplePayAddressParameters requiredShippingContactFieldsItem) {
    if (this.requiredShippingContactFields == null || !this.requiredShippingContactFields.isPresent()) {
      this.requiredShippingContactFields = JsonNullable.<List<ApplePayAddressParameters>>of(new ArrayList<>());
    }
    try {
      this.requiredShippingContactFields.get().add(requiredShippingContactFieldsItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

  /**
   * Get requiredShippingContactFields
   * @return requiredShippingContactFields
   */
  @javax.annotation.Nullable
  @JsonIgnore

  public List<ApplePayAddressParameters> getRequiredShippingContactFields() {
        return requiredShippingContactFields.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_REQUIRED_SHIPPING_CONTACT_FIELDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<ApplePayAddressParameters>> getRequiredShippingContactFields_JsonNullable() {
    return requiredShippingContactFields;
  }
  
  @JsonProperty(JSON_PROPERTY_REQUIRED_SHIPPING_CONTACT_FIELDS)
  public void setRequiredShippingContactFields_JsonNullable(JsonNullable<List<ApplePayAddressParameters>> requiredShippingContactFields) {
    this.requiredShippingContactFields = requiredShippingContactFields;
  }

  public void setRequiredShippingContactFields(@javax.annotation.Nullable List<ApplePayAddressParameters> requiredShippingContactFields) {
    this.requiredShippingContactFields = JsonNullable.<List<ApplePayAddressParameters>>of(requiredShippingContactFields);
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ApplePayPaymentRequest applePayPaymentRequest = (ApplePayPaymentRequest) o;
    return Objects.equals(this.countryCode, applePayPaymentRequest.countryCode) &&
        Objects.equals(this.currencyCode, applePayPaymentRequest.currencyCode) &&
        Objects.equals(this.total, applePayPaymentRequest.total) &&
        equalsNullable(this.merchantCapabilities, applePayPaymentRequest.merchantCapabilities) &&
        equalsNullable(this.supportedNetworks, applePayPaymentRequest.supportedNetworks) &&
        equalsNullable(this.merchantIdentifier, applePayPaymentRequest.merchantIdentifier) &&
        equalsNullable(this.requiredBillingContactFields, applePayPaymentRequest.requiredBillingContactFields) &&
        equalsNullable(this.requiredShippingContactFields, applePayPaymentRequest.requiredShippingContactFields);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(countryCode, currencyCode, total, hashCodeNullable(merchantCapabilities), hashCodeNullable(supportedNetworks), hashCodeNullable(merchantIdentifier), hashCodeNullable(requiredBillingContactFields), hashCodeNullable(requiredShippingContactFields));
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ApplePayPaymentRequest {\n");
    sb.append("    countryCode: ").append(toIndentedString(countryCode)).append("\n");
    sb.append("    currencyCode: ").append(toIndentedString(currencyCode)).append("\n");
    sb.append("    total: ").append(toIndentedString(total)).append("\n");
    sb.append("    merchantCapabilities: ").append(toIndentedString(merchantCapabilities)).append("\n");
    sb.append("    supportedNetworks: ").append(toIndentedString(supportedNetworks)).append("\n");
    sb.append("    merchantIdentifier: ").append(toIndentedString(merchantIdentifier)).append("\n");
    sb.append("    requiredBillingContactFields: ").append(toIndentedString(requiredBillingContactFields)).append("\n");
    sb.append("    requiredShippingContactFields: ").append(toIndentedString(requiredShippingContactFields)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

