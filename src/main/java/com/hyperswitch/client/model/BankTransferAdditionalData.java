/*
 * Hyperswitch - API Documentation
 *  ## Get started  Hyperswitch provides a collection of APIs that enable you to process and manage payments. Our APIs accept and return JSON in the HTTP body, and return standard HTTP response codes.  You can consume the APIs directly using your favorite HTTP/REST library.  We have a testing environment referred to \"sandbox\", which you can setup to test API calls without affecting production data. Currently, our sandbox environment is live while our production environment is under development and will be available soon. You can sign up on our Dashboard to get API keys to access Hyperswitch API.  ### Environment  Use the following base URLs when making requests to the APIs:  | Environment   |  Base URL                          | |---------------|------------------------------------| | Sandbox       | <https://sandbox.hyperswitch.io>   | | Production    | <https://api.hyperswitch.io>       |  ## Authentication  When you sign up on our [dashboard](https://app.hyperswitch.io) and create a merchant account, you are given a secret key (also referred as api-key) and a publishable key. You may authenticate all API requests with Hyperswitch server by providing the appropriate key in the request Authorization header.  | Key             |  Description                                                                                  | |-----------------|-----------------------------------------------------------------------------------------------| | api-key         | Private key. Used to authenticate all API requests from your merchant server                  | | publishable key | Unique identifier for your account. Used to authenticate API requests from your app's client  |  Never share your secret api keys. Keep them guarded and secure. 
 *
 * The version of the OpenAPI document: 0.1.0
 * Contact: hyperswitch@juspay.in
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.hyperswitch.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.hyperswitch.client.model.BankTransferAdditionalDataOneOf;
import com.hyperswitch.client.model.BankTransferAdditionalDataOneOf1;
import com.hyperswitch.client.model.BankTransferAdditionalDataOneOf10;
import com.hyperswitch.client.model.BankTransferAdditionalDataOneOf11;
import com.hyperswitch.client.model.BankTransferAdditionalDataOneOf12;
import com.hyperswitch.client.model.BankTransferAdditionalDataOneOf13;
import com.hyperswitch.client.model.BankTransferAdditionalDataOneOf2;
import com.hyperswitch.client.model.BankTransferAdditionalDataOneOf3;
import com.hyperswitch.client.model.BankTransferAdditionalDataOneOf4;
import com.hyperswitch.client.model.BankTransferAdditionalDataOneOf5;
import com.hyperswitch.client.model.BankTransferAdditionalDataOneOf6;
import com.hyperswitch.client.model.BankTransferAdditionalDataOneOf7;
import com.hyperswitch.client.model.BankTransferAdditionalDataOneOf8;
import com.hyperswitch.client.model.BankTransferAdditionalDataOneOf9;
import com.hyperswitch.client.model.LocalBankTransferAdditionalData;
import com.hyperswitch.client.model.PixBankTransferAdditionalData;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * BankTransferAdditionalData
 */
@JsonPropertyOrder({
  BankTransferAdditionalData.JSON_PROPERTY_ACH,
  BankTransferAdditionalData.JSON_PROPERTY_SEPA,
  BankTransferAdditionalData.JSON_PROPERTY_BACS,
  BankTransferAdditionalData.JSON_PROPERTY_MULTIBANCO,
  BankTransferAdditionalData.JSON_PROPERTY_PERMATA,
  BankTransferAdditionalData.JSON_PROPERTY_BCA,
  BankTransferAdditionalData.JSON_PROPERTY_BNI_VA,
  BankTransferAdditionalData.JSON_PROPERTY_BRI_VA,
  BankTransferAdditionalData.JSON_PROPERTY_CIMB_VA,
  BankTransferAdditionalData.JSON_PROPERTY_DANAMON_VA,
  BankTransferAdditionalData.JSON_PROPERTY_MANDIRI_VA,
  BankTransferAdditionalData.JSON_PROPERTY_PIX,
  BankTransferAdditionalData.JSON_PROPERTY_PSE,
  BankTransferAdditionalData.JSON_PROPERTY_LOCAL_BANK_TRANSFER
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class BankTransferAdditionalData {
  public static final String JSON_PROPERTY_ACH = "ach";
  private Object ach;

  public static final String JSON_PROPERTY_SEPA = "sepa";
  private Object sepa;

  public static final String JSON_PROPERTY_BACS = "bacs";
  private Object bacs;

  public static final String JSON_PROPERTY_MULTIBANCO = "multibanco";
  private Object multibanco;

  public static final String JSON_PROPERTY_PERMATA = "permata";
  private Object permata;

  public static final String JSON_PROPERTY_BCA = "bca";
  private Object bca;

  public static final String JSON_PROPERTY_BNI_VA = "bni_va";
  private Object bniVa;

  public static final String JSON_PROPERTY_BRI_VA = "bri_va";
  private Object briVa;

  public static final String JSON_PROPERTY_CIMB_VA = "cimb_va";
  private Object cimbVa;

  public static final String JSON_PROPERTY_DANAMON_VA = "danamon_va";
  private Object danamonVa;

  public static final String JSON_PROPERTY_MANDIRI_VA = "mandiri_va";
  private Object mandiriVa;

  public static final String JSON_PROPERTY_PIX = "pix";
  private PixBankTransferAdditionalData pix;

  public static final String JSON_PROPERTY_PSE = "pse";
  private Object pse;

  public static final String JSON_PROPERTY_LOCAL_BANK_TRANSFER = "local_bank_transfer";
  private LocalBankTransferAdditionalData localBankTransfer;

  public BankTransferAdditionalData() {
  }

  public BankTransferAdditionalData ach(Object ach) {
    
    this.ach = ach;
    return this;
  }

   /**
   * Get ach
   * @return ach
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_ACH)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Object getAch() {
    return ach;
  }


  @JsonProperty(JSON_PROPERTY_ACH)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setAch(Object ach) {
    this.ach = ach;
  }


  public BankTransferAdditionalData sepa(Object sepa) {
    
    this.sepa = sepa;
    return this;
  }

   /**
   * Get sepa
   * @return sepa
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_SEPA)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Object getSepa() {
    return sepa;
  }


  @JsonProperty(JSON_PROPERTY_SEPA)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setSepa(Object sepa) {
    this.sepa = sepa;
  }


  public BankTransferAdditionalData bacs(Object bacs) {
    
    this.bacs = bacs;
    return this;
  }

   /**
   * Get bacs
   * @return bacs
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_BACS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Object getBacs() {
    return bacs;
  }


  @JsonProperty(JSON_PROPERTY_BACS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setBacs(Object bacs) {
    this.bacs = bacs;
  }


  public BankTransferAdditionalData multibanco(Object multibanco) {
    
    this.multibanco = multibanco;
    return this;
  }

   /**
   * Get multibanco
   * @return multibanco
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_MULTIBANCO)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Object getMultibanco() {
    return multibanco;
  }


  @JsonProperty(JSON_PROPERTY_MULTIBANCO)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setMultibanco(Object multibanco) {
    this.multibanco = multibanco;
  }


  public BankTransferAdditionalData permata(Object permata) {
    
    this.permata = permata;
    return this;
  }

   /**
   * Get permata
   * @return permata
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_PERMATA)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Object getPermata() {
    return permata;
  }


  @JsonProperty(JSON_PROPERTY_PERMATA)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setPermata(Object permata) {
    this.permata = permata;
  }


  public BankTransferAdditionalData bca(Object bca) {
    
    this.bca = bca;
    return this;
  }

   /**
   * Get bca
   * @return bca
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_BCA)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Object getBca() {
    return bca;
  }


  @JsonProperty(JSON_PROPERTY_BCA)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setBca(Object bca) {
    this.bca = bca;
  }


  public BankTransferAdditionalData bniVa(Object bniVa) {
    
    this.bniVa = bniVa;
    return this;
  }

   /**
   * Get bniVa
   * @return bniVa
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_BNI_VA)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Object getBniVa() {
    return bniVa;
  }


  @JsonProperty(JSON_PROPERTY_BNI_VA)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setBniVa(Object bniVa) {
    this.bniVa = bniVa;
  }


  public BankTransferAdditionalData briVa(Object briVa) {
    
    this.briVa = briVa;
    return this;
  }

   /**
   * Get briVa
   * @return briVa
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_BRI_VA)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Object getBriVa() {
    return briVa;
  }


  @JsonProperty(JSON_PROPERTY_BRI_VA)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setBriVa(Object briVa) {
    this.briVa = briVa;
  }


  public BankTransferAdditionalData cimbVa(Object cimbVa) {
    
    this.cimbVa = cimbVa;
    return this;
  }

   /**
   * Get cimbVa
   * @return cimbVa
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_CIMB_VA)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Object getCimbVa() {
    return cimbVa;
  }


  @JsonProperty(JSON_PROPERTY_CIMB_VA)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setCimbVa(Object cimbVa) {
    this.cimbVa = cimbVa;
  }


  public BankTransferAdditionalData danamonVa(Object danamonVa) {
    
    this.danamonVa = danamonVa;
    return this;
  }

   /**
   * Get danamonVa
   * @return danamonVa
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_DANAMON_VA)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Object getDanamonVa() {
    return danamonVa;
  }


  @JsonProperty(JSON_PROPERTY_DANAMON_VA)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setDanamonVa(Object danamonVa) {
    this.danamonVa = danamonVa;
  }


  public BankTransferAdditionalData mandiriVa(Object mandiriVa) {
    
    this.mandiriVa = mandiriVa;
    return this;
  }

   /**
   * Get mandiriVa
   * @return mandiriVa
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_MANDIRI_VA)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Object getMandiriVa() {
    return mandiriVa;
  }


  @JsonProperty(JSON_PROPERTY_MANDIRI_VA)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setMandiriVa(Object mandiriVa) {
    this.mandiriVa = mandiriVa;
  }


  public BankTransferAdditionalData pix(PixBankTransferAdditionalData pix) {
    
    this.pix = pix;
    return this;
  }

   /**
   * Get pix
   * @return pix
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_PIX)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public PixBankTransferAdditionalData getPix() {
    return pix;
  }


  @JsonProperty(JSON_PROPERTY_PIX)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setPix(PixBankTransferAdditionalData pix) {
    this.pix = pix;
  }


  public BankTransferAdditionalData pse(Object pse) {
    
    this.pse = pse;
    return this;
  }

   /**
   * Get pse
   * @return pse
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_PSE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Object getPse() {
    return pse;
  }


  @JsonProperty(JSON_PROPERTY_PSE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setPse(Object pse) {
    this.pse = pse;
  }


  public BankTransferAdditionalData localBankTransfer(LocalBankTransferAdditionalData localBankTransfer) {
    
    this.localBankTransfer = localBankTransfer;
    return this;
  }

   /**
   * Get localBankTransfer
   * @return localBankTransfer
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_LOCAL_BANK_TRANSFER)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public LocalBankTransferAdditionalData getLocalBankTransfer() {
    return localBankTransfer;
  }


  @JsonProperty(JSON_PROPERTY_LOCAL_BANK_TRANSFER)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setLocalBankTransfer(LocalBankTransferAdditionalData localBankTransfer) {
    this.localBankTransfer = localBankTransfer;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    BankTransferAdditionalData bankTransferAdditionalData = (BankTransferAdditionalData) o;
    return Objects.equals(this.ach, bankTransferAdditionalData.ach) &&
        Objects.equals(this.sepa, bankTransferAdditionalData.sepa) &&
        Objects.equals(this.bacs, bankTransferAdditionalData.bacs) &&
        Objects.equals(this.multibanco, bankTransferAdditionalData.multibanco) &&
        Objects.equals(this.permata, bankTransferAdditionalData.permata) &&
        Objects.equals(this.bca, bankTransferAdditionalData.bca) &&
        Objects.equals(this.bniVa, bankTransferAdditionalData.bniVa) &&
        Objects.equals(this.briVa, bankTransferAdditionalData.briVa) &&
        Objects.equals(this.cimbVa, bankTransferAdditionalData.cimbVa) &&
        Objects.equals(this.danamonVa, bankTransferAdditionalData.danamonVa) &&
        Objects.equals(this.mandiriVa, bankTransferAdditionalData.mandiriVa) &&
        Objects.equals(this.pix, bankTransferAdditionalData.pix) &&
        Objects.equals(this.pse, bankTransferAdditionalData.pse) &&
        Objects.equals(this.localBankTransfer, bankTransferAdditionalData.localBankTransfer);
  }

  @Override
  public int hashCode() {
    return Objects.hash(ach, sepa, bacs, multibanco, permata, bca, bniVa, briVa, cimbVa, danamonVa, mandiriVa, pix, pse, localBankTransfer);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class BankTransferAdditionalData {\n");
    sb.append("    ach: ").append(toIndentedString(ach)).append("\n");
    sb.append("    sepa: ").append(toIndentedString(sepa)).append("\n");
    sb.append("    bacs: ").append(toIndentedString(bacs)).append("\n");
    sb.append("    multibanco: ").append(toIndentedString(multibanco)).append("\n");
    sb.append("    permata: ").append(toIndentedString(permata)).append("\n");
    sb.append("    bca: ").append(toIndentedString(bca)).append("\n");
    sb.append("    bniVa: ").append(toIndentedString(bniVa)).append("\n");
    sb.append("    briVa: ").append(toIndentedString(briVa)).append("\n");
    sb.append("    cimbVa: ").append(toIndentedString(cimbVa)).append("\n");
    sb.append("    danamonVa: ").append(toIndentedString(danamonVa)).append("\n");
    sb.append("    mandiriVa: ").append(toIndentedString(mandiriVa)).append("\n");
    sb.append("    pix: ").append(toIndentedString(pix)).append("\n");
    sb.append("    pse: ").append(toIndentedString(pse)).append("\n");
    sb.append("    localBankTransfer: ").append(toIndentedString(localBankTransfer)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

