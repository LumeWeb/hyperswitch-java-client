openapi: 3.0.3
info:
  contact:
    email: hyperswitch@juspay.in
    name: Hyperswitch Support
    url: https://hyperswitch.io
  description: |2

    ## Get started

    Hyperswitch provides a collection of APIs that enable you to process and manage payments.
    Our APIs accept and return JSON in the HTTP body, and return standard HTTP response codes.

    You can consume the APIs directly using your favorite HTTP/REST library.

    We have a testing environment referred to "sandbox", which you can setup to test API calls without
    affecting production data.
    Currently, our sandbox environment is live while our production environment is under development
    and will be available soon.
    You can sign up on our Dashboard to get API keys to access Hyperswitch API.

    ### Environment

    Use the following base URLs when making requests to the APIs:

    | Environment   |  Base URL                          |
    |---------------|------------------------------------|
    | Sandbox       | <https://sandbox.hyperswitch.io>   |
    | Production    | <https://api.hyperswitch.io>       |

    ## Authentication

    When you sign up on our [dashboard](https://app.hyperswitch.io) and create a merchant
    account, you are given a secret key (also referred as api-key) and a publishable key.
    You may authenticate all API requests with Hyperswitch server by providing the appropriate key in
    the request Authorization header.

    | Key             |  Description                                                                                  |
    |-----------------|-----------------------------------------------------------------------------------------------|
    | api-key         | Private key. Used to authenticate all API requests from your merchant server                  |
    | publishable key | Unique identifier for your account. Used to authenticate API requests from your app's client  |

    Never share your secret api keys. Keep them guarded and secure.
  license:
    name: Apache-2.0
  title: Hyperswitch - API Documentation
  version: 0.1.0
servers:
- description: Sandbox Environment
  url: https://sandbox.hyperswitch.io
tags:
- description: Create and manage merchant accounts
  name: Merchant Account
- description: Create and manage profiles
  name: Profile
- description: Create and manage merchant connector accounts
  name: Merchant Connector Account
- description: "Create and manage one-time payments, recurring payments and mandates"
  name: Payments
- description: Create and manage refunds for successful payments
  name: Refunds
- description: Manage mandates
  name: Mandates
- description: Create and manage customers
  name: Customers
- description: Create and manage payment methods of customers
  name: Payment Methods
- description: Manage disputes
  name: Disputes
- description: Create and manage API Keys
  name: API Key
- description: Create and manage payouts
  name: Payouts
- description: Create payment link
  name: payment link
- description: Create and manage routing configurations
  name: Routing
- description: Manage events
  name: Event
paths:
  /v2/organization:
    post:
      description: Create a new organization
      operationId: Create an Organization
      requestBody:
        content:
          application/json:
            examples:
              Create an organization with organization_name:
                value:
                  organization_name: organization_abc
            schema:
              $ref: '#/components/schemas/OrganizationCreateRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationResponse'
          description: Organization Created
        "400":
          description: Invalid data
      security:
      - admin_api_key: []
      summary: Organization - Create
      tags:
      - Organization
      x-content-type: application/json
      x-accepts:
      - application/json
  /v2/organization/{id}:
    get:
      description: Retrieve an existing organization
      operationId: Retrieve an Organization
      parameters:
      - description: The unique identifier for the Organization
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationResponse'
          description: Organization Created
        "400":
          description: Invalid data
      security:
      - admin_api_key: []
      summary: Organization - Retrieve
      tags:
      - Organization
      x-accepts:
      - application/json
    put:
      description: Create a new organization for .
      operationId: Update an Organization
      parameters:
      - description: The unique identifier for the Organization
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              Update organization_name of the organization:
                value:
                  organization_name: organization_abcd
            schema:
              $ref: '#/components/schemas/OrganizationUpdateRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationResponse'
          description: Organization Created
        "400":
          description: Invalid data
      security:
      - admin_api_key: []
      summary: Organization - Update
      tags:
      - Organization
      x-content-type: application/json
      x-accepts:
      - application/json
  /v2/organization/{id}/merchant_accounts:
    get:
      description: List merchant accounts for an Organization
      operationId: List Merchant Accounts
      parameters:
      - description: The unique identifier for the Organization
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/MerchantAccountResponse'
                type: array
          description: Merchant Account list retrieved successfully
        "400":
          description: Invalid data
      security:
      - admin_api_key: []
      summary: Organization - Merchant Account - List
      tags:
      - Organization
      x-accepts:
      - application/json
  /v2/connector_accounts:
    post:
      description: Creates a new Connector Account for the merchant account. The connector
        could be a payment processor/facilitator/acquirer or a provider of specialized
        services like Fraud/Accounting etc.
      operationId: Create a Merchant Connector
      requestBody:
        content:
          application/json:
            examples:
              Create a merchant account with custom connector label:
                value:
                  connector_account_details:
                    api_key: "{{adyen-api-key}}"
                    auth_type: BodyKey
                    key1: "{{adyen_merchant_account}}"
                  connector_label: EU_adyen
                  connector_name: adyen
                  connector_type: payment_processor
              Create a merchant connector account under a specific profile:
                value:
                  connector_account_details:
                    api_key: "{{adyen-api-key}}"
                    auth_type: BodyKey
                    key1: "{{adyen_merchant_account}}"
                  connector_name: adyen
                  connector_type: payment_processor
                  profile_id: "{{profile_id}}"
              Create a merchant connector account with minimal fields:
                value:
                  connector_account_details:
                    api_key: "{{adyen-api-key}}"
                    auth_type: BodyKey
                    key1: "{{adyen_merchant_account}}"
                  connector_name: adyen
                  connector_type: payment_processor
            schema:
              $ref: '#/components/schemas/MerchantConnectorCreate'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MerchantConnectorResponse'
          description: Merchant Connector Created
        "400":
          description: Missing Mandatory fields
      security:
      - admin_api_key: []
      summary: Connector Account - Create
      tags:
      - Merchant Connector Account
      x-content-type: application/json
      x-accepts:
      - application/json
  /v2/connector_accounts/{id}:
    delete:
      description: Delete or Detach a Merchant Connector from Merchant Account
      operationId: Delete a Merchant Connector
      parameters:
      - description: The unique identifier for the Merchant Connector
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MerchantConnectorDeleteResponse'
          description: Merchant Connector Deleted
        "401":
          description: Unauthorized request
        "404":
          description: Merchant Connector does not exist in records
      security:
      - admin_api_key: []
      summary: Merchant Connector - Delete
      tags:
      - Merchant Connector Account
      x-accepts:
      - application/json
    get:
      description: Retrieves details of a Connector account
      operationId: Retrieve a Merchant Connector
      parameters:
      - description: The unique identifier for the Merchant Connector
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MerchantConnectorResponse'
          description: Merchant Connector retrieved successfully
        "401":
          description: Unauthorized request
        "404":
          description: Merchant Connector does not exist in records
      security:
      - admin_api_key: []
      summary: Connector Account - Retrieve
      tags:
      - Merchant Connector Account
      x-accepts:
      - application/json
    put:
      description: To update an existing Connector account. Helpful in enabling/disabling
        different payment methods and other settings for the connector
      operationId: Update a Merchant Connector
      parameters:
      - description: The unique identifier for the Merchant Connector
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              Enable card payment method:
                value:
                  connector_type: payment_processor
                  payment_methods_enabled:
                  - payment_method: card
              Update webhook secret:
                value:
                  connector_webhook_details:
                    merchant_secret: "{{webhook_secret}}"
            schema:
              $ref: '#/components/schemas/MerchantConnectorUpdate'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MerchantConnectorResponse'
          description: Merchant Connector Updated
        "401":
          description: Unauthorized request
        "404":
          description: Merchant Connector does not exist in records
      security:
      - admin_api_key: []
      summary: Connector Account - Update
      tags:
      - Merchant Connector Account
      x-content-type: application/json
      x-accepts:
      - application/json
  /v2/merchant_accounts:
    post:
      description: |-
        Create a new account for a *merchant* and the *merchant* could be a seller or retailer or client who likes to receive and send payments.

        Before creating the merchant account, it is mandatory to create an organization.
      operationId: Create a Merchant Account
      parameters:
      - description: Organization ID for which the merchant account has to be created.
        example:
          X-Organization-Id: org_abcdefghijklmnop
        explode: false
        in: header
        name: X-Organization-Id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              Create a merchant account with merchant details:
                value:
                  merchant_details:
                    primary_contact_person: John Doe
                    primary_email: example@company.com
                  merchant_name: Cloth Store
              Create a merchant account with metadata:
                value:
                  merchant_name: Cloth Store
                  metadata:
                    key_1: John Doe
                    key_2: Trends
              Create a merchant account with minimal fields:
                value:
                  merchant_name: Cloth Store
            schema:
              $ref: '#/components/schemas/MerchantAccountCreate'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MerchantAccountResponse'
          description: Merchant Account Created
        "400":
          description: Invalid data
      security:
      - admin_api_key: []
      summary: Merchant Account - Create
      tags:
      - Merchant Account
      x-content-type: application/json
      x-accepts:
      - application/json
  /v2/merchant_accounts/{id}:
    get:
      description: Retrieve a *merchant* account details.
      operationId: Retrieve a Merchant Account
      parameters:
      - description: The unique identifier for the merchant account
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MerchantAccountResponse'
          description: Merchant Account Retrieved
        "404":
          description: Merchant account not found
      security:
      - admin_api_key: []
      summary: Merchant Account - Retrieve
      tags:
      - Merchant Account
      x-accepts:
      - application/json
    put:
      description: "Updates details of an existing merchant account. Helpful in updating\
        \ merchant details such as email, contact details, or other configuration\
        \ details like webhook, routing algorithm etc"
      operationId: Update a Merchant Account
      parameters:
      - description: The unique identifier for the merchant account
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              Update Merchant Details:
                value:
                  merchant_details:
                    primary_contact_person: John Doe
                    primary_email: example@company.com
              Update merchant name:
                value:
                  merchant_id: merchant_abc
                  merchant_name: merchant_name
            schema:
              $ref: '#/components/schemas/MerchantAccountUpdate'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MerchantAccountResponse'
          description: Merchant Account Updated
        "404":
          description: Merchant account not found
      security:
      - admin_api_key: []
      summary: Merchant Account - Update
      tags:
      - Merchant Account
      x-content-type: application/json
      x-accepts:
      - application/json
  /v2/merchant_accounts/{id}/profiles:
    get:
      description: List profiles for an Merchant
      operationId: List Profiles
      parameters:
      - description: The unique identifier for the Merchant
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ProfileResponse'
                type: array
          description: profile list retrieved successfully
        "400":
          description: Invalid data
      security:
      - admin_api_key: []
      summary: Merchant Account - Profile List
      tags:
      - Merchant Account
      x-accepts:
      - application/json
  /v2/payments/{payment_id}/create-external-sdk-tokens:
    post:
      description: "Creates a session object or a session token for wallets like Apple\
        \ Pay, Google Pay, etc. These tokens are used by Hyperswitch's SDK to initiate\
        \ these wallets' SDK."
      operationId: Create Session tokens for a Payment
      parameters:
      - description: The identifier for payment
        explode: false
        in: path
        name: payment_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentsSessionRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentsSessionResponse'
          description: Payment session object created or session token was retrieved
            from wallets
        "400":
          description: Missing mandatory fields
      security:
      - publishable_key: []
      summary: Payments - Session token
      tags:
      - Payments
      x-content-type: application/json
      x-accepts:
      - application/json
  /v2/profiles:
    post:
      description: Creates a new *profile* for a merchant
      operationId: Create A Profile
      parameters:
      - description: Merchant ID of the profile.
        example:
          X-Merchant-Id: abc_iG5VNjsN9xuCg7Xx0uWh
        explode: false
        in: header
        name: X-Merchant-Id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              Create a profile with profile name:
                value:
                  profile_name: shoe_business
            schema:
              $ref: '#/components/schemas/ProfileCreate'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProfileResponse'
          description: Account Created
        "400":
          description: Invalid data
      security:
      - admin_api_key: []
      summary: Profile - Create
      tags:
      - Profile
      x-content-type: application/json
      x-accepts:
      - application/json
  /v2/profiles/{id}:
    get:
      description: Retrieve existing *profile*
      operationId: Retrieve a Profile
      parameters:
      - description: The unique identifier for the profile
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: Merchant ID of the profile.
        example:
          X-Merchant-Id: abc_iG5VNjsN9xuCg7Xx0uWh
        explode: false
        in: header
        name: X-Merchant-Id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProfileResponse'
          description: Profile Updated
        "400":
          description: Invalid data
      security:
      - admin_api_key: []
      summary: Profile - Retrieve
      tags:
      - Profile
      x-accepts:
      - application/json
    put:
      description: Update the *profile*
      operationId: Update a Profile
      parameters:
      - description: The unique identifier for the profile
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: Merchant ID of the profile.
        example:
          X-Merchant-Id: abc_iG5VNjsN9xuCg7Xx0uWh
        explode: false
        in: header
        name: X-Merchant-Id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              Update profile with profile name fields:
                value:
                  profile_name: shoe_business
            schema:
              $ref: '#/components/schemas/ProfileCreate'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProfileResponse'
          description: Profile Updated
        "400":
          description: Invalid data
      security:
      - admin_api_key: []
      summary: Profile - Update
      tags:
      - Profile
      x-content-type: application/json
      x-accepts:
      - application/json
  /v2/profiles/{id}/connector_accounts:
    get:
      description: List Connector Accounts for the profile
      operationId: List all Connector Accounts
      parameters:
      - description: The unique identifier for the business profile
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: Merchant ID of the profile.
        example:
          X-Merchant-Id: abc_iG5VNjsN9xuCg7Xx0uWh
        explode: false
        in: header
        name: X-Merchant-Id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/MerchantConnectorResponse'
                type: array
          description: Merchant Connector list retrieved successfully
        "401":
          description: Unauthorized request
        "404":
          description: Merchant Connector does not exist in records
      security:
      - admin_api_key: []
      summary: Profile - Connector Accounts List
      tags:
      - Business Profile
      x-accepts:
      - application/json
  /v2/profiles/{id}/activate_routing_algorithm:
    patch:
      description: Activates a routing algorithm under a profile
      operationId: Activates a routing algorithm under a profile
      parameters:
      - description: The unique identifier for the profile
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              Activate a routing algorithm:
                value:
                  routing_algorithm_id: routing_algorithm_123
            schema:
              $ref: '#/components/schemas/RoutingAlgorithmId'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoutingDictionaryRecord'
          description: Routing Algorithm is activated
        "400":
          description: Bad request
        "404":
          description: Resource missing
        "500":
          description: Internal server error
      security:
      - api_key: []
      - jwt_key: []
      summary: Profile - Activate routing algorithm
      tags:
      - Profile
      x-content-type: application/json
      x-accepts:
      - application/json
  /v2/profiles/{id}/deactivate_routing_algorithm:
    patch:
      description: Deactivates a routing algorithm under a profile
      operationId: ' Deactivates a routing algorithm under a profile'
      parameters:
      - description: The unique identifier for the profile
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoutingDictionaryRecord'
          description: Successfully deactivated routing config
        "400":
          description: Malformed request
        "403":
          description: Malformed request
        "422":
          description: Unprocessable request
        "500":
          description: Internal server error
      security:
      - api_key: []
      - jwt_key: []
      summary: Profile - Deactivate routing algorithm
      tags:
      - Profile
      x-accepts:
      - application/json
  /v2/profiles/{id}/fallback_routing:
    get:
      description: Retrieve the default fallback routing algorithm for the profile
      operationId: Retrieve the default fallback routing algorithm for the profile
      parameters:
      - description: The unique identifier for the profile
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/RoutableConnectorChoice'
                type: array
          description: Successfully retrieved default fallback routing algorithm
        "500":
          description: Internal server error
      security:
      - api_key: []
      - jwt_key: []
      summary: Profile - Retrieve Default Fallback Routing Algorithm
      tags:
      - Profile
      x-accepts:
      - application/json
    patch:
      description: Update the default fallback routing algorithm for the profile
      operationId: Update the default fallback routing algorithm for the profile
      parameters:
      - description: The unique identifier for the profile
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/RoutableConnectorChoice'
              type: array
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/RoutableConnectorChoice'
                type: array
          description: Successfully updated the default fallback routing algorithm
        "400":
          description: Malformed request
        "422":
          description: Unprocessable request
        "500":
          description: Internal server error
      security:
      - api_key: []
      - jwt_key: []
      summary: Profile - Update Default Fallback Routing Algorithm
      tags:
      - Profile
      x-content-type: application/json
      x-accepts:
      - application/json
  /v2/profiles/{id}/routing_algorithm:
    get:
      description: Retrieve active routing algorithm under the profile
      operationId: Retrieve the active routing algorithm under the profile
      parameters:
      - description: The unique identifier for the profile
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: The number of records of the algorithms to be returned
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          minimum: 0
          nullable: true
          type: integer
        style: form
      - description: The record offset of the algorithm from which to start gathering
          the results
        explode: true
        in: query
        name: offset
        required: false
        schema:
          format: int32
          minimum: 0
          nullable: true
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LinkedRoutingConfigRetrieveResponse'
          description: Successfully retrieved active config
        "403":
          description: Forbidden
        "404":
          description: Resource missing
        "500":
          description: Internal server error
      security:
      - api_key: []
      - jwt_key: []
      summary: Profile - Retrieve Active Routing Algorithm
      tags:
      - Profile
      x-accepts:
      - application/json
  /v2/routing_algorithm:
    post:
      description: Create a routing algorithm
      operationId: Create a routing algprithm
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RoutingConfigRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoutingDictionaryRecord'
          description: Routing Algorithm created
        "400":
          description: Request body is malformed
        "403":
          description: Forbidden
        "404":
          description: Resource missing
        "422":
          description: Unprocessable request
        "500":
          description: Internal server error
      security:
      - api_key: []
      - jwt_key: []
      summary: Routing - Create
      tags:
      - Routing
      x-content-type: application/json
      x-accepts:
      - application/json
  /v2/routing_algorithm/{id}:
    get:
      description: Retrieve a routing algorithm with its algorithm id
      operationId: Retrieve a routing algorithm with its algorithm id
      parameters:
      - description: The unique identifier for a routing algorithm
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MerchantRoutingAlgorithm'
          description: Successfully fetched routing algorithm
        "403":
          description: Forbidden
        "404":
          description: Resource missing
        "500":
          description: Internal server error
      security:
      - api_key: []
      - jwt_key: []
      summary: Routing - Retrieve
      tags:
      - Routing
      x-accepts:
      - application/json
  /v2/api_keys:
    post:
      description: |-
        Create a new API Key for accessing our APIs from your servers. The plaintext API Key will be
        displayed only once on creation, so ensure you store it securely.
      operationId: Create an API Key
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateApiKeyRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateApiKeyResponse'
          description: API Key created
        "400":
          description: Invalid data
      security:
      - admin_api_key: []
      summary: API Key - Create
      tags:
      - API Key
      x-content-type: application/json
      x-accepts:
      - application/json
  /v2/api_keys/{id}:
    delete:
      description: |-
        Revoke the specified API Key. Once revoked, the API Key can no longer be used for
        authenticating with our APIs.
      operationId: Revoke an API Key
      parameters:
      - description: The unique identifier for the API Key
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RevokeApiKeyResponse'
          description: API Key revoked
        "404":
          description: API Key not found
      security:
      - admin_api_key: []
      summary: API Key - Revoke
      tags:
      - API Key
      x-accepts:
      - application/json
    get:
      description: Retrieve information about the specified API Key.
      operationId: Retrieve an API Key
      parameters:
      - description: The unique identifier for the API Key
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetrieveApiKeyResponse'
          description: API Key retrieved
        "404":
          description: API Key not found
      security:
      - admin_api_key: []
      summary: API Key - Retrieve
      tags:
      - API Key
      x-accepts:
      - application/json
    put:
      description: Update information for the specified API Key.
      operationId: Update an API Key
      parameters:
      - description: The unique identifier for the API Key
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateApiKeyRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetrieveApiKeyResponse'
          description: API Key updated
        "404":
          description: API Key not found
      security:
      - admin_api_key: []
      summary: API Key - Update
      tags:
      - API Key
      x-content-type: application/json
      x-accepts:
      - application/json
  /v2/api_keys/list:
    get:
      description: List all the API Keys associated to a merchant account.
      operationId: List all API Keys associated with a merchant account
      parameters:
      - description: The maximum number of API Keys to include in the response
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int64
          nullable: true
          type: integer
        style: form
      - description: The number of API Keys to skip when retrieving the list of API
          keys.
        explode: true
        in: query
        name: skip
        required: false
        schema:
          format: int64
          nullable: true
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/RetrieveApiKeyResponse'
                type: array
          description: List of API Keys retrieved successfully
      security:
      - admin_api_key: []
      summary: API Key - List
      tags:
      - API Key
      x-accepts:
      - application/json
  /v2/customers:
    post:
      description: |-
        Creates a customer object and stores the customer details to be reused for future payments.
        Incase the customer already exists in the system, this API will respond with the customer details.
      operationId: Create a Customer
      requestBody:
        content:
          application/json:
            examples:
              Create a customer with name and email:
                value:
                  email: guest@example.com
                  name: John Doe
            schema:
              $ref: '#/components/schemas/CustomerRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerResponse'
          description: Customer Created
        "400":
          description: Invalid data
      security:
      - api_key: []
      summary: Customers - Create
      tags:
      - Customers
      x-content-type: application/json
      x-accepts:
      - application/json
  /v2/customers/{id}:
    delete:
      description: Delete a customer record.
      operationId: Delete a Customer
      parameters:
      - description: The unique identifier for the Customer
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerDeleteResponse'
          description: Customer was Deleted
        "404":
          description: Customer was not found
      security:
      - api_key: []
      summary: Customers - Delete
      tags:
      - Customers
      x-accepts:
      - application/json
    get:
      description: Retrieves a customer's details.
      operationId: Retrieve a Customer
      parameters:
      - description: The unique identifier for the Customer
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerResponse'
          description: Customer Retrieved
        "404":
          description: Customer was not found
      security:
      - api_key: []
      - ephemeral_key: []
      summary: Customers - Retrieve
      tags:
      - Customers
      x-accepts:
      - application/json
    post:
      description: Updates the customer's details in a customer object.
      operationId: Update a Customer
      parameters:
      - description: The unique identifier for the Customer
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              Update name and email of a customer:
                value:
                  email: guest@example.com
                  name: John Doe
            schema:
              $ref: '#/components/schemas/CustomerRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerResponse'
          description: Customer was Updated
        "404":
          description: Customer was not found
      security:
      - api_key: []
      summary: Customers - Update
      tags:
      - Customers
      x-content-type: application/json
      x-accepts:
      - application/json
  /v2/customers/list:
    get:
      description: Lists all the customers for a particular merchant id.
      operationId: List all Customers for a Merchant
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/CustomerResponse'
                type: array
          description: Customers retrieved
        "400":
          description: Invalid Data
      security:
      - api_key: []
      summary: Customers - List
      tags:
      - Customers
      x-accepts:
      - application/json
  /v2/payments/create-intent:
    post:
      description: |-
        **Creates a payment intent object when amount_details are passed.**

        You will require the 'API - Key' from the Hyperswitch dashboard to make the first call, and use the 'client secret' returned in this API along with your 'publishable key' to make subsequent API calls from your client.
      operationId: Create a Payment Intent
      requestBody:
        content:
          application/json:
            examples:
              Create a payment intent with minimal fields:
                value:
                  amount_details:
                    currency: USD
                    order_amount: 6540
            schema:
              $ref: '#/components/schemas/PaymentsCreateIntentRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentsIntentResponse'
          description: Payment created
        "400":
          description: Missing Mandatory fields
      security:
      - api_key: []
      summary: Payments - Create Intent
      tags:
      - Payments
      x-content-type: application/json
      x-accepts:
      - application/json
  /v2/payments/{id}/get-intent:
    get:
      description: |-
        **Get a payment intent object when id is passed in path**

        You will require the 'API - Key' from the Hyperswitch dashboard to make the call.
      operationId: Get the Payment Intent details
      parameters:
      - description: The unique identifier for the Payment Intent
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentsIntentResponse'
          description: Payment Intent
        "404":
          description: Payment Intent not found
      security:
      - api_key: []
      summary: Payments - Get Intent
      tags:
      - Payments
      x-accepts:
      - application/json
  /v2/payments/{id}/confirm-intent:
    post:
      description: |-
        **Confirms a payment intent object with the payment method data**

        .
      operationId: Confirm Payment Intent
      parameters:
      - description: The payment identifier
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              Confirm the payment intent with card details:
                value:
                  payment_method_data:
                    card:
                      card_cvc: "123"
                      card_exp_month: "10"
                      card_exp_year: "25"
                      card_holder_name: joseph Doe
                      card_number: "4242424242424242"
                  payment_method_type: card
            schema:
              $ref: '#/components/schemas/PaymentsConfirmIntentRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentsConfirmIntentResponse'
          description: Payment created
        "400":
          description: Missing Mandatory fields
      security:
      - publisable_key: []
      summary: Payments - Confirm Intent
      tags:
      - Payments
      x-content-type: application/json
      x-accepts:
      - application/json
  /v2/refunds:
    post:
      description: "Creates a refund against an already processed payment. In case\
        \ of some processors, you can even opt to refund only a partial amount multiple\
        \ times until the original charge amount has been refunded"
      operationId: Create a Refund
      requestBody:
        content:
          application/json:
            examples:
              Create an instant refund to refund partial amount:
                value:
                  amount: 654
                  merchant_reference_id: ref_123
                  payment_id: "{{payment_id}}"
                  refund_type: instant
              Create an instant refund to refund the whole amount:
                value:
                  merchant_reference_id: ref_123
                  payment_id: "{{payment_id}}"
                  refund_type: instant
              Create an instant refund with reason:
                value:
                  amount: 6540
                  merchant_reference_id: ref_123
                  payment_id: "{{payment_id}}"
                  reason: Customer returned product
                  refund_type: instant
            schema:
              $ref: '#/components/schemas/RefundsCreateRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RefundResponse'
          description: Refund created
        "400":
          description: Missing Mandatory fields
      security:
      - api_key: []
      summary: Refunds - Create
      tags:
      - Refunds
      x-content-type: application/json
      x-accepts:
      - application/json
components:
  schemas:
    AcceptanceType:
      description: This is used to indicate if the mandate was accepted online or
        offline
      enum:
      - online
      - offline
      type: string
    AcceptedCountries:
      description: Object to filter the customer countries for which the payment method
        is displayed
      discriminator:
        propertyName: type
      oneOf:
      - $ref: '#/components/schemas/AcceptedCountries_oneOf'
      - $ref: '#/components/schemas/AcceptedCountries_oneOf_1'
      - $ref: '#/components/schemas/AcceptedCountries_oneOf_2'
    AcceptedCurrencies:
      discriminator:
        propertyName: type
      oneOf:
      - $ref: '#/components/schemas/AcceptedCurrencies_oneOf'
      - $ref: '#/components/schemas/AcceptedCurrencies_oneOf_1'
      - $ref: '#/components/schemas/AcceptedCountries_oneOf_2'
    AchBankDebitAdditionalData:
      properties:
        account_number:
          description: Partially masked account number for ach bank debit payment
          example: 0001****3456
          type: string
        routing_number:
          description: Partially masked routing number for ach bank debit payment
          example: 110***000
          type: string
        card_holder_name:
          description: Card holder's name
          example: John Doe
          nullable: true
          type: string
        bank_account_holder_name:
          description: Bank account's owner name
          example: John Doe
          nullable: true
          type: string
        bank_name:
          allOf:
          - $ref: '#/components/schemas/BankNames'
          nullable: true
        bank_type:
          allOf:
          - $ref: '#/components/schemas/BankType'
          nullable: true
        bank_holder_type:
          allOf:
          - $ref: '#/components/schemas/BankHolderType'
          nullable: true
      required:
      - account_number
      - routing_number
      type: object
    AchBankTransfer:
      properties:
        bank_name:
          description: Bank name
          example: Deutsche Bank
          nullable: true
          type: string
        bank_country_code:
          allOf:
          - $ref: '#/components/schemas/CountryAlpha2'
          nullable: true
        bank_city:
          description: Bank city
          example: California
          nullable: true
          type: string
        bank_account_number:
          description: Bank account number is an unique identifier assigned by a bank
            to a customer.
          example: "000123456"
          type: string
        bank_routing_number:
          description: "[9 digits] Routing number - used in USA for identifying a\
            \ specific bank."
          example: "110000000"
          type: string
      required:
      - bank_account_number
      - bank_routing_number
      type: object
    AchBankTransferAdditionalData:
      description: Masked payout method details for ach bank transfer payout method
      properties:
        bank_account_number:
          description: Partially masked account number for ach bank debit payment
          example: 0001****3456
          type: string
        bank_routing_number:
          description: Partially masked routing number for ach bank debit payment
          example: 110***000
          type: string
        bank_name:
          allOf:
          - $ref: '#/components/schemas/BankNames'
          nullable: true
        bank_country_code:
          allOf:
          - $ref: '#/components/schemas/CountryAlpha2'
          nullable: true
        bank_city:
          description: Bank city
          example: California
          nullable: true
          type: string
      required:
      - bank_account_number
      - bank_routing_number
      type: object
    AchBillingDetails:
      properties:
        email:
          description: The Email ID for ACH billing
          example: example@me.com
          nullable: true
          type: string
      type: object
    AchTransfer:
      properties:
        account_number:
          example: "122385736258"
          type: string
        bank_name:
          type: string
        routing_number:
          example: "012"
          type: string
        swift_code:
          example: "234"
          type: string
      required:
      - account_number
      - bank_name
      - routing_number
      - swift_code
      type: object
    AdditionalMerchantData:
      oneOf:
      - $ref: '#/components/schemas/AdditionalMerchantData_oneOf'
    AdditionalPayoutMethodData:
      description: Masked payout method details for storing in db
      oneOf:
      - $ref: '#/components/schemas/AdditionalPayoutMethodData_oneOf'
      - $ref: '#/components/schemas/AdditionalPayoutMethodData_oneOf_1'
      - $ref: '#/components/schemas/AdditionalPayoutMethodData_oneOf_2'
    Address:
      additionalProperties: false
      properties:
        address:
          allOf:
          - $ref: '#/components/schemas/AddressDetails'
          nullable: true
        phone:
          allOf:
          - $ref: '#/components/schemas/PhoneDetails'
          nullable: true
        email:
          nullable: true
          type: string
      type: object
    AddressDetails:
      additionalProperties: false
      description: Address details
      properties:
        city:
          description: The address city
          example: New York
          maxLength: 50
          nullable: true
          type: string
        country:
          allOf:
          - $ref: '#/components/schemas/CountryAlpha2'
          nullable: true
        line1:
          description: The first line of the address
          example: "123, King Street"
          maxLength: 200
          nullable: true
          type: string
        line2:
          description: The second line of the address
          example: Powelson Avenue
          maxLength: 50
          nullable: true
          type: string
        line3:
          description: The third line of the address
          example: Bridgewater
          maxLength: 50
          nullable: true
          type: string
        zip:
          description: The zip/postal code for the address
          example: "08807"
          maxLength: 50
          nullable: true
          type: string
        state:
          description: The address state
          example: New York
          nullable: true
          type: string
        first_name:
          description: The first name for the address
          example: John
          maxLength: 255
          nullable: true
          type: string
        last_name:
          description: The last name for the address
          example: Doe
          maxLength: 255
          nullable: true
          type: string
      type: object
    AirwallexData:
      properties:
        payload:
          description: payload required by airwallex
          nullable: true
          type: string
      type: object
    AlfamartVoucherData:
      properties:
        first_name:
          description: The billing first name for Alfamart
          example: Jane
          nullable: true
          type: string
        last_name:
          description: The billing second name for Alfamart
          example: Doe
          nullable: true
          type: string
        email:
          description: The Email ID for Alfamart
          example: example@me.com
          nullable: true
          type: string
      type: object
    AliPayHkRedirection:
      type: object
    AliPayQr:
      type: object
    AliPayRedirection:
      type: object
    AmountDetails:
      example:
        skip_external_tax_calculation: Skip
        skip_surcharge_calculation: Skip
        order_tax_amount: ""
        shipping_cost: ""
        order_amount: 6540
        currency: AED
        tax_on_surcharge: ""
        surcharge_amount: ""
      properties:
        order_amount:
          description: "The payment amount. Amount for the payment in the lowest denomination\
            \ of the currency, (i.e) in cents for USD denomination, in yen for JPY\
            \ denomination etc. E.g., Pass 100 to charge $1.00 and 1 for 1¥ since\
            \ ¥ is a zero-decimal currency. Read more about [the Decimal and Non-Decimal\
            \ Currencies](https://github.com/juspay/hyperswitch/wiki/Decimal-and-Non%E2%80%90Decimal-Currencies)"
          example: 6540
          format: int64
          minimum: 0
          type: integer
        currency:
          $ref: '#/components/schemas/Currency'
        shipping_cost:
          allOf:
          - $ref: '#/components/schemas/MinorUnit'
          nullable: true
        order_tax_amount:
          allOf:
          - $ref: '#/components/schemas/MinorUnit'
          nullable: true
        skip_external_tax_calculation:
          $ref: '#/components/schemas/TaxCalculationOverride'
        skip_surcharge_calculation:
          $ref: '#/components/schemas/SurchargeCalculationOverride'
        surcharge_amount:
          allOf:
          - $ref: '#/components/schemas/MinorUnit'
          nullable: true
        tax_on_surcharge:
          allOf:
          - $ref: '#/components/schemas/MinorUnit'
          nullable: true
      required:
      - currency
      type: object
    AmountDetailsResponse:
      example:
        skip_external_tax_calculation: Skip
        skip_surcharge_calculation: Skip
        order_tax_amount: ""
        shipping_cost: ""
        order_amount: 6540
        currency: AED
        tax_on_surcharge: ""
        surcharge_amount: ""
      properties:
        order_amount:
          description: "The payment amount. Amount for the payment in the lowest denomination\
            \ of the currency, (i.e) in cents for USD denomination, in yen for JPY\
            \ denomination etc. E.g., Pass 100 to charge $1.00 and 1 for 1¥ since\
            \ ¥ is a zero-decimal currency. Read more about [the Decimal and Non-Decimal\
            \ Currencies](https://github.com/juspay/hyperswitch/wiki/Decimal-and-Non%E2%80%90Decimal-Currencies)"
          example: 6540
          format: int64
          minimum: 0
          type: integer
        currency:
          $ref: '#/components/schemas/Currency'
        shipping_cost:
          allOf:
          - $ref: '#/components/schemas/MinorUnit'
          nullable: true
        order_tax_amount:
          allOf:
          - $ref: '#/components/schemas/MinorUnit'
          nullable: true
        skip_external_tax_calculation:
          $ref: '#/components/schemas/TaxCalculationOverride'
        skip_surcharge_calculation:
          $ref: '#/components/schemas/SurchargeCalculationOverride'
        surcharge_amount:
          allOf:
          - $ref: '#/components/schemas/MinorUnit'
          nullable: true
        tax_on_surcharge:
          allOf:
          - $ref: '#/components/schemas/MinorUnit'
          nullable: true
      required:
      - currency
      - order_amount
      - skip_external_tax_calculation
      - skip_surcharge_calculation
      type: object
    AmountFilter:
      properties:
        start_amount:
          description: The start amount to filter list of transactions which are greater
            than or equal to the start amount
          format: int64
          nullable: true
          type: integer
        end_amount:
          description: The end amount to filter list of transactions which are less
            than or equal to the end amount
          format: int64
          nullable: true
          type: integer
      type: object
    AmountInfo:
      properties:
        label:
          description: The label must be the name of the merchant.
          type: string
        type:
          description: "A value that indicates whether the line item(Ex: total, tax,\
            \ discount, or grand total) is final or pending."
          nullable: true
          type: string
        amount:
          description: "The total amount for the payment in majot unit string (Ex:\
            \ 38.02)"
          example: "38.02"
          type: string
      required:
      - amount
      - label
      type: object
    ApiKeyExpiration:
      oneOf:
      - enum:
        - never
        type: string
      - format: date-time
        type: string
    ApplePayAddressParameters:
      enum:
      - postalAddress
      - phone
      - email
      type: string
    ApplePayBillingContactFields:
      items:
        $ref: '#/components/schemas/ApplePayAddressParameters'
      type: array
    ApplePayPaymentRequest:
      properties:
        country_code:
          $ref: '#/components/schemas/CountryAlpha2'
        currency_code:
          $ref: '#/components/schemas/Currency'
        total:
          $ref: '#/components/schemas/AmountInfo'
        merchant_capabilities:
          description: "The list of merchant capabilities(ex: whether capable of 3ds\
            \ or no-3ds)"
          items:
            type: string
          nullable: true
          type: array
        supported_networks:
          description: The list of supported networks
          items:
            type: string
          nullable: true
          type: array
        merchant_identifier:
          nullable: true
          type: string
        required_billing_contact_fields:
          allOf:
          - $ref: '#/components/schemas/ApplePayBillingContactFields'
          nullable: true
        required_shipping_contact_fields:
          allOf:
          - $ref: '#/components/schemas/ApplePayShippingContactFields'
          nullable: true
      required:
      - country_code
      - currency_code
      - total
      type: object
    ApplePayRedirectData:
      type: object
    ApplePaySessionResponse:
      oneOf:
      - $ref: '#/components/schemas/ThirdPartySdkSessionResponse'
      - $ref: '#/components/schemas/NoThirdPartySdkSessionResponse'
      - default: {}
        nullable: true
        type: object
    ApplePayShippingContactFields:
      items:
        $ref: '#/components/schemas/ApplePayAddressParameters'
      type: array
    ApplePayThirdPartySdkData:
      type: object
    ApplePayWalletData:
      properties:
        payment_data:
          description: The payment data of Apple pay
          type: string
        payment_method:
          $ref: '#/components/schemas/ApplepayPaymentMethod'
        transaction_identifier:
          description: The unique identifier for the transaction
          type: string
      required:
      - payment_data
      - payment_method
      - transaction_identifier
      type: object
    ApplepayConnectorMetadataRequest:
      properties:
        session_token_data:
          allOf:
          - $ref: '#/components/schemas/SessionTokenInfo'
          nullable: true
      type: object
    ApplepayInitiative:
      enum:
      - web
      - ios
      type: string
    ApplepayPaymentMethod:
      properties:
        display_name:
          description: The name to be displayed on Apple Pay button
          type: string
        network:
          description: The network of the Apple pay payment method
          type: string
        type:
          description: The type of the payment method
          type: string
      required:
      - display_name
      - network
      - type
      type: object
    ApplepaySessionTokenResponse:
      properties:
        session_token_data:
          allOf:
          - $ref: '#/components/schemas/ApplePaySessionResponse'
          nullable: true
        payment_request_data:
          allOf:
          - $ref: '#/components/schemas/ApplePayPaymentRequest'
          nullable: true
        connector:
          description: The session token is w.r.t this connector
          type: string
        delayed_session_token:
          description: Identifier for the delayed session response
          type: boolean
        sdk_next_action:
          $ref: '#/components/schemas/SdkNextAction'
        connector_reference_id:
          description: The connector transaction id
          nullable: true
          type: string
        connector_sdk_public_key:
          description: The public key id is to invoke third party sdk
          nullable: true
          type: string
        connector_merchant_id:
          description: The connector merchant id
          nullable: true
          type: string
      required:
      - connector
      - delayed_session_token
      - sdk_next_action
      type: object
    AttemptStatus:
      description: The status of the attempt
      enum:
      - started
      - authentication_failed
      - router_declined
      - authentication_pending
      - authentication_successful
      - authorized
      - authorization_failed
      - charged
      - authorizing
      - cod_initiated
      - voided
      - void_initiated
      - capture_initiated
      - capture_failed
      - void_failed
      - auto_refunded
      - partial_charged
      - partial_charged_and_chargeable
      - unresolved
      - pending
      - failure
      - payment_method_awaited
      - confirmation_awaited
      - device_data_collection_pending
      type: string
    AuthenticationConnectorDetails:
      properties:
        authentication_connectors:
          description: List of authentication connectors
          items:
            $ref: '#/components/schemas/AuthenticationConnectors'
          type: array
        three_ds_requestor_url:
          description: URL of the (customer service) website that will be shown to
            the shopper in case of technical errors during the 3D Secure 2 process.
          type: string
      required:
      - authentication_connectors
      - three_ds_requestor_url
      type: object
    AuthenticationConnectors:
      enum:
      - threedsecureio
      - netcetera
      - gpayments
      type: string
    AuthenticationStatus:
      enum:
      - started
      - pending
      - success
      - failed
      type: string
    AuthenticationType:
      description: Pass this parameter to force 3DS or non 3DS auth for this payment.
        Some connectors will still force 3DS auth even in case of passing 'no_three_ds'
        here and vice versa. Default value is 'no_three_ds' if not set
      enum:
      - three_ds
      - no_three_ds
      type: string
    AuthorizationStatus:
      enum:
      - success
      - failure
      - processing
      - unresolved
      type: string
    BacsBankDebitAdditionalData:
      properties:
        account_number:
          description: Partially masked account number for Bacs payment method
          example: 0001****3456
          type: string
        sort_code:
          description: Partially masked sort code for Bacs payment method
          example: "108800"
          type: string
        bank_account_holder_name:
          description: Bank account's owner name
          example: John Doe
          nullable: true
          type: string
      required:
      - account_number
      - sort_code
      type: object
    BacsBankTransfer:
      properties:
        bank_name:
          description: Bank name
          example: Deutsche Bank
          nullable: true
          type: string
        bank_country_code:
          allOf:
          - $ref: '#/components/schemas/CountryAlpha2'
          nullable: true
        bank_city:
          description: Bank city
          example: California
          nullable: true
          type: string
        bank_account_number:
          description: Bank account number is an unique identifier assigned by a bank
            to a customer.
          example: "000123456"
          type: string
        bank_sort_code:
          description: "[6 digits] Sort Code - used in UK and Ireland for identifying\
            \ a bank and it's branches."
          example: 98-76-54
          type: string
      required:
      - bank_account_number
      - bank_sort_code
      type: object
    BacsBankTransferAdditionalData:
      description: Masked payout method details for bacs bank transfer payout method
      properties:
        bank_sort_code:
          description: Partially masked sort code for Bacs payment method
          example: "108800"
          type: string
        bank_account_number:
          description: Bank account's owner name
          example: 0001****3456
          type: string
        bank_name:
          description: Bank name
          example: Deutsche Bank
          nullable: true
          type: string
        bank_country_code:
          allOf:
          - $ref: '#/components/schemas/CountryAlpha2'
          nullable: true
        bank_city:
          description: Bank city
          example: California
          nullable: true
          type: string
      required:
      - bank_account_number
      - bank_sort_code
      type: object
    BacsBankTransferInstructions:
      properties:
        account_holder_name:
          example: Jane Doe
          type: string
        account_number:
          example: "10244123908"
          type: string
        sort_code:
          example: "012"
          type: string
      required:
      - account_holder_name
      - account_number
      - sort_code
      type: object
    BancontactBankRedirectAdditionalData:
      properties:
        last4:
          description: Last 4 digits of the card number
          example: "4242"
          nullable: true
          type: string
        card_exp_month:
          description: The card's expiry month
          example: "12"
          nullable: true
          type: string
        card_exp_year:
          description: The card's expiry year
          example: "24"
          nullable: true
          type: string
        card_holder_name:
          description: The card holder's name
          example: John Test
          nullable: true
          type: string
      type: object
    Bank:
      oneOf:
      - $ref: '#/components/schemas/AchBankTransfer'
      - $ref: '#/components/schemas/BacsBankTransfer'
      - $ref: '#/components/schemas/SepaBankTransfer'
      - $ref: '#/components/schemas/PixBankTransfer'
    BankAdditionalData:
      description: Masked payout method details for bank payout method
      oneOf:
      - $ref: '#/components/schemas/AchBankTransferAdditionalData'
      - $ref: '#/components/schemas/BacsBankTransferAdditionalData'
      - $ref: '#/components/schemas/SepaBankTransferAdditionalData'
      - $ref: '#/components/schemas/PixBankTransferAdditionalData'
    BankDebitAdditionalData:
      oneOf:
      - $ref: '#/components/schemas/BankDebitAdditionalData_oneOf'
      - $ref: '#/components/schemas/BankDebitAdditionalData_oneOf_1'
      - $ref: '#/components/schemas/BankDebitAdditionalData_oneOf_2'
      - $ref: '#/components/schemas/BankDebitAdditionalData_oneOf_3'
    BankDebitBilling:
      properties:
        name:
          description: The billing name for bank debits
          example: John Doe
          nullable: true
          type: string
        email:
          description: The billing email for bank debits
          example: example@example.com
          nullable: true
          type: string
        address:
          allOf:
          - $ref: '#/components/schemas/AddressDetails'
          nullable: true
      type: object
    BankDebitData:
      oneOf:
      - $ref: '#/components/schemas/BankDebitData_oneOf'
      - $ref: '#/components/schemas/BankDebitData_oneOf_1'
      - $ref: '#/components/schemas/BankDebitData_oneOf_2'
      - $ref: '#/components/schemas/BankDebitData_oneOf_3'
    BankDebitResponse:
      allOf:
      - allOf:
        - $ref: '#/components/schemas/BankDebitAdditionalData'
        nullable: true
      - type: object
    BankHolderType:
      enum:
      - personal
      - business
      type: string
    BankNames:
      description: Name of banks supported by Hyperswitch
      enum:
      - american_express
      - affin_bank
      - agro_bank
      - alliance_bank
      - am_bank
      - bank_of_america
      - bank_of_china
      - bank_islam
      - bank_muamalat
      - bank_rakyat
      - bank_simpanan_nasional
      - barclays
      - blik_p_s_p
      - capital_one
      - chase
      - citi
      - cimb_bank
      - discover
      - navy_federal_credit_union
      - pentagon_federal_credit_union
      - synchrony_bank
      - wells_fargo
      - abn_amro
      - asn_bank
      - bunq
      - handelsbanken
      - hong_leong_bank
      - hsbc_bank
      - ing
      - knab
      - kuwait_finance_house
      - moneyou
      - rabobank
      - regiobank
      - revolut
      - sns_bank
      - triodos_bank
      - van_lanschot
      - arzte_und_apotheker_bank
      - austrian_anadi_bank_ag
      - bank_austria
      - bank99_ag
      - bankhaus_carl_spangler
      - bankhaus_schelhammer_und_schattera_ag
      - bank_millennium
      - bank_p_e_k_a_o_s_a
      - bawag_psk_ag
      - bks_bank_ag
      - brull_kallmus_bank_ag
      - btv_vier_lander_bank
      - capital_bank_grawe_gruppe_ag
      - ceska_sporitelna
      - dolomitenbank
      - easybank_ag
      - e_platby_v_u_b
      - erste_bank_und_sparkassen
      - friesland_bank
      - hypo_alpeadriabank_international_ag
      - hypo_noe_lb_fur_niederosterreich_u_wien
      - hypo_oberosterreich_salzburg_steiermark
      - hypo_tirol_bank_ag
      - hypo_vorarlberg_bank_ag
      - hypo_bank_burgenland_aktiengesellschaft
      - komercni_banka
      - m_bank
      - marchfelder_bank
      - maybank
      - oberbank_ag
      - osterreichische_arzte_und_apothekerbank
      - ocbc_bank
      - pay_with_i_n_g
      - place_z_i_p_k_o
      - platnosc_online_karta_platnicza
      - posojilnica_bank_e_gen
      - postova_banka
      - public_bank
      - raiffeisen_bankengruppe_osterreich
      - rhb_bank
      - schelhammer_capital_bank_ag
      - standard_chartered_bank
      - schoellerbank_ag
      - sparda_bank_wien
      - sporo_pay
      - santander_przelew24
      - tatra_pay
      - viamo
      - volksbank_gruppe
      - volkskreditbank_ag
      - vr_bank_braunau
      - uob_bank
      - pay_with_alior_bank
      - banki_spoldzielcze
      - pay_with_inteligo
      - b_n_p_paribas_poland
      - bank_nowy_s_a
      - credit_agricole
      - pay_with_b_o_s
      - pay_with_citi_handlowy
      - pay_with_plus_bank
      - toyota_bank
      - velo_bank
      - e_transfer_pocztowy24
      - plus_bank
      - etransfer_pocztowy24
      - banki_spbdzielcze
      - bank_nowy_bfg_sa
      - getin_bank
      - blik
      - noble_pay
      - idea_bank
      - envelo_bank
      - nest_przelew
      - mbank_mtransfer
      - inteligo
      - pbac_z_ipko
      - bnp_paribas
      - bank_pekao_sa
      - volkswagen_bank
      - alior_bank
      - boz
      - bangkok_bank
      - krungsri_bank
      - krung_thai_bank
      - the_siam_commercial_bank
      - kasikorn_bank
      - open_bank_success
      - open_bank_failure
      - open_bank_cancelled
      - aib
      - bank_of_scotland
      - danske_bank
      - first_direct
      - first_trust
      - halifax
      - lloyds
      - monzo
      - nat_west
      - nationwide_bank
      - royal_bank_of_scotland
      - starling
      - tsb_bank
      - tesco_bank
      - ulster_bank
      - yoursafe
      - n26
      - nationale_nederlanden
      type: string
    BankRedirectBilling:
      properties:
        billing_name:
          description: The name for which billing is issued
          example: John Doe
          type: string
        email:
          description: The billing email for bank redirect
          example: example@example.com
          type: string
      required:
      - billing_name
      - email
      type: object
    BankRedirectData:
      oneOf:
      - $ref: '#/components/schemas/BankRedirectData_oneOf'
      - $ref: '#/components/schemas/BankRedirectData_oneOf_1'
      - $ref: '#/components/schemas/BankRedirectData_oneOf_2'
      - $ref: '#/components/schemas/BankRedirectData_oneOf_3'
      - $ref: '#/components/schemas/BankRedirectData_oneOf_4'
      - $ref: '#/components/schemas/BankRedirectData_oneOf_5'
      - $ref: '#/components/schemas/BankRedirectData_oneOf_6'
      - $ref: '#/components/schemas/BankRedirectData_oneOf_7'
      - $ref: '#/components/schemas/BankRedirectData_oneOf_8'
      - $ref: '#/components/schemas/BankRedirectData_oneOf_9'
      - $ref: '#/components/schemas/BankRedirectData_oneOf_10'
      - $ref: '#/components/schemas/BankRedirectData_oneOf_11'
      - $ref: '#/components/schemas/BankRedirectData_oneOf_12'
      - $ref: '#/components/schemas/BankRedirectData_oneOf_13'
      - $ref: '#/components/schemas/BankRedirectData_oneOf_14'
      - $ref: '#/components/schemas/BankRedirectData_oneOf_15'
      - $ref: '#/components/schemas/BankRedirectData_oneOf_16'
      - $ref: '#/components/schemas/BankRedirectData_oneOf_17'
    BankRedirectDetails:
      oneOf:
      - $ref: '#/components/schemas/BankRedirectDetails_oneOf'
      - $ref: '#/components/schemas/BankRedirectDetails_oneOf_1'
      - $ref: '#/components/schemas/BankRedirectDetails_oneOf_2'
    BankRedirectResponse:
      allOf:
      - allOf:
        - $ref: '#/components/schemas/BankRedirectDetails'
        nullable: true
      - properties:
          bank_name:
            allOf:
            - $ref: '#/components/schemas/BankNames'
            nullable: true
        type: object
    BankTransferAdditionalData:
      oneOf:
      - $ref: '#/components/schemas/BankTransferAdditionalData_oneOf'
      - $ref: '#/components/schemas/BankTransferAdditionalData_oneOf_1'
      - $ref: '#/components/schemas/BankTransferAdditionalData_oneOf_2'
      - $ref: '#/components/schemas/BankTransferAdditionalData_oneOf_3'
      - $ref: '#/components/schemas/BankTransferAdditionalData_oneOf_4'
      - $ref: '#/components/schemas/BankTransferAdditionalData_oneOf_5'
      - $ref: '#/components/schemas/BankTransferAdditionalData_oneOf_6'
      - $ref: '#/components/schemas/BankTransferAdditionalData_oneOf_7'
      - $ref: '#/components/schemas/BankTransferAdditionalData_oneOf_8'
      - $ref: '#/components/schemas/BankTransferAdditionalData_oneOf_9'
      - $ref: '#/components/schemas/BankTransferAdditionalData_oneOf_10'
      - $ref: '#/components/schemas/BankTransferAdditionalData_oneOf_11'
      - $ref: '#/components/schemas/BankTransferAdditionalData_oneOf_12'
      - $ref: '#/components/schemas/BankTransferAdditionalData_oneOf_13'
    BankTransferData:
      oneOf:
      - $ref: '#/components/schemas/BankTransferData_oneOf'
      - $ref: '#/components/schemas/BankTransferData_oneOf_1'
      - $ref: '#/components/schemas/BankTransferData_oneOf_2'
      - $ref: '#/components/schemas/BankTransferData_oneOf_3'
      - $ref: '#/components/schemas/BankTransferData_oneOf_4'
      - $ref: '#/components/schemas/BankTransferData_oneOf_5'
      - $ref: '#/components/schemas/BankTransferData_oneOf_6'
      - $ref: '#/components/schemas/BankTransferData_oneOf_7'
      - $ref: '#/components/schemas/BankTransferData_oneOf_8'
      - $ref: '#/components/schemas/BankTransferData_oneOf_9'
      - $ref: '#/components/schemas/BankTransferData_oneOf_10'
      - $ref: '#/components/schemas/BankTransferData_oneOf_11'
      - $ref: '#/components/schemas/BankTransferAdditionalData_oneOf_12'
      - $ref: '#/components/schemas/BankTransferData_oneOf_12'
    BankTransferInstructions:
      oneOf:
      - $ref: '#/components/schemas/BankTransferInstructions_oneOf'
      - $ref: '#/components/schemas/BankTransferInstructions_oneOf_1'
      - $ref: '#/components/schemas/BankTransferInstructions_oneOf_2'
      - $ref: '#/components/schemas/BankTransferInstructions_oneOf_3'
      - $ref: '#/components/schemas/BankTransferInstructions_oneOf_4'
    BankTransferNextStepsData:
      allOf:
      - $ref: '#/components/schemas/BankTransferInstructions'
      - properties:
          receiver:
            allOf:
            - $ref: '#/components/schemas/ReceiverDetails'
            nullable: true
        type: object
    BankTransferResponse:
      allOf:
      - allOf:
        - $ref: '#/components/schemas/BankTransferAdditionalData'
        nullable: true
      - type: object
    BankType:
      enum:
      - checking
      - savings
      type: string
    BecsBankDebitAdditionalData:
      properties:
        account_number:
          description: Partially masked account number for Becs payment method
          example: 0001****3456
          type: string
        bsb_number:
          description: Bank-State-Branch (bsb) number
          example: "000000"
          type: string
        bank_account_holder_name:
          description: Bank account's owner name
          example: John Doe
          nullable: true
          type: string
      required:
      - account_number
      - bsb_number
      type: object
    BlikBankRedirectAdditionalData:
      properties:
        blik_code:
          example: 3GD9MO
          nullable: true
          type: string
      type: object
    BlocklistDataKind:
      enum:
      - payment_method
      - card_bin
      - extended_card_bin
      type: string
    BlocklistRequest:
      discriminator:
        propertyName: type
      oneOf:
      - $ref: '#/components/schemas/BlocklistRequest_oneOf'
      - $ref: '#/components/schemas/BlocklistRequest_oneOf_1'
      - $ref: '#/components/schemas/BlocklistRequest_oneOf_2'
    BlocklistResponse:
      properties:
        fingerprint_id:
          type: string
        data_kind:
          $ref: '#/components/schemas/BlocklistDataKind'
        created_at:
          format: date-time
          type: string
      required:
      - created_at
      - data_kind
      - fingerprint_id
      type: object
    BoletoVoucherData:
      properties:
        social_security_number:
          description: The shopper's social security number
          nullable: true
          type: string
      type: object
    BrowserInformation:
      description: Browser information to be used for 3DS 2.0
      properties:
        color_depth:
          description: Color depth supported by the browser
          format: int32
          minimum: 0
          nullable: true
          type: integer
        java_enabled:
          description: Whether java is enabled in the browser
          nullable: true
          type: boolean
        java_script_enabled:
          description: Whether javascript is enabled in the browser
          nullable: true
          type: boolean
        language:
          description: Language supported
          nullable: true
          type: string
        screen_height:
          description: The screen height in pixels
          format: int32
          minimum: 0
          nullable: true
          type: integer
        screen_width:
          description: The screen width in pixels
          format: int32
          minimum: 0
          nullable: true
          type: integer
        time_zone:
          description: Time zone of the client
          format: int32
          nullable: true
          type: integer
        ip_address:
          description: Ip address of the client
          nullable: true
          type: string
        accept_header:
          description: List of headers that are accepted
          example: "text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8"
          nullable: true
          type: string
        user_agent:
          description: User-agent of the browser
          nullable: true
          type: string
      type: object
    BusinessCollectLinkConfig:
      allOf:
      - $ref: '#/components/schemas/BusinessGenericLinkConfig'
      - properties:
          enabled_payment_methods:
            description: List of payment methods shown on collect UI
            example: "[{\"payment_method\": \"bank_transfer\", \"payment_method_types\"\
              : [\"ach\", \"bacs\", \"sepa\"]}]"
            items:
              $ref: '#/components/schemas/EnabledPaymentMethod'
            type: array
        required:
        - enabled_payment_methods
        type: object
    BusinessGenericLinkConfig:
      allOf:
      - $ref: '#/components/schemas/GenericLinkUiConfig'
      - properties:
          domain_name:
            description: Custom domain name to be used for hosting the link
            nullable: true
            type: string
          allowed_domains:
            description: A list of allowed domains (glob patterns) where this link
              can be embedded / opened from
            items:
              type: string
            type: array
            uniqueItems: true
        required:
        - allowed_domains
        type: object
    BusinessPaymentLinkConfig:
      allOf:
      - $ref: '#/components/schemas/PaymentLinkConfigRequest'
      - properties:
          domain_name:
            description: Custom domain name to be used for hosting the link in your
              own domain
            nullable: true
            type: string
          business_specific_configs:
            additionalProperties:
              $ref: '#/components/schemas/PaymentLinkConfigRequest'
            description: list of configs for multi theme setup
            nullable: true
            type: object
          allowed_domains:
            description: A list of allowed domains (glob patterns) where this link
              can be embedded / opened from
            items:
              type: string
            nullable: true
            type: array
            uniqueItems: true
        type: object
    BusinessPayoutLinkConfig:
      allOf:
      - $ref: '#/components/schemas/BusinessGenericLinkConfig'
      - properties:
          form_layout:
            allOf:
            - $ref: '#/components/schemas/UIWidgetFormLayout'
            nullable: true
          payout_test_mode:
            default: false
            description: Allows for removing any validations / pre-requisites which
              are necessary in a production environment
            nullable: true
            type: boolean
        type: object
    CaptureMethod:
      description: Default value if not passed is set to 'automatic' which results
        in Auth and Capture in one single API request. Pass 'manual' or 'manual_multiple'
        in case you want do a separate Auth and Capture by first authorizing and placing
        a hold on your customer's funds so that you can use the Payments/Capture endpoint
        later to capture the authorized amount. Pass 'manual' if you want to only
        capture the amount later once or 'manual_multiple' if you want to capture
        the funds multiple times later. Both 'manual' and 'manual_multiple' are only
        supported by a specific list of processors
      enum:
      - automatic
      - manual
      - manual_multiple
      - scheduled
      type: string
    CaptureResponse:
      properties:
        capture_id:
          description: Unique identifier for the capture
          type: string
        status:
          $ref: '#/components/schemas/CaptureStatus'
        amount:
          description: "The capture amount. Amount for the payment in lowest denomination\
            \ of the currency. (i.e) in cents for USD denomination, in paisa for INR\
            \ denomination etc.,"
          example: 6540
          format: int64
          type: integer
        currency:
          allOf:
          - $ref: '#/components/schemas/Currency'
          nullable: true
        connector:
          description: The connector used for the payment
          type: string
        authorized_attempt_id:
          description: Unique identifier for the parent attempt on which this capture
            is made
          type: string
        connector_capture_id:
          description: A unique identifier for this capture provided by the connector
          nullable: true
          type: string
        capture_sequence:
          description: "Sequence number of this capture, in the series of captures\
            \ made for the parent attempt"
          format: int32
          type: integer
        error_message:
          description: If there was an error while calling the connector the error
            message is received here
          nullable: true
          type: string
        error_code:
          description: If there was an error while calling the connectors the code
            is received here
          nullable: true
          type: string
        error_reason:
          description: If there was an error while calling the connectors the reason
            is received here
          nullable: true
          type: string
        reference_id:
          description: Reference to the capture at connector side
          nullable: true
          type: string
      required:
      - amount
      - authorized_attempt_id
      - capture_id
      - capture_sequence
      - connector
      - status
      type: object
    CaptureStatus:
      enum:
      - started
      - charged
      - pending
      - failed
      type: string
    Card:
      properties:
        card_number:
          description: The card number
          example: "4242424242424242"
          type: string
        card_exp_month:
          description: The card's expiry month
          example: "24"
          type: string
        card_exp_year:
          description: The card's expiry year
          example: "24"
          type: string
        card_holder_name:
          description: The card holder's name
          example: John Test
          type: string
        card_cvc:
          description: The CVC number for the card
          example: "242"
          type: string
        card_issuer:
          description: The name of the issuer of card
          example: chase
          nullable: true
          type: string
        card_network:
          allOf:
          - $ref: '#/components/schemas/CardNetwork'
          nullable: true
        card_type:
          example: CREDIT
          nullable: true
          type: string
        card_issuing_country:
          example: INDIA
          nullable: true
          type: string
        bank_code:
          example: JP_AMEX
          nullable: true
          type: string
        nick_name:
          description: The card holder's nick name
          example: John Test
          nullable: true
          type: string
      required:
      - card_cvc
      - card_exp_month
      - card_exp_year
      - card_holder_name
      - card_number
      type: object
    CardAdditionalData:
      description: Masked payout method details for card payout method
      properties:
        card_issuer:
          description: Issuer of the card
          nullable: true
          type: string
        card_network:
          allOf:
          - $ref: '#/components/schemas/CardNetwork'
          nullable: true
        card_type:
          description: "Card type, can be either `credit` or `debit`"
          nullable: true
          type: string
        card_issuing_country:
          description: Card issuing country
          nullable: true
          type: string
        bank_code:
          description: Code for Card issuing bank
          nullable: true
          type: string
        last4:
          description: Last 4 digits of the card number
          nullable: true
          type: string
        card_isin:
          description: The ISIN of the card
          nullable: true
          type: string
        card_extended_bin:
          description: "Extended bin of card, contains the first 8 digits of card\
            \ number"
          nullable: true
          type: string
        card_exp_month:
          description: Card expiry month
          example: "01"
          type: string
        card_exp_year:
          description: Card expiry year
          example: "2026"
          type: string
        card_holder_name:
          description: Card holder name
          example: John Doe
          type: string
      required:
      - card_exp_month
      - card_exp_year
      - card_holder_name
      type: object
    CardDetail:
      additionalProperties: false
      properties:
        card_number:
          description: Card Number
          example: "4111111145551142"
          type: string
        card_exp_month:
          description: Card Expiry Month
          example: "10"
          type: string
        card_exp_year:
          description: Card Expiry Year
          example: "25"
          type: string
        card_holder_name:
          description: Card Holder Name
          example: John Doe
          type: string
        nick_name:
          description: Card Holder's Nick Name
          example: John Doe
          nullable: true
          type: string
        card_issuing_country:
          description: Card Issuing Country
          nullable: true
          type: string
        card_network:
          allOf:
          - $ref: '#/components/schemas/CardNetwork'
          nullable: true
        card_issuer:
          description: Issuer Bank for Card
          nullable: true
          type: string
        card_type:
          description: Card Type
          nullable: true
          type: string
      required:
      - card_exp_month
      - card_exp_year
      - card_holder_name
      - card_number
      type: object
    CardDetailFromLocker:
      properties:
        scheme:
          nullable: true
          type: string
        issuer_country:
          nullable: true
          type: string
        last4_digits:
          nullable: true
          type: string
        expiry_month:
          nullable: true
          type: string
        expiry_year:
          nullable: true
          type: string
        card_token:
          nullable: true
          type: string
        card_holder_name:
          nullable: true
          type: string
        card_fingerprint:
          nullable: true
          type: string
        nick_name:
          nullable: true
          type: string
        card_network:
          allOf:
          - $ref: '#/components/schemas/CardNetwork'
          nullable: true
        card_isin:
          nullable: true
          type: string
        card_issuer:
          nullable: true
          type: string
        card_type:
          nullable: true
          type: string
        saved_to_locker:
          type: boolean
      required:
      - saved_to_locker
      type: object
    CardDetailUpdate:
      additionalProperties: false
      properties:
        card_exp_month:
          description: Card Expiry Month
          example: "10"
          type: string
        card_exp_year:
          description: Card Expiry Year
          example: "25"
          type: string
        card_holder_name:
          description: Card Holder Name
          example: John Doe
          type: string
        nick_name:
          description: Card Holder's Nick Name
          example: John Doe
          nullable: true
          type: string
      required:
      - card_exp_month
      - card_exp_year
      - card_holder_name
      type: object
    CardNetwork:
      description: Indicates the card network.
      enum:
      - Visa
      - Mastercard
      - AmericanExpress
      - JCB
      - DinersClub
      - Discover
      - CartesBancaires
      - UnionPay
      - Interac
      - RuPay
      - Maestro
      type: string
    CardPayout:
      properties:
        card_number:
          description: The card number
          example: "4242424242424242"
          type: string
        expiry_month:
          description: The card's expiry month
          type: string
        expiry_year:
          description: The card's expiry year
          type: string
        card_holder_name:
          description: The card holder's name
          example: John Doe
          type: string
      required:
      - card_holder_name
      - card_number
      - expiry_month
      - expiry_year
      type: object
    CardRedirectData:
      oneOf:
      - $ref: '#/components/schemas/CardRedirectData_oneOf'
      - $ref: '#/components/schemas/CardRedirectData_oneOf_1'
      - $ref: '#/components/schemas/CardRedirectData_oneOf_2'
      - $ref: '#/components/schemas/CardRedirectData_oneOf_3'
    CardRedirectResponse:
      allOf:
      - allOf:
        - $ref: '#/components/schemas/CardRedirectData'
        nullable: true
      - type: object
    CardResponse:
      properties:
        last4:
          nullable: true
          type: string
        card_type:
          nullable: true
          type: string
        card_network:
          allOf:
          - $ref: '#/components/schemas/CardNetwork'
          nullable: true
        card_issuer:
          nullable: true
          type: string
        card_issuing_country:
          nullable: true
          type: string
        card_isin:
          nullable: true
          type: string
        card_extended_bin:
          nullable: true
          type: string
        card_exp_month:
          nullable: true
          type: string
        card_exp_year:
          nullable: true
          type: string
        card_holder_name:
          nullable: true
          type: string
        payment_checks:
          nullable: true
        authentication_data:
          nullable: true
      type: object
    CardToken:
      properties:
        card_holder_name:
          description: The card holder's name
          example: John Test
          type: string
        card_cvc:
          description: The CVC number for the card
          nullable: true
          type: string
      required:
      - card_holder_name
      type: object
    CardTokenAdditionalData:
      properties:
        card_holder_name:
          description: The card holder's name
          example: John Test
          type: string
      required:
      - card_holder_name
      type: object
    CardTokenResponse:
      allOf:
      - allOf:
        - $ref: '#/components/schemas/CardTokenAdditionalData'
        nullable: true
      - type: object
    CashappQr:
      type: object
    ChargeRefunds:
      description: Charge specific fields for controlling the revert of funds from
        either platform or connected account. Check sub-fields for more details.
      properties:
        charge_id:
          description: Identifier for charge created for the payment
          type: string
        revert_platform_fee:
          description: |-
            Toggle for reverting the application fee that was collected for the payment.
            If set to false, the funds are pulled from the destination account.
          nullable: true
          type: boolean
        revert_transfer:
          description: |-
            Toggle for reverting the transfer that was made during the charge.
            If set to false, the funds are pulled from the main platform's account.
          nullable: true
          type: boolean
      required:
      - charge_id
      type: object
    Comparison:
      description: Represents a single comparison condition.
      properties:
        lhs:
          description: The left hand side which will always be a domain input identifier
            like "payment.method.cardtype"
          type: string
        comparison:
          $ref: '#/components/schemas/ComparisonType'
        value:
          $ref: '#/components/schemas/ValueType'
        metadata:
          additionalProperties: {}
          description: |-
            Additional metadata that the Static Analyzer and Backend does not touch.
            This can be used to store useful information for the frontend and is required for communication
            between the static analyzer and the frontend.
          type: object
      required:
      - comparison
      - lhs
      - metadata
      - value
      type: object
    ComparisonType:
      description: Conditional comparison type
      enum:
      - equal
      - not_equal
      - less_than
      - less_than_equal
      - greater_than
      - greater_than_equal
      type: string
    ConfirmIntentAmountDetailsResponse:
      example:
        skip_external_tax_calculation: Skip
        skip_surcharge_calculation: Skip
        order_tax_amount: ""
        shipping_cost: ""
        order_amount: 6540
        amount_capturable: 6
        amount_captured: ""
        currency: AED
        tax_on_surcharge: ""
        net_amount: 0
        amount_to_capture: ""
        surcharge_amount: ""
      properties:
        order_amount:
          description: "The payment amount. Amount for the payment in the lowest denomination\
            \ of the currency, (i.e) in cents for USD denomination, in yen for JPY\
            \ denomination etc. E.g., Pass 100 to charge $1.00 and 1 for 1¥ since\
            \ ¥ is a zero-decimal currency. Read more about [the Decimal and Non-Decimal\
            \ Currencies](https://github.com/juspay/hyperswitch/wiki/Decimal-and-Non%E2%80%90Decimal-Currencies)"
          example: 6540
          format: int64
          minimum: 0
          type: integer
        currency:
          $ref: '#/components/schemas/Currency'
        shipping_cost:
          allOf:
          - $ref: '#/components/schemas/MinorUnit'
          nullable: true
        order_tax_amount:
          allOf:
          - $ref: '#/components/schemas/MinorUnit'
          nullable: true
        skip_external_tax_calculation:
          $ref: '#/components/schemas/TaxCalculationOverride'
        skip_surcharge_calculation:
          $ref: '#/components/schemas/SurchargeCalculationOverride'
        surcharge_amount:
          allOf:
          - $ref: '#/components/schemas/MinorUnit'
          nullable: true
        tax_on_surcharge:
          allOf:
          - $ref: '#/components/schemas/MinorUnit'
          nullable: true
        net_amount:
          description: This Unit struct represents MinorUnit in which core amount
            works
          format: int64
          type: integer
        amount_to_capture:
          allOf:
          - $ref: '#/components/schemas/MinorUnit'
          nullable: true
        amount_capturable:
          description: This Unit struct represents MinorUnit in which core amount
            works
          format: int64
          type: integer
        amount_captured:
          allOf:
          - $ref: '#/components/schemas/MinorUnit'
          nullable: true
      required:
      - amount_capturable
      - currency
      - net_amount
      - skip_external_tax_calculation
      - skip_surcharge_calculation
      type: object
    Connector:
      description: A connector is an integration to fulfill payments
      enum:
      - adyenplatform
      - phonypay
      - fauxpay
      - pretendpay
      - stripe_test
      - adyen_test
      - checkout_test
      - paypal_test
      - aci
      - adyen
      - airwallex
      - authorizedotnet
      - bambora
      - bamboraapac
      - bankofamerica
      - billwerk
      - bitpay
      - bluesnap
      - boku
      - braintree
      - cashtocode
      - checkout
      - coinbase
      - cryptopay
      - cybersource
      - datatrans
      - deutschebank
      - dlocal
      - ebanx
      - fiserv
      - fiservemea
      - fiuu
      - forte
      - globalpay
      - globepay
      - gocardless
      - gpayments
      - helcim
      - iatapay
      - itaubank
      - klarna
      - mifinity
      - mollie
      - multisafepay
      - netcetera
      - nexinets
      - nexixpay
      - nmi
      - noon
      - novalnet
      - nuvei
      - opennode
      - paybox
      - payme
      - payone
      - paypal
      - payu
      - placetopay
      - powertranz
      - prophetpay
      - rapyd
      - razorpay
      - shift4
      - square
      - stax
      - stripe
      - taxjar
      - threedsecureio
      - trustpay
      - tsys
      - volt
      - wellsfargo
      - wise
      - worldline
      - worldpay
      - signifyd
      - plaid
      - riskified
      - zen
      - zsl
      type: string
    ConnectorMetadata:
      description: "Some connectors like Apple Pay, Airwallex and Noon might require\
        \ some additional information, find specific details in the child attributes\
        \ below."
      properties:
        apple_pay:
          allOf:
          - $ref: '#/components/schemas/ApplepayConnectorMetadataRequest'
          nullable: true
        airwallex:
          allOf:
          - $ref: '#/components/schemas/AirwallexData'
          nullable: true
        noon:
          allOf:
          - $ref: '#/components/schemas/NoonData'
          nullable: true
      type: object
    ConnectorSelection:
      discriminator:
        propertyName: type
      oneOf:
      - $ref: '#/components/schemas/ConnectorSelection_oneOf'
      - $ref: '#/components/schemas/ConnectorSelection_oneOf_1'
    ConnectorStatus:
      enum:
      - inactive
      - active
      type: string
    ConnectorType:
      description: Type of the Connector for the financial use case. Could range from
        Payments to Accounting to Banking.
      enum:
      - payment_processor
      - payment_vas
      - fin_operations
      - fiz_operations
      - networks
      - banking_entities
      - non_banking_finance
      - payout_processor
      - payment_method_auth
      - authentication_processor
      - tax_processor
      type: string
    ConnectorVolumeSplit:
      properties:
        connector:
          $ref: '#/components/schemas/RoutableConnectorChoice'
        split:
          format: int32
          minimum: 0
          type: integer
      required:
      - connector
      - split
      type: object
    ConnectorWalletDetails:
      additionalProperties: false
      properties:
        apple_pay_combined:
          description: This field contains the Apple Pay certificates and credentials
            for iOS and Web Apple Pay flow
          nullable: true
          type: object
        apple_pay:
          description: This field is for our legacy Apple Pay flow that contains the
            Apple Pay certificates and credentials for only iOS Apple Pay flow
          nullable: true
          type: object
        samsung_pay:
          description: This field contains the Samsung Pay certificates and credentials
          nullable: true
          type: object
        paze:
          description: This field contains the Paze certificates and credentials
          nullable: true
          type: object
      type: object
    CountryAlpha2:
      enum:
      - AF
      - AX
      - AL
      - DZ
      - AS
      - AD
      - AO
      - AI
      - AQ
      - AG
      - AR
      - AM
      - AW
      - AU
      - AT
      - AZ
      - BS
      - BH
      - BD
      - BB
      - BY
      - BE
      - BZ
      - BJ
      - BM
      - BT
      - BO
      - BQ
      - BA
      - BW
      - BV
      - BR
      - IO
      - BN
      - BG
      - BF
      - BI
      - KH
      - CM
      - CA
      - CV
      - KY
      - CF
      - TD
      - CL
      - CN
      - CX
      - CC
      - CO
      - KM
      - CG
      - CD
      - CK
      - CR
      - CI
      - HR
      - CU
      - CW
      - CY
      - CZ
      - DK
      - DJ
      - DM
      - DO
      - EC
      - EG
      - SV
      - GQ
      - ER
      - EE
      - ET
      - FK
      - FO
      - FJ
      - FI
      - FR
      - GF
      - PF
      - TF
      - GA
      - GM
      - GE
      - DE
      - GH
      - GI
      - GR
      - GL
      - GD
      - GP
      - GU
      - GT
      - GG
      - GN
      - GW
      - GY
      - HT
      - HM
      - VA
      - HN
      - HK
      - HU
      - IS
      - IN
      - ID
      - IR
      - IQ
      - IE
      - IM
      - IL
      - IT
      - JM
      - JP
      - JE
      - JO
      - KZ
      - KE
      - KI
      - KP
      - KR
      - KW
      - KG
      - LA
      - LV
      - LB
      - LS
      - LR
      - LY
      - LI
      - LT
      - LU
      - MO
      - MK
      - MG
      - MW
      - MY
      - MV
      - ML
      - MT
      - MH
      - MQ
      - MR
      - MU
      - YT
      - MX
      - FM
      - MD
      - MC
      - MN
      - ME
      - MS
      - MA
      - MZ
      - MM
      - NA
      - NR
      - NP
      - NL
      - NC
      - NZ
      - NI
      - NE
      - NG
      - NU
      - NF
      - MP
      - "NO"
      - OM
      - PK
      - PW
      - PS
      - PA
      - PG
      - PY
      - PE
      - PH
      - PN
      - PL
      - PT
      - PR
      - QA
      - RE
      - RO
      - RU
      - RW
      - BL
      - SH
      - KN
      - LC
      - MF
      - PM
      - VC
      - WS
      - SM
      - ST
      - SA
      - SN
      - RS
      - SC
      - SL
      - SG
      - SX
      - SK
      - SI
      - SB
      - SO
      - ZA
      - GS
      - SS
      - ES
      - LK
      - SD
      - SR
      - SJ
      - SZ
      - SE
      - CH
      - SY
      - TW
      - TJ
      - TZ
      - TH
      - TL
      - TG
      - TK
      - TO
      - TT
      - TN
      - TR
      - TM
      - TC
      - TV
      - UG
      - UA
      - AE
      - GB
      - UM
      - UY
      - UZ
      - VU
      - VE
      - VN
      - VG
      - VI
      - WF
      - EH
      - YE
      - ZM
      - ZW
      - US
      type: string
    CreateApiKeyRequest:
      additionalProperties: false
      description: The request body for creating an API Key.
      example:
        name: Sandbox integration key
        description: Key used by our developers to integrate with the sandbox environment
        expiration: never
      properties:
        name:
          description: A unique name for the API Key to help you identify it.
          example: Sandbox integration key
          maxLength: 64
          type: string
        description:
          description: A description to provide more context about the API Key.
          example: Key used by our developers to integrate with the sandbox environment
          maxLength: 256
          nullable: true
          type: string
        expiration:
          $ref: '#/components/schemas/ApiKeyExpiration'
      required:
      - expiration
      - name
      type: object
    CreateApiKeyResponse:
      description: The response body for creating an API Key.
      example:
        key_id: 5hEEqkgJUyuxgSKGArHA4mWSnX
        api_key: api_key
        created: 2022-09-10T10:11:12Z
        name: Sandbox integration key
        description: Key used by our developers to integrate with the sandbox environment
        expiration: never
        merchant_id: y3oqhf46pyzuxjbcn2giaqnb44
      properties:
        key_id:
          description: The identifier for the API Key.
          example: 5hEEqkgJUyuxgSKGArHA4mWSnX
          maxLength: 64
          type: string
        merchant_id:
          description: The identifier for the Merchant Account.
          example: y3oqhf46pyzuxjbcn2giaqnb44
          maxLength: 64
          type: string
        name:
          description: The unique name for the API Key to help you identify it.
          example: Sandbox integration key
          maxLength: 64
          type: string
        description:
          description: The description to provide more context about the API Key.
          example: Key used by our developers to integrate with the sandbox environment
          maxLength: 256
          nullable: true
          type: string
        api_key:
          description: |-
            The plaintext API Key used for server-side API access. Ensure you store the API Key
            securely as you will not be able to see it again.
          maxLength: 128
          type: string
        created:
          description: The time at which the API Key was created.
          example: 2022-09-10T10:11:12Z
          format: date-time
          type: string
        expiration:
          $ref: '#/components/schemas/ApiKeyExpiration'
      required:
      - api_key
      - created
      - expiration
      - key_id
      - merchant_id
      - name
      type: object
    CryptoData:
      properties:
        pay_currency:
          nullable: true
          type: string
        network:
          nullable: true
          type: string
      type: object
    CryptoResponse:
      allOf:
      - allOf:
        - $ref: '#/components/schemas/CryptoData'
        nullable: true
      - type: object
    Currency:
      description: "The three letter ISO currency code in uppercase. Eg: 'USD' for\
        \ the United States Dollar."
      enum:
      - AED
      - AFN
      - ALL
      - AMD
      - ANG
      - AOA
      - ARS
      - AUD
      - AWG
      - AZN
      - BAM
      - BBD
      - BDT
      - BGN
      - BHD
      - BIF
      - BMD
      - BND
      - BOB
      - BRL
      - BSD
      - BTN
      - BWP
      - BYN
      - BZD
      - CAD
      - CDF
      - CHF
      - CLP
      - CNY
      - COP
      - CRC
      - CUP
      - CVE
      - CZK
      - DJF
      - DKK
      - DOP
      - DZD
      - EGP
      - ERN
      - ETB
      - EUR
      - FJD
      - FKP
      - GBP
      - GEL
      - GHS
      - GIP
      - GMD
      - GNF
      - GTQ
      - GYD
      - HKD
      - HNL
      - HRK
      - HTG
      - HUF
      - IDR
      - ILS
      - INR
      - IQD
      - IRR
      - ISK
      - JMD
      - JOD
      - JPY
      - KES
      - KGS
      - KHR
      - KMF
      - KPW
      - KRW
      - KWD
      - KYD
      - KZT
      - LAK
      - LBP
      - LKR
      - LRD
      - LSL
      - LYD
      - MAD
      - MDL
      - MGA
      - MKD
      - MMK
      - MNT
      - MOP
      - MRU
      - MUR
      - MVR
      - MWK
      - MXN
      - MYR
      - MZN
      - NAD
      - NGN
      - NIO
      - NOK
      - NPR
      - NZD
      - OMR
      - PAB
      - PEN
      - PGK
      - PHP
      - PKR
      - PLN
      - PYG
      - QAR
      - RON
      - RSD
      - RUB
      - RWF
      - SAR
      - SBD
      - SCR
      - SDG
      - SEK
      - SGD
      - SHP
      - SLE
      - SLL
      - SOS
      - SRD
      - SSP
      - STN
      - SVC
      - SYP
      - SZL
      - THB
      - TJS
      - TMT
      - TND
      - TOP
      - TRY
      - TTD
      - TWD
      - TZS
      - UAH
      - UGX
      - USD
      - UYU
      - UZS
      - VES
      - VND
      - VUV
      - WST
      - XAF
      - XCD
      - XOF
      - XPF
      - YER
      - ZAR
      - ZMW
      - ZWL
      type: string
    CustomerAcceptance:
      additionalProperties: false
      description: "This \"CustomerAcceptance\" object is passed during Payments-Confirm\
        \ request, it enlists the type, time, and mode of acceptance properties related\
        \ to an acceptance done by the customer. The customer_acceptance sub object\
        \ is usually passed by the SDK or client."
      properties:
        acceptance_type:
          $ref: '#/components/schemas/AcceptanceType'
        accepted_at:
          description: Specifying when the customer acceptance was provided
          example: 2022-09-10T10:11:12Z
          format: date-time
          nullable: true
          type: string
        online:
          allOf:
          - $ref: '#/components/schemas/OnlineMandate'
          nullable: true
      required:
      - acceptance_type
      type: object
    CustomerDefaultPaymentMethodResponse:
      properties:
        default_payment_method_id:
          description: The unique identifier of the Payment method
          example: card_rGK4Vi5iSW70MY7J2mIg
          nullable: true
          type: string
        customer_id:
          description: The unique identifier of the customer.
          example: cus_y3oqhf46pyzuxjbcn2giaqnb44
          maxLength: 64
          minLength: 1
          type: string
        payment_method:
          $ref: '#/components/schemas/PaymentMethod'
        payment_method_type:
          allOf:
          - $ref: '#/components/schemas/PaymentMethodType'
          nullable: true
      required:
      - customer_id
      - payment_method
      type: object
    CustomerDeleteResponse:
      example:
        merchant_reference_id: cus_y3oqhf46pyzuxjbcn2giaqnb44
        id: id
        customer_deleted: false
        address_deleted: false
        payment_methods_deleted: false
      properties:
        merchant_reference_id:
          description: The identifier for the customer object
          example: cus_y3oqhf46pyzuxjbcn2giaqnb44
          maxLength: 255
          type: string
        customer_deleted:
          description: Whether customer was deleted or not
          example: false
          type: boolean
        address_deleted:
          description: Whether address was deleted or not
          example: false
          type: boolean
        payment_methods_deleted:
          description: Whether payment methods deleted or not
          example: false
          type: boolean
        id:
          description: Global id
          type: string
      required:
      - address_deleted
      - customer_deleted
      - id
      - merchant_reference_id
      - payment_methods_deleted
      type: object
    CustomerDetails:
      description: Passing this object creates a new customer or attaches an existing
        customer to the payment
      properties:
        id:
          description: The identifier for the customer.
          example: cus_y3oqhf46pyzuxjbcn2giaqnb44
          maxLength: 64
          minLength: 1
          type: string
        name:
          description: The customer's name
          example: John Doe
          maxLength: 255
          nullable: true
          type: string
        email:
          description: The customer's email address
          example: johntest@test.com
          maxLength: 255
          nullable: true
          type: string
        phone:
          description: The customer's phone number
          example: "9123456789"
          maxLength: 10
          nullable: true
          type: string
        phone_country_code:
          description: The country code for the customer's phone number
          example: "+1"
          maxLength: 2
          nullable: true
          type: string
      required:
      - id
      type: object
    CustomerDetailsResponse:
      description: Details of customer attached to this payment
      properties:
        id:
          description: The identifier for the customer.
          example: cus_y3oqhf46pyzuxjbcn2giaqnb44
          maxLength: 64
          minLength: 1
          nullable: true
          type: string
        name:
          description: The customer's name
          example: John Doe
          maxLength: 255
          nullable: true
          type: string
        email:
          description: The customer's email address
          example: johntest@test.com
          maxLength: 255
          nullable: true
          type: string
        phone:
          description: The customer's phone number
          example: "9123456789"
          maxLength: 10
          nullable: true
          type: string
        phone_country_code:
          description: The country code for the customer's phone number
          example: "+1"
          maxLength: 2
          nullable: true
          type: string
      type: object
    CustomerPaymentMethod:
      properties:
        payment_token:
          description: Token for payment method in temporary card locker which gets
            refreshed often
          example: 7ebf443f-a050-4067-84e5-e6f6d4800aef
          type: string
        payment_method_id:
          description: The unique identifier of the customer.
          example: pm_iouuy468iyuowqs
          type: string
        customer_id:
          description: The unique identifier of the customer.
          example: cus_y3oqhf46pyzuxjbcn2giaqnb44
          maxLength: 64
          minLength: 1
          type: string
        payment_method:
          $ref: '#/components/schemas/PaymentMethod'
        payment_method_type:
          allOf:
          - $ref: '#/components/schemas/PaymentMethodType'
          nullable: true
        payment_method_issuer:
          description: The name of the bank/ provider issuing the payment method to
            the end user
          example: Citibank
          nullable: true
          type: string
        payment_method_issuer_code:
          allOf:
          - $ref: '#/components/schemas/PaymentMethodIssuerCode'
          nullable: true
        recurring_enabled:
          description: Indicates whether the payment method is eligible for recurring
            payments
          example: true
          type: boolean
        installment_payment_enabled:
          description: Indicates whether the payment method is eligible for installment
            payments
          example: true
          type: boolean
        payment_experience:
          description: Type of payment experience enabled with the connector
          example:
          - redirect_to_url
          items:
            $ref: '#/components/schemas/PaymentExperience'
          nullable: true
          type: array
        card:
          allOf:
          - $ref: '#/components/schemas/CardDetailFromLocker'
          nullable: true
        metadata:
          description: "You can specify up to 50 keys, with key names up to 40 characters\
            \ long and values up to 500 characters long. Metadata is useful for storing\
            \ additional, structured information on an object."
          nullable: true
          type: object
        created:
          description: A timestamp (ISO 8601 code) that determines when the customer
            was created
          example: 2023-01-18T11:04:09.922Z
          format: date-time
          nullable: true
          type: string
        bank_transfer:
          allOf:
          - $ref: '#/components/schemas/Bank'
          nullable: true
        bank:
          allOf:
          - $ref: '#/components/schemas/MaskedBankDetails'
          nullable: true
        surcharge_details:
          allOf:
          - $ref: '#/components/schemas/SurchargeDetailsResponse'
          nullable: true
        requires_cvv:
          description: Whether this payment method requires CVV to be collected
          example: true
          type: boolean
        last_used_at:
          description: A timestamp (ISO 8601 code) that determines when the payment
            method was last used
          example: 2024-02-24T11:04:09.922Z
          format: date-time
          nullable: true
          type: string
        default_payment_method_set:
          description: Indicates if the payment method has been set to default or
            not
          example: true
          type: boolean
        billing:
          allOf:
          - $ref: '#/components/schemas/Address'
          nullable: true
      required:
      - customer_id
      - default_payment_method_set
      - installment_payment_enabled
      - payment_method
      - payment_method_id
      - payment_token
      - recurring_enabled
      - requires_cvv
      type: object
    CustomerPaymentMethodsListResponse:
      properties:
        customer_payment_methods:
          description: List of payment methods for customer
          items:
            $ref: '#/components/schemas/CustomerPaymentMethod'
          type: array
        is_guest_customer:
          description: Returns whether a customer id is not tied to a payment intent
            (only when the request is made against a client secret)
          nullable: true
          type: boolean
      required:
      - customer_payment_methods
      type: object
    CustomerRequest:
      description: The customer details
      example:
        metadata: "{}"
        phone_country_code: "+65"
        phone: "9123456789"
        default_billing_address: ""
        name: Jon Test
        description: First Customer
        merchant_reference_id: cus_y3oqhf46pyzuxjbcn2giaqnb44
        email: JonTest@test.com
        default_shipping_address: ""
      properties:
        merchant_reference_id:
          description: The merchant identifier for the customer object.
          example: cus_y3oqhf46pyzuxjbcn2giaqnb44
          maxLength: 64
          minLength: 1
          nullable: true
          type: string
        name:
          description: The customer's name
          example: Jon Test
          maxLength: 255
          type: string
        email:
          description: The customer's email address
          example: JonTest@test.com
          maxLength: 255
          type: string
        phone:
          description: The customer's phone number
          example: "9123456789"
          maxLength: 255
          nullable: true
          type: string
        description:
          description: An arbitrary string that you can attach to a customer object.
          example: First Customer
          maxLength: 255
          nullable: true
          type: string
        phone_country_code:
          description: The country code for the customer phone number
          example: "+65"
          maxLength: 255
          nullable: true
          type: string
        default_billing_address:
          allOf:
          - $ref: '#/components/schemas/AddressDetails'
          nullable: true
        default_shipping_address:
          allOf:
          - $ref: '#/components/schemas/AddressDetails'
          nullable: true
        metadata:
          description: |-
            You can specify up to 50 keys, with key names up to 40 characters long and values up to 500
            characters long. Metadata is useful for storing additional, structured information on an
            object.
          nullable: true
          type: object
      required:
      - email
      - name
      type: object
    CustomerResponse:
      example:
        default_payment_method_id: pm_djh2837dwduh890123
        metadata: "{}"
        phone_country_code: "+65"
        phone: "9123456789"
        default_billing_address: ""
        name: Jon Test
        description: First Customer
        created_at: 2023-01-18T11:04:09.922Z
        merchant_reference_id: cus_y3oqhf46pyzuxjbcn2giaqnb44
        id: id
        email: JonTest@test.com
        default_shipping_address: ""
      properties:
        merchant_reference_id:
          description: The identifier for the customer object
          example: cus_y3oqhf46pyzuxjbcn2giaqnb44
          maxLength: 64
          minLength: 1
          type: string
        name:
          description: The customer's name
          example: Jon Test
          maxLength: 255
          nullable: true
          type: string
        email:
          description: The customer's email address
          example: JonTest@test.com
          maxLength: 255
          nullable: true
          type: string
        phone:
          description: The customer's phone number
          example: "9123456789"
          maxLength: 255
          nullable: true
          type: string
        phone_country_code:
          description: The country code for the customer phone number
          example: "+65"
          maxLength: 255
          nullable: true
          type: string
        description:
          description: An arbitrary string that you can attach to a customer object.
          example: First Customer
          maxLength: 255
          nullable: true
          type: string
        default_billing_address:
          allOf:
          - $ref: '#/components/schemas/AddressDetails'
          nullable: true
        default_shipping_address:
          allOf:
          - $ref: '#/components/schemas/AddressDetails'
          nullable: true
        created_at:
          description: A timestamp (ISO 8601 code) that determines when the customer
            was created
          example: 2023-01-18T11:04:09.922Z
          format: date-time
          type: string
        metadata:
          description: |-
            You can specify up to 50 keys, with key names up to 40 characters long and values up to 500
            characters long. Metadata is useful for storing additional, structured information on an
            object.
          nullable: true
          type: object
        default_payment_method_id:
          description: The identifier for the default payment method.
          example: pm_djh2837dwduh890123
          maxLength: 64
          nullable: true
          type: string
        id:
          description: Global id
          type: string
      required:
      - created_at
      - id
      - merchant_reference_id
      type: object
    DecoupledAuthenticationType:
      enum:
      - challenge
      - frictionless
      type: string
    DefaultPaymentMethod:
      properties:
        customer_id:
          example: cus_y3oqhf46pyzuxjbcn2giaqnb44
          maxLength: 64
          minLength: 1
          type: string
        payment_method_id:
          type: string
      required:
      - customer_id
      - payment_method_id
      type: object
    DeviceChannel:
      description: Device Channel indicating whether request is coming from App or
        Browser
      enum:
      - APP
      - BRW
      type: string
    DisplayAmountOnSdk:
      properties:
        net_amount:
          description: net amount = amount + order_tax_amount + shipping_cost
          type: string
        order_tax_amount:
          description: order tax amount calculated by tax connectors
          type: string
        shipping_cost:
          description: shipping cost for the order
          type: string
      required:
      - net_amount
      - order_tax_amount
      - shipping_cost
      type: object
    DisputeResponse:
      properties:
        dispute_id:
          description: The identifier for dispute
          type: string
        payment_id:
          description: The identifier for payment_intent
          type: string
        attempt_id:
          description: The identifier for payment_attempt
          type: string
        amount:
          description: The dispute amount
          type: string
        currency:
          description: The three-letter ISO currency code
          type: string
        dispute_stage:
          $ref: '#/components/schemas/DisputeStage'
        dispute_status:
          $ref: '#/components/schemas/DisputeStatus'
        connector:
          description: connector to which dispute is associated with
          type: string
        connector_status:
          description: Status of the dispute sent by connector
          type: string
        connector_dispute_id:
          description: Dispute id sent by connector
          type: string
        connector_reason:
          description: Reason of dispute sent by connector
          nullable: true
          type: string
        connector_reason_code:
          description: Reason code of dispute sent by connector
          nullable: true
          type: string
        challenge_required_by:
          description: Evidence deadline of dispute sent by connector
          format: date-time
          nullable: true
          type: string
        connector_created_at:
          description: Dispute created time sent by connector
          format: date-time
          nullable: true
          type: string
        connector_updated_at:
          description: Dispute updated time sent by connector
          format: date-time
          nullable: true
          type: string
        created_at:
          description: Time at which dispute is received
          format: date-time
          type: string
        profile_id:
          description: The `profile_id` associated with the dispute
          nullable: true
          type: string
        merchant_connector_id:
          description: The `merchant_connector_id` of the connector / processor through
            which the dispute was processed
          nullable: true
          type: string
      required:
      - amount
      - attempt_id
      - connector
      - connector_dispute_id
      - connector_status
      - created_at
      - currency
      - dispute_id
      - dispute_stage
      - dispute_status
      - payment_id
      type: object
    DisputeResponsePaymentsRetrieve:
      properties:
        dispute_id:
          description: The identifier for dispute
          type: string
        dispute_stage:
          $ref: '#/components/schemas/DisputeStage'
        dispute_status:
          $ref: '#/components/schemas/DisputeStatus'
        connector_status:
          description: Status of the dispute sent by connector
          type: string
        connector_dispute_id:
          description: Dispute id sent by connector
          type: string
        connector_reason:
          description: Reason of dispute sent by connector
          nullable: true
          type: string
        connector_reason_code:
          description: Reason code of dispute sent by connector
          nullable: true
          type: string
        challenge_required_by:
          description: Evidence deadline of dispute sent by connector
          format: date-time
          nullable: true
          type: string
        connector_created_at:
          description: Dispute created time sent by connector
          format: date-time
          nullable: true
          type: string
        connector_updated_at:
          description: Dispute updated time sent by connector
          format: date-time
          nullable: true
          type: string
        created_at:
          description: Time at which dispute is received
          format: date-time
          type: string
      required:
      - connector_dispute_id
      - connector_status
      - created_at
      - dispute_id
      - dispute_stage
      - dispute_status
      type: object
    DisputeStage:
      description: Stage of the dispute
      enum:
      - pre_dispute
      - dispute
      - pre_arbitration
      type: string
    DisputeStatus:
      description: Status of the dispute
      enum:
      - dispute_opened
      - dispute_expired
      - dispute_accepted
      - dispute_cancelled
      - dispute_challenged
      - dispute_won
      - dispute_lost
      type: string
    DokuBankTransferInstructions:
      properties:
        expires_at:
          example: "1707091200000"
          type: string
        reference:
          example: "122385736258"
          type: string
        instructions_url:
          type: string
      required:
      - expires_at
      - instructions_url
      - reference
      type: object
    DokuBillingDetails:
      properties:
        first_name:
          description: The billing first name for Doku
          example: Jane
          nullable: true
          type: string
        last_name:
          description: The billing second name for Doku
          example: Doe
          nullable: true
          type: string
        email:
          description: The Email ID for Doku billing
          example: example@me.com
          nullable: true
          type: string
      type: object
    EnablePaymentLinkRequest:
      description: Whether payment link is requested to be enabled or not for this
        transaction
      enum:
      - Enable
      - Skip
      type: string
    EnabledPaymentMethod:
      description: Object for EnabledPaymentMethod
      properties:
        payment_method:
          $ref: '#/components/schemas/PaymentMethod'
        payment_method_types:
          description: An array of associated payment method types
          items:
            $ref: '#/components/schemas/PaymentMethodType'
          type: array
          uniqueItems: true
      required:
      - payment_method
      - payment_method_types
      type: object
    EphemeralKeyCreateResponse:
      description: ephemeral_key for the customer_id mentioned
      properties:
        customer_id:
          description: customer_id to which this ephemeral key belongs to
          example: cus_y3oqhf46pyzuxjbcn2giaqnb44
          maxLength: 64
          minLength: 1
          type: string
        created_at:
          description: time at which this ephemeral key was created
          format: int64
          type: integer
        expires:
          description: time at which this ephemeral key would expire
          format: int64
          type: integer
        secret:
          description: ephemeral key
          type: string
      required:
      - created_at
      - customer_id
      - expires
      - secret
      type: object
    ErrorDetails:
      description: Error details for the payment
      properties:
        code:
          description: The error code
          type: string
        message:
          description: The error message
          type: string
        unified_code:
          description: |-
            The unified error code across all connectors.
            This can be relied upon for taking decisions based on the error.
          nullable: true
          type: string
        unified_message:
          description: |-
            The unified error message across all connectors.
            If there is a translation available, this will have the translated message
          nullable: true
          type: string
      required:
      - code
      - message
      type: object
    EventClass:
      enum:
      - payments
      - refunds
      - disputes
      - mandates
      - payouts
      type: string
    EventListItemResponse:
      description: The response body for each item when listing events.
      properties:
        event_id:
          description: The identifier for the Event.
          example: evt_018e31720d1b7a2b82677d3032cab959
          maxLength: 64
          type: string
        merchant_id:
          description: The identifier for the Merchant Account.
          example: y3oqhf46pyzuxjbcn2giaqnb44
          maxLength: 64
          type: string
        profile_id:
          description: The identifier for the Business Profile.
          example: SqB0zwDGR5wHppWf0bx7GKr1f2
          maxLength: 64
          type: string
        object_id:
          description: "The identifier for the object (Payment Intent ID, Refund ID,\
            \ etc.)"
          example: QHrfd5LUDdZaKtAjdJmMu0dMa1
          maxLength: 64
          type: string
        event_type:
          $ref: '#/components/schemas/EventType'
        event_class:
          $ref: '#/components/schemas/EventClass'
        is_delivery_successful:
          description: Indicates whether the webhook delivery attempt was successful.
          type: boolean
        initial_attempt_id:
          description: |-
            The identifier for the initial delivery attempt. This will be the same as `event_id` for
            the initial delivery attempt.
          example: evt_018e31720d1b7a2b82677d3032cab959
          maxLength: 64
          type: string
        created:
          description: Time at which the event was created.
          example: 2022-09-10T10:11:12Z
          format: date-time
          type: string
      required:
      - created
      - event_class
      - event_id
      - event_type
      - initial_attempt_id
      - is_delivery_successful
      - merchant_id
      - object_id
      - profile_id
      type: object
    EventRetrieveResponse:
      allOf:
      - $ref: '#/components/schemas/EventListItemResponse'
      - properties:
          request:
            $ref: '#/components/schemas/OutgoingWebhookRequestContent'
          response:
            $ref: '#/components/schemas/OutgoingWebhookResponseContent'
          delivery_attempt:
            allOf:
            - $ref: '#/components/schemas/WebhookDeliveryAttempt'
            nullable: true
        required:
        - request
        - response
        type: object
      description: The response body for retrieving an event.
    EventType:
      enum:
      - payment_succeeded
      - payment_failed
      - payment_processing
      - payment_cancelled
      - payment_authorized
      - payment_captured
      - action_required
      - refund_succeeded
      - refund_failed
      - dispute_opened
      - dispute_expired
      - dispute_accepted
      - dispute_cancelled
      - dispute_challenged
      - dispute_won
      - dispute_lost
      - mandate_active
      - mandate_revoked
      - payout_success
      - payout_failed
      - payout_initiated
      - payout_processing
      - payout_cancelled
      - payout_expired
      - payout_reversed
      type: string
    ExtendedCardInfo:
      properties:
        card_number:
          description: The card number
          example: "4242424242424242"
          type: string
        card_exp_month:
          description: The card's expiry month
          example: "24"
          type: string
        card_exp_year:
          description: The card's expiry year
          example: "24"
          type: string
        card_holder_name:
          description: The card holder's name
          example: John Test
          type: string
        card_cvc:
          description: The CVC number for the card
          example: "242"
          type: string
        card_issuer:
          description: The name of the issuer of card
          example: chase
          nullable: true
          type: string
        card_network:
          allOf:
          - $ref: '#/components/schemas/CardNetwork'
          nullable: true
        card_type:
          example: CREDIT
          nullable: true
          type: string
        card_issuing_country:
          example: INDIA
          nullable: true
          type: string
        bank_code:
          example: JP_AMEX
          nullable: true
          type: string
      required:
      - card_cvc
      - card_exp_month
      - card_exp_year
      - card_holder_name
      - card_number
      type: object
    ExtendedCardInfoConfig:
      properties:
        public_key:
          description: Merchant public key
          type: string
        ttl_in_secs:
          default: 900
          description: TTL for extended card info
          format: int32
          maximum: 7200
          minimum: 0
          type: integer
      required:
      - public_key
      type: object
    ExtendedCardInfoResponse:
      properties:
        payload:
          type: string
      required:
      - payload
      type: object
    External3dsAuthenticationRequest:
      description: Whether 3ds authentication is requested or not
      enum:
      - Enable
      - Skip
      type: string
    ExternalAuthenticationDetailsResponse:
      description: Details of external authentication
      properties:
        authentication_flow:
          allOf:
          - $ref: '#/components/schemas/DecoupledAuthenticationType'
          nullable: true
        electronic_commerce_indicator:
          description: Electronic Commerce Indicator (eci)
          nullable: true
          type: string
        status:
          $ref: '#/components/schemas/AuthenticationStatus'
        ds_transaction_id:
          description: DS Transaction ID
          nullable: true
          type: string
        version:
          description: Message Version
          nullable: true
          type: string
        error_code:
          description: Error Code
          nullable: true
          type: string
        error_message:
          description: Error Message
          nullable: true
          type: string
      required:
      - status
      type: object
    FeatureMetadata:
      description: additional data that might be required by hyperswitch
      properties:
        redirect_response:
          allOf:
          - $ref: '#/components/schemas/RedirectResponse'
          nullable: true
        search_tags:
          description: Additional tags to be used for global search
          items:
            type: string
          nullable: true
          type: array
      type: object
    FieldType:
      description: Possible field type of required fields in payment_method_data
      oneOf:
      - enum:
        - user_card_number
        type: string
      - enum:
        - user_card_expiry_month
        type: string
      - enum:
        - user_card_expiry_year
        type: string
      - enum:
        - user_card_cvc
        type: string
      - enum:
        - user_full_name
        type: string
      - enum:
        - user_email_address
        type: string
      - enum:
        - user_phone_number
        type: string
      - enum:
        - user_phone_number_country_code
        type: string
      - $ref: '#/components/schemas/FieldType_oneOf'
      - $ref: '#/components/schemas/FieldType_oneOf_1'
      - enum:
        - user_crypto_currency_network
        type: string
      - enum:
        - user_billing_name
        type: string
      - enum:
        - user_address_line1
        type: string
      - enum:
        - user_address_line2
        type: string
      - enum:
        - user_address_city
        type: string
      - enum:
        - user_address_pincode
        type: string
      - enum:
        - user_address_state
        type: string
      - $ref: '#/components/schemas/FieldType_oneOf_2'
      - enum:
        - user_shipping_name
        type: string
      - enum:
        - user_shipping_address_line1
        type: string
      - enum:
        - user_shipping_address_line2
        type: string
      - enum:
        - user_shipping_address_city
        type: string
      - enum:
        - user_shipping_address_pincode
        type: string
      - enum:
        - user_shipping_address_state
        type: string
      - $ref: '#/components/schemas/FieldType_oneOf_3'
      - enum:
        - user_blik_code
        type: string
      - enum:
        - user_bank
        type: string
      - enum:
        - user_bank_account_number
        type: string
      - enum:
        - text
        type: string
      - $ref: '#/components/schemas/FieldType_oneOf_4'
      - enum:
        - user_date_of_birth
        type: string
      - enum:
        - user_vpa_id
        type: string
      - $ref: '#/components/schemas/FieldType_oneOf_5'
      - enum:
        - user_pix_key
        type: string
      - enum:
        - user_cpf
        type: string
      - enum:
        - user_cnpj
        type: string
      - enum:
        - user_iban
        type: string
      - enum:
        - browser_language
        type: string
      - enum:
        - browser_ip
        type: string
    FrmAction:
      enum:
      - cancel_txn
      - auto_refund
      - manual_review
      type: string
    FrmConfigs:
      additionalProperties: false
      description: "Details of FrmConfigs are mentioned here... it should be passed\
        \ in payment connector create api call, and stored in merchant_connector_table"
      properties:
        gateway:
          $ref: '#/components/schemas/ConnectorType'
        payment_methods:
          description: payment methods that can be used in the payment
          items:
            $ref: '#/components/schemas/FrmPaymentMethod'
          type: array
      required:
      - gateway
      - payment_methods
      type: object
    FrmMessage:
      description: "frm message is an object sent inside the payments response...when\
        \ frm is invoked, its value is Some(...), else its None"
      properties:
        frm_name:
          type: string
        frm_transaction_id:
          nullable: true
          type: string
        frm_transaction_type:
          nullable: true
          type: string
        frm_status:
          nullable: true
          type: string
        frm_score:
          format: int32
          nullable: true
          type: integer
        frm_reason:
          nullable: true
        frm_error:
          nullable: true
          type: string
      required:
      - frm_name
      type: object
    FrmPaymentMethod:
      additionalProperties: false
      description: "Details of FrmPaymentMethod are mentioned here... it should be\
        \ passed in payment connector create api call, and stored in merchant_connector_table"
      properties:
        payment_method:
          $ref: '#/components/schemas/PaymentMethod'
        payment_method_types:
          description: "payment method types(credit, debit) that can be used in the\
            \ payment. This field is deprecated. It has not been removed to provide\
            \ backward compatibility."
          items:
            $ref: '#/components/schemas/FrmPaymentMethodType'
          nullable: true
          type: array
        flow:
          allOf:
          - $ref: '#/components/schemas/FrmPreferredFlowTypes'
          nullable: true
      required:
      - payment_method
      type: object
    FrmPaymentMethodType:
      additionalProperties: false
      description: "Details of FrmPaymentMethodType are mentioned here... it should\
        \ be passed in payment connector create api call, and stored in merchant_connector_table"
      properties:
        payment_method_type:
          $ref: '#/components/schemas/PaymentMethodType'
        card_networks:
          $ref: '#/components/schemas/CardNetwork'
        flow:
          $ref: '#/components/schemas/FrmPreferredFlowTypes'
        action:
          $ref: '#/components/schemas/FrmAction'
      required:
      - action
      - card_networks
      - flow
      - payment_method_type
      type: object
    FrmPreferredFlowTypes:
      enum:
      - pre
      - post
      type: string
    FutureUsage:
      description: |-
        Indicates that you intend to make future payments with the payment methods used for this Payment. Providing this parameter will attach the payment method to the Customer, if present, after the Payment is confirmed and any required actions from the user are complete.
        - On_session - Payment method saved only at hyperswitch when consent is provided by the user. CVV will asked during the returning user payment
        - Off_session - Payment method saved at both hyperswitch and Processor when consent is provided by the user. No input is required during the returning user payment.
      enum:
      - off_session
      - on_session
      type: string
    GcashRedirection:
      type: object
    GenericLinkUiConfig:
      description: Object for GenericLinkUiConfig
      properties:
        logo:
          description: Merchant's display logo
          example: https://hyperswitch.io/favicon.ico
          maxLength: 255
          nullable: true
          type: string
        merchant_name:
          description: Custom merchant name for the link
          example: Hyperswitch
          maxLength: 255
          nullable: true
          type: string
        theme:
          description: Primary color to be used in the form represented in hex format
          example: '#4285F4'
          maxLength: 255
          nullable: true
          type: string
      type: object
    GiftCardAdditionalData:
      oneOf:
      - $ref: '#/components/schemas/GiftCardAdditionalData_oneOf'
      - $ref: '#/components/schemas/GiftCardAdditionalData_oneOf_1'
    GiftCardData:
      oneOf:
      - $ref: '#/components/schemas/GiftCardData_oneOf'
      - $ref: '#/components/schemas/GiftCardAdditionalData_oneOf_1'
    GiftCardDetails:
      properties:
        number:
          description: The gift card number
          type: string
        cvc:
          description: The card verification code.
          type: string
      required:
      - cvc
      - number
      type: object
    GiftCardResponse:
      allOf:
      - allOf:
        - $ref: '#/components/schemas/GiftCardAdditionalData'
        nullable: true
      - type: object
    GiropayBankRedirectAdditionalData:
      properties:
        bic:
          description: Masked bank account bic code
          nullable: true
          type: string
        iban:
          description: Partially masked international bank account number (iban) for
            SEPA
          nullable: true
          type: string
        country:
          allOf:
          - $ref: '#/components/schemas/CountryAlpha2'
          nullable: true
      type: object
    GivexGiftCardAdditionalData:
      properties:
        last4:
          description: Last 4 digits of the gift card number
          example: "4242"
          type: string
      required:
      - last4
      type: object
    GoPayRedirection:
      type: object
    GooglePayAssuranceDetails:
      properties:
        card_holder_authenticated:
          description: indicates that Cardholder possession validation has been performed
          type: boolean
        account_verified:
          description: indicates that identification and verifications (ID&V) was
            performed
          type: boolean
      required:
      - account_verified
      - card_holder_authenticated
      type: object
    GooglePayPaymentMethodInfo:
      properties:
        card_network:
          description: The name of the card network
          type: string
        card_details:
          description: The details of the card
          type: string
        assurance_details:
          allOf:
          - $ref: '#/components/schemas/GooglePayAssuranceDetails'
          nullable: true
      required:
      - card_details
      - card_network
      type: object
    GooglePayRedirectData:
      type: object
    GooglePaySessionResponse:
      properties:
        merchant_info:
          $ref: '#/components/schemas/GpayMerchantInfo'
        shipping_address_required:
          description: Is shipping address required
          type: boolean
        email_required:
          description: Is email required
          type: boolean
        shipping_address_parameters:
          $ref: '#/components/schemas/GpayShippingAddressParameters'
        allowed_payment_methods:
          description: List of the allowed payment meythods
          items:
            $ref: '#/components/schemas/GpayAllowedPaymentMethods'
          type: array
        transaction_info:
          $ref: '#/components/schemas/GpayTransactionInfo'
        delayed_session_token:
          description: Identifier for the delayed session response
          type: boolean
        connector:
          description: The name of the connector
          type: string
        sdk_next_action:
          $ref: '#/components/schemas/SdkNextAction'
        secrets:
          allOf:
          - $ref: '#/components/schemas/SecretInfoToInitiateSdk'
          nullable: true
      required:
      - allowed_payment_methods
      - connector
      - delayed_session_token
      - email_required
      - merchant_info
      - sdk_next_action
      - shipping_address_parameters
      - shipping_address_required
      - transaction_info
      type: object
    GooglePayThirdPartySdk:
      properties:
        delayed_session_token:
          description: Identifier for the delayed session response
          type: boolean
        connector:
          description: The name of the connector
          type: string
        sdk_next_action:
          $ref: '#/components/schemas/SdkNextAction'
      required:
      - connector
      - delayed_session_token
      - sdk_next_action
      type: object
    GooglePayThirdPartySdkData:
      type: object
    GooglePayWalletData:
      properties:
        type:
          description: The type of payment method
          type: string
        description:
          description: User-facing message to describe the payment method that funds
            this transaction.
          type: string
        info:
          $ref: '#/components/schemas/GooglePayPaymentMethodInfo'
        tokenization_data:
          $ref: '#/components/schemas/GpayTokenizationData'
      required:
      - description
      - info
      - tokenization_data
      - type
      type: object
    GpayAllowedMethodsParameters:
      properties:
        allowed_auth_methods:
          description: "The list of allowed auth methods (ex: 3DS, No3DS, PAN_ONLY\
            \ etc)"
          items:
            type: string
          type: array
        allowed_card_networks:
          description: "The list of allowed card networks (ex: AMEX,JCB etc)"
          items:
            type: string
          type: array
        billing_address_required:
          description: Is billing address required
          nullable: true
          type: boolean
        billing_address_parameters:
          allOf:
          - $ref: '#/components/schemas/GpayBillingAddressParameters'
          nullable: true
        assurance_details_required:
          description: Whether assurance details are required
          nullable: true
          type: boolean
      required:
      - allowed_auth_methods
      - allowed_card_networks
      type: object
    GpayAllowedPaymentMethods:
      properties:
        type:
          description: The type of payment method
          type: string
        parameters:
          $ref: '#/components/schemas/GpayAllowedMethodsParameters'
        tokenization_specification:
          $ref: '#/components/schemas/GpayTokenizationSpecification'
      required:
      - parameters
      - tokenization_specification
      - type
      type: object
    GpayBillingAddressFormat:
      enum:
      - FULL
      - MIN
      type: string
    GpayBillingAddressParameters:
      properties:
        phone_number_required:
          description: Is billing phone number required
          type: boolean
        format:
          $ref: '#/components/schemas/GpayBillingAddressFormat'
      required:
      - format
      - phone_number_required
      type: object
    GpayMerchantInfo:
      properties:
        merchant_id:
          description: The merchant Identifier that needs to be passed while invoking
            Gpay SDK
          nullable: true
          type: string
        merchant_name:
          description: The name of the merchant that needs to be displayed on Gpay
            PopUp
          type: string
      required:
      - merchant_name
      type: object
    GpaySessionTokenResponse:
      oneOf:
      - $ref: '#/components/schemas/GooglePayThirdPartySdk'
      - $ref: '#/components/schemas/GooglePaySessionResponse'
    GpayShippingAddressParameters:
      properties:
        phone_number_required:
          description: Is shipping phone number required
          type: boolean
      required:
      - phone_number_required
      type: object
    GpayTokenParameters:
      properties:
        gateway:
          description: The name of the connector
          type: string
        gateway_merchant_id:
          description: The merchant ID registered in the connector associated
          nullable: true
          type: string
        stripe:version:
          nullable: true
          type: string
        stripe:publishableKey:
          nullable: true
          type: string
      required:
      - gateway
      type: object
    GpayTokenizationData:
      properties:
        type:
          description: The type of the token
          type: string
        token:
          description: Token generated for the wallet
          type: string
      required:
      - token
      - type
      type: object
    GpayTokenizationSpecification:
      properties:
        type:
          description: "The token specification type(ex: PAYMENT_GATEWAY)"
          type: string
        parameters:
          $ref: '#/components/schemas/GpayTokenParameters'
      required:
      - parameters
      - type
      type: object
    GpayTransactionInfo:
      properties:
        country_code:
          $ref: '#/components/schemas/CountryAlpha2'
        currency_code:
          $ref: '#/components/schemas/Currency'
        total_price_status:
          description: "The total price status (ex: 'FINAL')"
          type: string
        total_price:
          description: The total price
          example: "38.02"
          type: string
      required:
      - country_code
      - currency_code
      - total_price
      - total_price_status
      type: object
    GsmCreateRequest:
      properties:
        connector:
          $ref: '#/components/schemas/Connector'
        flow:
          description: The flow in which the code and message occurred for a connector
          type: string
        sub_flow:
          description: The sub_flow in which the code and message occurred  for a
            connector
          type: string
        code:
          description: code received from the connector
          type: string
        message:
          description: message received from the connector
          type: string
        status:
          description: status provided by the router
          type: string
        router_error:
          description: optional error provided by the router
          nullable: true
          type: string
        decision:
          $ref: '#/components/schemas/GsmDecision'
        step_up_possible:
          description: indicates if step_up retry is possible
          type: boolean
        unified_code:
          description: error code unified across the connectors
          nullable: true
          type: string
        unified_message:
          description: error message unified across the connectors
          nullable: true
          type: string
      required:
      - code
      - connector
      - decision
      - flow
      - message
      - status
      - step_up_possible
      - sub_flow
      type: object
    GsmDecision:
      enum:
      - retry
      - requeue
      - do_default
      type: string
    GsmDeleteRequest:
      properties:
        connector:
          description: The connector through which payment has gone through
          type: string
        flow:
          description: The flow in which the code and message occurred for a connector
          type: string
        sub_flow:
          description: The sub_flow in which the code and message occurred  for a
            connector
          type: string
        code:
          description: code received from the connector
          type: string
        message:
          description: message received from the connector
          type: string
      required:
      - code
      - connector
      - flow
      - message
      - sub_flow
      type: object
    GsmDeleteResponse:
      properties:
        gsm_rule_delete:
          type: boolean
        connector:
          description: The connector through which payment has gone through
          type: string
        flow:
          description: The flow in which the code and message occurred for a connector
          type: string
        sub_flow:
          description: The sub_flow in which the code and message occurred  for a
            connector
          type: string
        code:
          description: code received from the connector
          type: string
      required:
      - code
      - connector
      - flow
      - gsm_rule_delete
      - sub_flow
      type: object
    GsmResponse:
      properties:
        connector:
          description: The connector through which payment has gone through
          type: string
        flow:
          description: The flow in which the code and message occurred for a connector
          type: string
        sub_flow:
          description: The sub_flow in which the code and message occurred  for a
            connector
          type: string
        code:
          description: code received from the connector
          type: string
        message:
          description: message received from the connector
          type: string
        status:
          description: status provided by the router
          type: string
        router_error:
          description: optional error provided by the router
          nullable: true
          type: string
        decision:
          description: decision to be taken for auto retries flow
          type: string
        step_up_possible:
          description: indicates if step_up retry is possible
          type: boolean
        unified_code:
          description: error code unified across the connectors
          nullable: true
          type: string
        unified_message:
          description: error message unified across the connectors
          nullable: true
          type: string
      required:
      - code
      - connector
      - decision
      - flow
      - message
      - status
      - step_up_possible
      - sub_flow
      type: object
    GsmRetrieveRequest:
      properties:
        connector:
          $ref: '#/components/schemas/Connector'
        flow:
          description: The flow in which the code and message occurred for a connector
          type: string
        sub_flow:
          description: The sub_flow in which the code and message occurred  for a
            connector
          type: string
        code:
          description: code received from the connector
          type: string
        message:
          description: message received from the connector
          type: string
      required:
      - code
      - connector
      - flow
      - message
      - sub_flow
      type: object
    GsmUpdateRequest:
      properties:
        connector:
          description: The connector through which payment has gone through
          type: string
        flow:
          description: The flow in which the code and message occurred for a connector
          type: string
        sub_flow:
          description: The sub_flow in which the code and message occurred  for a
            connector
          type: string
        code:
          description: code received from the connector
          type: string
        message:
          description: message received from the connector
          type: string
        status:
          description: status provided by the router
          nullable: true
          type: string
        router_error:
          description: optional error provided by the router
          nullable: true
          type: string
        decision:
          allOf:
          - $ref: '#/components/schemas/GsmDecision'
          nullable: true
        step_up_possible:
          description: indicates if step_up retry is possible
          nullable: true
          type: boolean
        unified_code:
          description: error code unified across the connectors
          nullable: true
          type: string
        unified_message:
          description: error message unified across the connectors
          nullable: true
          type: string
      required:
      - code
      - connector
      - flow
      - message
      - sub_flow
      type: object
    IfStatement:
      description: |-
        Represents an IF statement with conditions and optional nested IF statements

        ```text
        payment.method = card {
        payment.method.cardtype = (credit, debit) {
        payment.method.network = (amex, rupay, diners)
        }
        }
        ```
      properties:
        condition:
          items:
            $ref: '#/components/schemas/Comparison'
          type: array
        nested:
          items:
            $ref: '#/components/schemas/IfStatement'
          nullable: true
          type: array
      required:
      - condition
      type: object
    IncrementalAuthorizationResponse:
      properties:
        authorization_id:
          description: The unique identifier of authorization
          type: string
        amount:
          description: Amount the authorization has been made for
          example: 6540
          format: int64
          type: integer
        status:
          $ref: '#/components/schemas/AuthorizationStatus'
        error_code:
          description: Error code sent by the connector for authorization
          nullable: true
          type: string
        error_message:
          description: Error message sent by the connector for authorization
          nullable: true
          type: string
        previously_authorized_amount:
          description: This Unit struct represents MinorUnit in which core amount
            works
          format: int64
          type: integer
      required:
      - amount
      - authorization_id
      - previously_authorized_amount
      - status
      type: object
    IndomaretVoucherData:
      properties:
        first_name:
          description: The billing first name for Alfamart
          example: Jane
          nullable: true
          type: string
        last_name:
          description: The billing second name for Alfamart
          example: Doe
          nullable: true
          type: string
        email:
          description: The Email ID for Alfamart
          example: example@me.com
          nullable: true
          type: string
      type: object
    IntentStatus:
      description: The status of the current payment that was made
      enum:
      - succeeded
      - failed
      - cancelled
      - processing
      - requires_customer_action
      - requires_merchant_action
      - requires_payment_method
      - requires_confirmation
      - requires_capture
      - partially_captured
      - partially_captured_and_capturable
      type: string
    JCSVoucherData:
      properties:
        first_name:
          description: The billing first name for Japanese convenience stores
          example: Jane
          nullable: true
          type: string
        last_name:
          description: The billing second name Japanese convenience stores
          example: Doe
          nullable: true
          type: string
        email:
          description: The Email ID for Japanese convenience stores
          example: example@me.com
          nullable: true
          type: string
        phone_number:
          description: The telephone number for Japanese convenience stores
          example: "9123456789"
          nullable: true
          type: string
      type: object
    KakaoPayRedirection:
      type: object
    KlarnaSdkPaymentMethodResponse:
      properties:
        payment_type:
          nullable: true
          type: string
      type: object
    KlarnaSessionTokenResponse:
      properties:
        session_token:
          description: The session token for Klarna
          type: string
        session_id:
          description: The identifier for the session
          type: string
      required:
      - session_id
      - session_token
      type: object
    LinkedRoutingConfigRetrieveResponse:
      oneOf:
      - $ref: '#/components/schemas/RoutingRetrieveResponse'
      - items:
          $ref: '#/components/schemas/RoutingDictionaryRecord'
        type: array
    ListBlocklistQuery:
      properties:
        data_kind:
          $ref: '#/components/schemas/BlocklistDataKind'
        limit:
          format: int32
          minimum: 0
          type: integer
        offset:
          format: int32
          minimum: 0
          type: integer
      required:
      - data_kind
      type: object
    LocalBankTransferAdditionalData:
      properties:
        bank_code:
          description: Partially masked bank code
          example: '**** OA2312'
          nullable: true
          type: string
      type: object
    MandateAmountData:
      properties:
        amount:
          description: The maximum amount to be debited for the mandate transaction
          example: 6540
          format: int64
          type: integer
        currency:
          $ref: '#/components/schemas/Currency'
        start_date:
          description: Specifying start date of the mandate
          example: 2022-09-10T00:00:00Z
          format: date-time
          nullable: true
          type: string
        end_date:
          description: Specifying end date of the mandate
          example: 2023-09-10T23:59:59Z
          format: date-time
          nullable: true
          type: string
        metadata:
          description: Additional details required by mandate
          nullable: true
          type: object
      required:
      - amount
      - currency
      type: object
    MandateCardDetails:
      properties:
        last4_digits:
          description: The last 4 digits of card
          nullable: true
          type: string
        card_exp_month:
          description: The expiry month of card
          nullable: true
          type: string
        card_exp_year:
          description: The expiry year of card
          nullable: true
          type: string
        card_holder_name:
          description: The card holder name
          nullable: true
          type: string
        card_token:
          description: The token from card locker
          nullable: true
          type: string
        scheme:
          description: The card scheme network for the particular card
          nullable: true
          type: string
        issuer_country:
          description: The country code in in which the card was issued
          nullable: true
          type: string
        card_fingerprint:
          description: A unique identifier alias to identify a particular card
          nullable: true
          type: string
        card_isin:
          description: The first 6 digits of card
          nullable: true
          type: string
        card_issuer:
          description: The bank that issued the card
          nullable: true
          type: string
        card_network:
          allOf:
          - $ref: '#/components/schemas/CardNetwork'
          nullable: true
        card_type:
          description: The type of the payment card
          nullable: true
          type: string
        nick_name:
          description: The nick_name of the card holder
          nullable: true
          type: string
      type: object
    MandateData:
      additionalProperties: false
      description: Passing this object during payments creates a mandate. The mandate_type
        sub object is passed by the server.
      properties:
        update_mandate_id:
          description: A way to update the mandate's payment method details
          nullable: true
          type: string
        customer_acceptance:
          allOf:
          - $ref: '#/components/schemas/CustomerAcceptance'
          nullable: true
        mandate_type:
          allOf:
          - $ref: '#/components/schemas/MandateType'
          nullable: true
      type: object
    MandateResponse:
      properties:
        mandate_id:
          description: The identifier for mandate
          type: string
        status:
          $ref: '#/components/schemas/MandateStatus'
        payment_method_id:
          description: The identifier for payment method
          type: string
        payment_method:
          description: The payment method
          type: string
        payment_method_type:
          description: The payment method type
          nullable: true
          type: string
        card:
          allOf:
          - $ref: '#/components/schemas/MandateCardDetails'
          nullable: true
        customer_acceptance:
          allOf:
          - $ref: '#/components/schemas/CustomerAcceptance'
          nullable: true
      required:
      - mandate_id
      - payment_method
      - payment_method_id
      - status
      type: object
    MandateRevokedResponse:
      properties:
        mandate_id:
          description: The identifier for mandate
          type: string
        status:
          $ref: '#/components/schemas/MandateStatus'
        error_code:
          description: If there was an error while calling the connectors the code
            is received here
          example: E0001
          nullable: true
          type: string
        error_message:
          description: If there was an error while calling the connector the error
            message is received here
          example: Failed while verifying the card
          nullable: true
          type: string
      required:
      - mandate_id
      - status
      type: object
    MandateStatus:
      description: "The status of the mandate, which indicates whether it can be used\
        \ to initiate a payment."
      enum:
      - active
      - inactive
      - pending
      - revoked
      type: string
    MandateType:
      oneOf:
      - $ref: '#/components/schemas/MandateType_oneOf'
      - $ref: '#/components/schemas/MandateType_oneOf_1'
    MaskedBankDetails:
      properties:
        mask:
          type: string
      required:
      - mask
      type: object
    MbWayRedirection:
      properties:
        telephone_number:
          description: Telephone number of the shopper. Should be Portuguese phone
            number.
          type: string
      required:
      - telephone_number
      type: object
    MerchantAccountCreate:
      additionalProperties: false
      example:
        metadata: "{}"
        merchant_details: ""
        merchant_name: NewAge Retailer
      properties:
        merchant_name:
          description: "Name of the Merchant Account, This will be used as a prefix\
            \ to generate the id"
          example: NewAge Retailer
          maxLength: 64
          type: string
        merchant_details:
          allOf:
          - $ref: '#/components/schemas/MerchantDetails'
          nullable: true
        metadata:
          description: "Metadata is useful for storing additional, unstructured information\
            \ about the merchant account."
          nullable: true
          type: object
      required:
      - merchant_name
      type: object
    MerchantAccountData:
      oneOf:
      - $ref: '#/components/schemas/MerchantAccountData_oneOf'
      - $ref: '#/components/schemas/MerchantAccountData_oneOf_1'
    MerchantAccountDeleteResponse:
      properties:
        merchant_id:
          description: The identifier for the Merchant Account
          example: y3oqhf46pyzuxjbcn2giaqnb44
          maxLength: 255
          type: string
        deleted:
          description: If the connector is deleted or not
          example: false
          type: boolean
      required:
      - deleted
      - merchant_id
      type: object
    MerchantAccountResponse:
      example:
        metadata: "{}"
        merchant_details: ""
        publishable_key: AH3423bkjbkjdsfbkj
        organization_id: org_q98uSGAYbjEwqs0mJwnz
        merchant_name: NewAge Retailer
        recon_status: not_requested
        id: y3oqhf46pyzuxjbcn2giaqnb44
      properties:
        id:
          description: The identifier for the Merchant Account
          example: y3oqhf46pyzuxjbcn2giaqnb44
          maxLength: 64
          type: string
        merchant_name:
          description: Name of the Merchant Account
          example: NewAge Retailer
          type: string
        merchant_details:
          allOf:
          - $ref: '#/components/schemas/MerchantDetails'
          nullable: true
        publishable_key:
          description: API key that will be used for server side API access
          example: AH3423bkjbkjdsfbkj
          type: string
        metadata:
          description: "Metadata is useful for storing additional, unstructured information\
            \ on an object."
          nullable: true
          type: object
        organization_id:
          description: The id of the organization which the merchant is associated
            with
          example: org_q98uSGAYbjEwqs0mJwnz
          maxLength: 64
          minLength: 1
          type: string
        recon_status:
          $ref: '#/components/schemas/ReconStatus'
      required:
      - id
      - merchant_name
      - organization_id
      - publishable_key
      - recon_status
      type: object
    MerchantAccountUpdate:
      additionalProperties: false
      example:
        metadata: "{}"
        merchant_details: ""
        merchant_name: NewAge Retailer
      properties:
        merchant_name:
          description: Name of the Merchant Account
          example: NewAge Retailer
          nullable: true
          type: string
        merchant_details:
          allOf:
          - $ref: '#/components/schemas/MerchantDetails'
          nullable: true
        metadata:
          description: "Metadata is useful for storing additional, unstructured information\
            \ on an object."
          nullable: true
          type: object
      type: object
    MerchantConnectorCreate:
      additionalProperties: false
      description: Create a new Merchant Connector for the merchant account. The connector
        could be a payment processor / facilitator / acquirer or specialized services
        like Fraud / Accounting etc."
      example:
        metadata: "{}"
        frm_configs: |2

          [{"gateway":"stripe","payment_methods":[{"payment_method":"card","payment_method_types":[{"payment_method_type":"credit","card_networks":["Visa"],"flow":"pre","action":"cancel_txn"},{"payment_method_type":"debit","card_networks":["Visa"],"flow":"pre"}]}]}]
        connector_webhook_details: ""
        connector_name: adyenplatform
        connector_label: stripe_US_travel
        pm_auth_config: "{}"
        profile_id: profile_id
        connector_type: payment_processor
        connector_wallets_details: ""
        payment_methods_enabled:
        - accepted_countries:
            list:
            - FR
            - DE
            - IN
            type: disable_only
          accepted_currencies:
            list:
            - USD
            - EUR
            type: enable_only
          installment_payment_enabled: true
          maximum_amount: 68607706
          minimum_amount: 1
          payment_method: wallet
          payment_method_issuers:
          - labore magna ipsum
          - aute
          payment_method_types:
          - upi_collect
          - upi_intent
          payment_schemes:
          - Discover
          - Discover
          recurring_enabled: true
        additional_merchant_data: ""
        connector_account_details: ""
        disabled: false
        status: ""
      properties:
        connector_type:
          $ref: '#/components/schemas/ConnectorType'
        connector_name:
          $ref: '#/components/schemas/Connector'
        connector_label:
          description: "This is an unique label you can generate and pass in order\
            \ to identify this connector account on your Hyperswitch dashboard and\
            \ reports, If not passed then if will take `connector_name`_`profile_name`.\
            \ Eg: if your profile label is `default`, connector label can be `stripe_default`"
          example: stripe_US_travel
          nullable: true
          type: string
        profile_id:
          description: "Identifier for the profile, if not provided default will be\
            \ chosen from merchant account"
          maxLength: 64
          type: string
        connector_account_details:
          allOf:
          - $ref: '#/components/schemas/MerchantConnectorDetails'
          nullable: true
        payment_methods_enabled:
          description: An object containing the details about the payment methods
            that need to be enabled under this merchant connector account
          example:
          - accepted_countries:
              list:
              - FR
              - DE
              - IN
              type: disable_only
            accepted_currencies:
              list:
              - USD
              - EUR
              type: enable_only
            installment_payment_enabled: true
            maximum_amount: 68607706
            minimum_amount: 1
            payment_method: wallet
            payment_method_issuers:
            - labore magna ipsum
            - aute
            payment_method_types:
            - upi_collect
            - upi_intent
            payment_schemes:
            - Discover
            - Discover
            recurring_enabled: true
          items:
            $ref: '#/components/schemas/PaymentMethodsEnabled'
          nullable: true
          type: array
        connector_webhook_details:
          allOf:
          - $ref: '#/components/schemas/MerchantConnectorWebhookDetails'
          nullable: true
        metadata:
          description: "Metadata is useful for storing additional, unstructured information\
            \ on an object."
          nullable: true
          type: object
        disabled:
          default: false
          description: "A boolean value to indicate if the connector is disabled.\
            \ By default, its value is false."
          example: false
          nullable: true
          type: boolean
        frm_configs:
          description: Contains the frm configs for the merchant connector
          example: |2

            [{"gateway":"stripe","payment_methods":[{"payment_method":"card","payment_method_types":[{"payment_method_type":"credit","card_networks":["Visa"],"flow":"pre","action":"cancel_txn"},{"payment_method_type":"debit","card_networks":["Visa"],"flow":"pre"}]}]}]
          items:
            $ref: '#/components/schemas/FrmConfigs'
          nullable: true
          type: array
        pm_auth_config:
          description: "pm_auth_config will relate MCA records to their respective\
            \ chosen auth services, based on payment_method and pmt"
          nullable: true
          type: object
        status:
          allOf:
          - $ref: '#/components/schemas/ConnectorStatus'
          nullable: true
        additional_merchant_data:
          allOf:
          - $ref: '#/components/schemas/AdditionalMerchantData'
          nullable: true
        connector_wallets_details:
          allOf:
          - $ref: '#/components/schemas/ConnectorWalletDetails'
          nullable: true
      required:
      - connector_name
      - connector_type
      - profile_id
      type: object
    MerchantConnectorDeleteResponse:
      example:
        deleted: false
        merchant_id: y3oqhf46pyzuxjbcn2giaqnb44
        id: mca_5apGeP94tMts6rg3U3kR
      properties:
        merchant_id:
          description: The identifier for the Merchant Account
          example: y3oqhf46pyzuxjbcn2giaqnb44
          maxLength: 255
          type: string
        id:
          description: Unique ID of the connector
          example: mca_5apGeP94tMts6rg3U3kR
          type: string
        deleted:
          description: If the connector is deleted or not
          example: false
          type: boolean
      required:
      - deleted
      - id
      - merchant_id
      type: object
    MerchantConnectorDetails:
      properties:
        connector_account_details:
          description: "Account details of the Connector. You can specify up to 50\
            \ keys, with key names up to 40 characters long and values up to 500 characters\
            \ long. Useful for storing additional, structured information on an object."
          nullable: true
          type: object
        metadata:
          description: "Metadata is useful for storing additional, unstructured information\
            \ on an object."
          nullable: true
          type: object
      type: object
    MerchantConnectorDetailsWrap:
      description: Merchant connector details used to make payments.
      properties:
        creds_identifier:
          description: "Creds Identifier is to uniquely identify the credentials.\
            \ Do not send any sensitive info, like encoded_data in this field. And\
            \ do not send the string \"null\"."
          type: string
        encoded_data:
          allOf:
          - $ref: '#/components/schemas/MerchantConnectorDetails'
          nullable: true
      required:
      - creds_identifier
      type: object
    MerchantConnectorId:
      properties:
        id:
          type: string
      required:
      - id
      type: object
    MerchantConnectorListResponse:
      additionalProperties: false
      properties:
        connector_type:
          $ref: '#/components/schemas/ConnectorType'
        connector_name:
          $ref: '#/components/schemas/Connector'
        connector_label:
          description: A unique label to identify the connector account created under
            a profile
          example: stripe_US_travel
          nullable: true
          type: string
        id:
          description: Unique ID of the merchant connector account
          example: mca_5apGeP94tMts6rg3U3kR
          type: string
        profile_id:
          description: "Identifier for the profile, if not provided default will be\
            \ chosen from merchant account"
          maxLength: 64
          type: string
        payment_methods_enabled:
          description: An object containing the details about the payment methods
            that need to be enabled under this merchant connector account
          example:
          - accepted_countries:
              list:
              - FR
              - DE
              - IN
              type: disable_only
            accepted_currencies:
              list:
              - USD
              - EUR
              type: enable_only
            installment_payment_enabled: true
            maximum_amount: 68607706
            minimum_amount: 1
            payment_method: wallet
            payment_method_issuers:
            - labore magna ipsum
            - aute
            payment_method_types:
            - upi_collect
            - upi_intent
            payment_schemes:
            - Discover
            - Discover
            recurring_enabled: true
          items:
            $ref: '#/components/schemas/PaymentMethodsEnabled'
          nullable: true
          type: array
        metadata:
          description: "Metadata is useful for storing additional, unstructured information\
            \ on an object."
          nullable: true
          type: object
        disabled:
          default: false
          description: "A boolean value to indicate if the connector is disabled.\
            \ By default, its value is false."
          example: false
          nullable: true
          type: boolean
        frm_configs:
          description: Contains the frm configs for the merchant connector
          example: |2

            [{"gateway":"stripe","payment_methods":[{"payment_method":"card","payment_method_types":[{"payment_method_type":"credit","card_networks":["Visa"],"flow":"pre","action":"cancel_txn"},{"payment_method_type":"debit","card_networks":["Visa"],"flow":"pre"}]}]}]
          items:
            $ref: '#/components/schemas/FrmConfigs'
          nullable: true
          type: array
        applepay_verified_domains:
          description: identifier for the verified domains of a particular connector
            account
          items:
            type: string
          nullable: true
          type: array
        pm_auth_config:
          nullable: true
          type: object
        status:
          $ref: '#/components/schemas/ConnectorStatus'
        additional_merchant_data:
          allOf:
          - $ref: '#/components/schemas/AdditionalMerchantData'
          nullable: true
        connector_wallets_details:
          allOf:
          - $ref: '#/components/schemas/ConnectorWalletDetails'
          nullable: true
      required:
      - connector_name
      - connector_type
      - id
      - profile_id
      - status
      type: object
    MerchantConnectorResponse:
      additionalProperties: false
      description: Response of creating a new Merchant Connector for the merchant
        account."
      example:
        metadata: "{}"
        frm_configs: |2

          [{"gateway":"stripe","payment_methods":[{"payment_method":"card","payment_method_types":[{"payment_method_type":"credit","card_networks":["Visa"],"flow":"pre","action":"cancel_txn"},{"payment_method_type":"debit","card_networks":["Visa"],"flow":"pre"}]}]}]
        connector_webhook_details: ""
        connector_name: adyenplatform
        connector_label: stripe_US_travel
        applepay_verified_domains:
        - applepay_verified_domains
        - applepay_verified_domains
        pm_auth_config: "{}"
        profile_id: profile_id
        connector_type: payment_processor
        connector_wallets_details: ""
        payment_methods_enabled:
        - accepted_countries:
            list:
            - FR
            - DE
            - IN
            type: disable_only
          accepted_currencies:
            list:
            - USD
            - EUR
            type: enable_only
          installment_payment_enabled: true
          maximum_amount: 68607706
          minimum_amount: 1
          payment_method: wallet
          payment_method_issuers:
          - labore magna ipsum
          - aute
          payment_method_types:
          - upi_collect
          - upi_intent
          payment_schemes:
          - Discover
          - Discover
          recurring_enabled: true
        additional_merchant_data: ""
        connector_account_details: ""
        disabled: false
        id: mca_5apGeP94tMts6rg3U3kR
        status: inactive
      properties:
        connector_type:
          $ref: '#/components/schemas/ConnectorType'
        connector_name:
          $ref: '#/components/schemas/Connector'
        connector_label:
          description: A unique label to identify the connector account created under
            a profile
          example: stripe_US_travel
          nullable: true
          type: string
        id:
          description: Unique ID of the merchant connector account
          example: mca_5apGeP94tMts6rg3U3kR
          type: string
        profile_id:
          description: "Identifier for the profile, if not provided default will be\
            \ chosen from merchant account"
          maxLength: 64
          type: string
        connector_account_details:
          allOf:
          - $ref: '#/components/schemas/MerchantConnectorDetails'
          nullable: true
        payment_methods_enabled:
          description: An object containing the details about the payment methods
            that need to be enabled under this merchant connector account
          example:
          - accepted_countries:
              list:
              - FR
              - DE
              - IN
              type: disable_only
            accepted_currencies:
              list:
              - USD
              - EUR
              type: enable_only
            installment_payment_enabled: true
            maximum_amount: 68607706
            minimum_amount: 1
            payment_method: wallet
            payment_method_issuers:
            - labore magna ipsum
            - aute
            payment_method_types:
            - upi_collect
            - upi_intent
            payment_schemes:
            - Discover
            - Discover
            recurring_enabled: true
          items:
            $ref: '#/components/schemas/PaymentMethodsEnabled'
          nullable: true
          type: array
        connector_webhook_details:
          allOf:
          - $ref: '#/components/schemas/MerchantConnectorWebhookDetails'
          nullable: true
        metadata:
          description: "Metadata is useful for storing additional, unstructured information\
            \ on an object."
          nullable: true
          type: object
        disabled:
          default: false
          description: "A boolean value to indicate if the connector is disabled.\
            \ By default, its value is false."
          example: false
          nullable: true
          type: boolean
        frm_configs:
          description: Contains the frm configs for the merchant connector
          example: |2

            [{"gateway":"stripe","payment_methods":[{"payment_method":"card","payment_method_types":[{"payment_method_type":"credit","card_networks":["Visa"],"flow":"pre","action":"cancel_txn"},{"payment_method_type":"debit","card_networks":["Visa"],"flow":"pre"}]}]}]
          items:
            $ref: '#/components/schemas/FrmConfigs'
          nullable: true
          type: array
        applepay_verified_domains:
          description: identifier for the verified domains of a particular connector
            account
          items:
            type: string
          nullable: true
          type: array
        pm_auth_config:
          description: "pm_auth_config will relate MCA records to their respective\
            \ chosen auth services, based on payment_method and pmt"
          nullable: true
          type: object
        status:
          $ref: '#/components/schemas/ConnectorStatus'
        additional_merchant_data:
          allOf:
          - $ref: '#/components/schemas/AdditionalMerchantData'
          nullable: true
        connector_wallets_details:
          allOf:
          - $ref: '#/components/schemas/ConnectorWalletDetails'
          nullable: true
      required:
      - connector_name
      - connector_type
      - id
      - profile_id
      - status
      type: object
    MerchantConnectorUpdate:
      additionalProperties: false
      description: Create a new Merchant Connector for the merchant account. The connector
        could be a payment processor / facilitator / acquirer or specialized services
        like Fraud / Accounting etc."
      example:
        metadata: "{}"
        frm_configs: |2

          [{"gateway":"stripe","payment_methods":[{"payment_method":"card","payment_method_types":[{"payment_method_type":"credit","card_networks":["Visa"],"flow":"pre","action":"cancel_txn"},{"payment_method_type":"debit","card_networks":["Visa"],"flow":"pre"}]}]}]
        connector_webhook_details: ""
        merchant_id: y3oqhf46pyzuxjbcn2giaqnb44
        connector_label: stripe_US_travel
        pm_auth_config: "{}"
        connector_type: payment_processor
        connector_wallets_details: ""
        payment_methods_enabled:
        - accepted_countries:
            list:
            - FR
            - DE
            - IN
            type: disable_only
          accepted_currencies:
            list:
            - USD
            - EUR
            type: enable_only
          installment_payment_enabled: true
          maximum_amount: 68607706
          minimum_amount: 1
          payment_method: wallet
          payment_method_issuers:
          - labore magna ipsum
          - aute
          payment_method_types:
          - upi_collect
          - upi_intent
          payment_schemes:
          - Discover
          - Discover
          recurring_enabled: true
        additional_merchant_data: ""
        connector_account_details: ""
        disabled: false
        status: inactive
      properties:
        connector_type:
          $ref: '#/components/schemas/ConnectorType'
        connector_label:
          description: "This is an unique label you can generate and pass in order\
            \ to identify this connector account on your Hyperswitch dashboard and\
            \ reports, If not passed then if will take `connector_name`_`profile_name`.\
            \ Eg: if your profile label is `default`, connector label can be `stripe_default`"
          example: stripe_US_travel
          nullable: true
          type: string
        connector_account_details:
          allOf:
          - $ref: '#/components/schemas/MerchantConnectorDetails'
          nullable: true
        payment_methods_enabled:
          description: An object containing the details about the payment methods
            that need to be enabled under this merchant connector account
          example:
          - accepted_countries:
              list:
              - FR
              - DE
              - IN
              type: disable_only
            accepted_currencies:
              list:
              - USD
              - EUR
              type: enable_only
            installment_payment_enabled: true
            maximum_amount: 68607706
            minimum_amount: 1
            payment_method: wallet
            payment_method_issuers:
            - labore magna ipsum
            - aute
            payment_method_types:
            - upi_collect
            - upi_intent
            payment_schemes:
            - Discover
            - Discover
            recurring_enabled: true
          items:
            $ref: '#/components/schemas/PaymentMethodsEnabled'
          nullable: true
          type: array
        connector_webhook_details:
          allOf:
          - $ref: '#/components/schemas/MerchantConnectorWebhookDetails'
          nullable: true
        metadata:
          description: "You can specify up to 50 keys, with key names up to 40 characters\
            \ long and values up to 500 characters long. Metadata is useful for storing\
            \ additional, structured information on an object."
          nullable: true
          type: object
        disabled:
          default: false
          description: "A boolean value to indicate if the connector is disabled.\
            \ By default, its value is false."
          example: false
          nullable: true
          type: boolean
        frm_configs:
          description: Contains the frm configs for the merchant connector
          example: |2

            [{"gateway":"stripe","payment_methods":[{"payment_method":"card","payment_method_types":[{"payment_method_type":"credit","card_networks":["Visa"],"flow":"pre","action":"cancel_txn"},{"payment_method_type":"debit","card_networks":["Visa"],"flow":"pre"}]}]}]
          items:
            $ref: '#/components/schemas/FrmConfigs'
          nullable: true
          type: array
        pm_auth_config:
          description: "pm_auth_config will relate MCA records to their respective\
            \ chosen auth services, based on payment_method and pmt"
          nullable: true
          type: object
        status:
          $ref: '#/components/schemas/ConnectorStatus'
        merchant_id:
          description: The identifier for the Merchant Account
          example: y3oqhf46pyzuxjbcn2giaqnb44
          maxLength: 64
          minLength: 1
          type: string
        additional_merchant_data:
          allOf:
          - $ref: '#/components/schemas/AdditionalMerchantData'
          nullable: true
        connector_wallets_details:
          allOf:
          - $ref: '#/components/schemas/ConnectorWalletDetails'
          nullable: true
      required:
      - connector_type
      - merchant_id
      - status
      type: object
    MerchantConnectorWebhookDetails:
      additionalProperties: false
      properties:
        merchant_secret:
          example: "12345678900987654321"
          type: string
        additional_secret:
          example: "12345678900987654321"
          type: string
      required:
      - additional_secret
      - merchant_secret
      type: object
    MerchantDetails:
      additionalProperties: false
      properties:
        primary_contact_person:
          description: The merchant's primary contact name
          example: John Doe
          maxLength: 255
          nullable: true
          type: string
        primary_phone:
          description: The merchant's primary phone number
          example: "999999999"
          maxLength: 255
          nullable: true
          type: string
        primary_email:
          description: The merchant's primary email address
          example: johndoe@test.com
          maxLength: 255
          nullable: true
          type: string
        secondary_contact_person:
          description: The merchant's secondary contact name
          example: John Doe2
          maxLength: 255
          nullable: true
          type: string
        secondary_phone:
          description: The merchant's secondary phone number
          example: "999999988"
          maxLength: 255
          nullable: true
          type: string
        secondary_email:
          description: The merchant's secondary email address
          example: johndoe2@test.com
          maxLength: 255
          nullable: true
          type: string
        website:
          description: The business website of the merchant
          example: www.example.com
          maxLength: 255
          nullable: true
          type: string
        about_business:
          description: A brief description about merchant's business
          example: Online Retail with a wide selection of organic products for North
            America
          maxLength: 255
          nullable: true
          type: string
        address:
          allOf:
          - $ref: '#/components/schemas/AddressDetails'
          nullable: true
      type: object
    MerchantRecipientData:
      oneOf:
      - $ref: '#/components/schemas/MerchantRecipientData_oneOf'
      - $ref: '#/components/schemas/MerchantRecipientData_oneOf_1'
      - $ref: '#/components/schemas/MerchantRecipientData_oneOf_2'
    MerchantRoutingAlgorithm:
      description: Routing Algorithm specific to merchants
      example:
        profile_id: profile_id
        algorithm_for: payment
        name: name
        description: description
        created_at: 0
        id: id
        modified_at: 6
        algorithm:
          data:
            merchant_connector_id: merchant_connector_id
            connector: adyenplatform
          type: single
      properties:
        id:
          type: string
        profile_id:
          type: string
        name:
          type: string
        description:
          type: string
        algorithm:
          $ref: '#/components/schemas/RoutingAlgorithm'
        created_at:
          format: int64
          type: integer
        modified_at:
          format: int64
          type: integer
        algorithm_for:
          $ref: '#/components/schemas/TransactionType'
      required:
      - algorithm
      - algorithm_for
      - created_at
      - description
      - id
      - modified_at
      - name
      - profile_id
      type: object
    MetadataValue:
      properties:
        key:
          type: string
        value:
          type: string
      required:
      - key
      - value
      type: object
    MifinityData:
      properties:
        date_of_birth:
          format: date
          type: string
        language_preference:
          nullable: true
          type: string
      required:
      - date_of_birth
      type: object
    MinorUnit:
      description: This Unit struct represents MinorUnit in which core amount works
      format: int64
      type: integer
    MitExemptionRequest:
      enum:
      - Apply
      - Skip
      type: string
    MobilePayRedirection:
      type: object
    MomoRedirection:
      type: object
    MultibancoBillingDetails:
      properties:
        email:
          example: example@me.com
          nullable: true
          type: string
      type: object
    MultibancoTransferInstructions:
      properties:
        reference:
          example: "122385736258"
          type: string
        entity:
          example: "12345"
          type: string
      required:
      - entity
      - reference
      type: object
    NetworkTransactionIdAndCardDetails:
      properties:
        card_number:
          description: The card number
          example: "4242424242424242"
          type: string
        card_exp_month:
          description: The card's expiry month
          example: "24"
          type: string
        card_exp_year:
          description: The card's expiry year
          example: "24"
          type: string
        card_holder_name:
          description: The card holder's name
          example: John Test
          type: string
        card_issuer:
          description: The name of the issuer of card
          example: chase
          nullable: true
          type: string
        card_network:
          allOf:
          - $ref: '#/components/schemas/CardNetwork'
          nullable: true
        card_type:
          example: CREDIT
          nullable: true
          type: string
        card_issuing_country:
          example: INDIA
          nullable: true
          type: string
        bank_code:
          example: JP_AMEX
          nullable: true
          type: string
        nick_name:
          description: The card holder's nick name
          example: John Test
          nullable: true
          type: string
        network_transaction_id:
          description: |-
            The network transaction ID provided by the card network during a CIT (Customer Initiated Transaction),
            where `setup_future_usage` is set to `off_session`.
          type: string
      required:
      - card_exp_month
      - card_exp_year
      - card_holder_name
      - card_number
      - network_transaction_id
      type: object
    NextActionCall:
      enum:
      - post_session_tokens
      - confirm
      - sync
      - complete_authorize
      type: string
    NextActionData:
      discriminator:
        propertyName: type
      oneOf:
      - $ref: '#/components/schemas/NextActionData_oneOf'
      - $ref: '#/components/schemas/NextActionData_oneOf_1'
      - $ref: '#/components/schemas/NextActionData_oneOf_2'
      - $ref: '#/components/schemas/NextActionData_oneOf_3'
      - $ref: '#/components/schemas/NextActionData_oneOf_4'
      - $ref: '#/components/schemas/NextActionData_oneOf_5'
      - $ref: '#/components/schemas/NextActionData_oneOf_6'
      - $ref: '#/components/schemas/NextActionData_oneOf_7'
      - $ref: '#/components/schemas/NextActionData_oneOf_8'
    NextActionType:
      enum:
      - redirect_to_url
      - display_qr_code
      - invoke_sdk_client
      - trigger_api
      - display_bank_transfer_information
      - display_wait_screen
      type: string
    NoThirdPartySdkSessionResponse:
      properties:
        epoch_timestamp:
          description: Timestamp at which session is requested
          format: int64
          minimum: 0
          type: integer
        expires_at:
          description: Timestamp at which session expires
          format: int64
          minimum: 0
          type: integer
        merchant_session_identifier:
          description: The identifier for the merchant session
          type: string
        nonce:
          description: Apple pay generated unique ID (UUID) value
          type: string
        merchant_identifier:
          description: The identifier for the merchant
          type: string
        domain_name:
          description: The domain name of the merchant which is registered in Apple
            Pay
          type: string
        display_name:
          description: The name to be displayed on Apple Pay button
          type: string
        signature:
          description: A string which represents the properties of a payment
          type: string
        operational_analytics_identifier:
          description: The identifier for the operational analytics
          type: string
        retries:
          description: The number of retries to get the session response
          format: int32
          minimum: 0
          type: integer
        psp_id:
          description: The identifier for the connector transaction
          type: string
      required:
      - display_name
      - domain_name
      - epoch_timestamp
      - expires_at
      - merchant_identifier
      - merchant_session_identifier
      - nonce
      - operational_analytics_identifier
      - psp_id
      - retries
      - signature
      type: object
    NoonData:
      properties:
        order_category:
          description: "Information about the order category that merchant wants to\
            \ specify at connector level. (e.g. In Noon Payments it can take values\
            \ like \"pay\", \"food\", or any other custom string set by the merchant\
            \ in Noon's Dashboard)"
          nullable: true
          type: string
      type: object
    NumberComparison:
      description: Represents a number comparison for "NumberComparisonArrayValue"
      properties:
        comparisonType:
          $ref: '#/components/schemas/ComparisonType'
        number:
          description: This Unit struct represents MinorUnit in which core amount
            works
          format: int64
          type: integer
      required:
      - comparisonType
      - number
      type: object
    OnlineMandate:
      additionalProperties: false
      properties:
        ip_address:
          description: Ip address of the customer machine from which the mandate was
            created
          example: 123.32.25.123
          type: string
        user_agent:
          description: The user-agent of the customer's browser
          type: string
      required:
      - ip_address
      - user_agent
      type: object
    OpenBankingData:
      oneOf:
      - $ref: '#/components/schemas/OpenBankingData_oneOf'
    OpenBankingResponse:
      allOf:
      - allOf:
        - $ref: '#/components/schemas/OpenBankingData'
        nullable: true
      - type: object
    OpenBankingSessionToken:
      properties:
        open_banking_session_token:
          description: The session token for OpenBanking Connectors
          type: string
      required:
      - open_banking_session_token
      type: object
    OrderDetails:
      properties:
        product_name:
          description: Name of the product that is being purchased
          example: shirt
          maxLength: 255
          type: string
        quantity:
          description: The quantity of the product to be purchased
          example: 1
          format: int32
          minimum: 0
          type: integer
        requires_shipping:
          nullable: true
          type: boolean
        product_img_link:
          description: The image URL of the product
          nullable: true
          type: string
        product_id:
          description: ID of the product that is being purchased
          nullable: true
          type: string
        category:
          description: Category of the product that is being purchased
          nullable: true
          type: string
        sub_category:
          description: Sub category of the product that is being purchased
          nullable: true
          type: string
        brand:
          description: Brand of the product that is being purchased
          nullable: true
          type: string
        product_type:
          allOf:
          - $ref: '#/components/schemas/ProductType'
          nullable: true
        product_tax_code:
          description: The tax code for the product
          nullable: true
          type: string
      required:
      - product_name
      - quantity
      type: object
    OrderDetailsWithAmount:
      properties:
        product_name:
          description: Name of the product that is being purchased
          example: shirt
          maxLength: 255
          type: string
        quantity:
          description: The quantity of the product to be purchased
          example: 1
          format: int32
          minimum: 0
          type: integer
        amount:
          description: This Unit struct represents MinorUnit in which core amount
            works
          format: int64
          type: integer
        requires_shipping:
          nullable: true
          type: boolean
        product_img_link:
          description: The image URL of the product
          nullable: true
          type: string
        product_id:
          description: ID of the product that is being purchased
          nullable: true
          type: string
        category:
          description: Category of the product that is being purchased
          nullable: true
          type: string
        sub_category:
          description: Sub category of the product that is being purchased
          nullable: true
          type: string
        brand:
          description: Brand of the product that is being purchased
          nullable: true
          type: string
        product_type:
          allOf:
          - $ref: '#/components/schemas/ProductType'
          nullable: true
        product_tax_code:
          description: The tax code for the product
          nullable: true
          type: string
      required:
      - amount
      - product_name
      - quantity
      type: object
    OrderFulfillmentTimeOrigin:
      enum:
      - create
      - confirm
      type: string
    OrganizationCreateRequest:
      additionalProperties: false
      example:
        metadata: "{}"
        organization_details: "{}"
        organization_name: organization_name
      properties:
        organization_name:
          type: string
        organization_details:
          nullable: true
          type: object
        metadata:
          nullable: true
          type: object
      required:
      - organization_name
      type: object
    OrganizationResponse:
      example:
        metadata: "{}"
        organization_details: "{}"
        organization_id: org_q98uSGAYbjEwqs0mJwnz
        created_at: 2000-01-23T04:56:07.000+00:00
        organization_name: organization_name
        modified_at: 2000-01-23T04:56:07.000+00:00
      properties:
        organization_id:
          example: org_q98uSGAYbjEwqs0mJwnz
          maxLength: 64
          minLength: 1
          type: string
        organization_name:
          nullable: true
          type: string
        organization_details:
          nullable: true
          type: object
        metadata:
          nullable: true
          type: object
        modified_at:
          format: date-time
          type: string
        created_at:
          format: date-time
          type: string
      required:
      - created_at
      - modified_at
      - organization_id
      type: object
    OrganizationUpdateRequest:
      additionalProperties: false
      example:
        metadata: "{}"
        organization_details: "{}"
        organization_name: organization_name
      properties:
        organization_name:
          nullable: true
          type: string
        organization_details:
          nullable: true
          type: object
        metadata:
          nullable: true
          type: object
      type: object
    OutgoingWebhook:
      properties:
        merchant_id:
          description: The merchant id of the merchant
          type: string
        event_id:
          description: The unique event id for each webhook
          type: string
        event_type:
          $ref: '#/components/schemas/EventType'
        content:
          $ref: '#/components/schemas/OutgoingWebhookContent'
        timestamp:
          description: The time at which webhook was sent
          format: date-time
          type: string
      required:
      - content
      - event_id
      - event_type
      - merchant_id
      type: object
    OutgoingWebhookContent:
      discriminator:
        propertyName: type
      oneOf:
      - $ref: '#/components/schemas/PaymentsResponse_1'
      - $ref: '#/components/schemas/RefundResponse_1'
      - $ref: '#/components/schemas/DisputeResponse_1'
      - $ref: '#/components/schemas/MandateResponse_1'
      - $ref: '#/components/schemas/PayoutCreateResponse_1'
    OutgoingWebhookRequestContent:
      description: The request information (headers and body) sent in the webhook.
      properties:
        body:
          description: The request body sent in the webhook.
          type: string
        headers:
          description: The request headers sent in the webhook.
          example:
          - - content-type
            - application/json
          - - content-length
            - "1024"
          items:
            items:
              $ref: '#/components/schemas/OutgoingWebhookRequestContent_headers_inner_inner'
            type: array
          type: array
      required:
      - body
      - headers
      type: object
    OutgoingWebhookResponseContent:
      description: "The response information (headers, body and status code) received\
        \ for the webhook sent."
      properties:
        body:
          description: The response body received for the webhook sent.
          nullable: true
          type: string
        headers:
          description: The response headers received for the webhook sent.
          example:
          - - content-type
            - application/json
          - - content-length
            - "1024"
          items:
            items:
              $ref: '#/components/schemas/OutgoingWebhookRequestContent_headers_inner_inner'
            type: array
          nullable: true
          type: array
        status_code:
          description: The HTTP status code for the webhook sent.
          example: 200
          format: int32
          minimum: 0
          nullable: true
          type: integer
        error_message:
          description: Error message in case any error occurred when trying to deliver
            the webhook.
          example: "200"
          nullable: true
          type: string
      type: object
    PayLaterData:
      oneOf:
      - $ref: '#/components/schemas/PayLaterData_oneOf'
      - $ref: '#/components/schemas/PayLaterData_oneOf_1'
      - $ref: '#/components/schemas/PayLaterData_oneOf_2'
      - $ref: '#/components/schemas/PayLaterData_oneOf_3'
      - $ref: '#/components/schemas/PayLaterData_oneOf_4'
      - $ref: '#/components/schemas/PayLaterData_oneOf_5'
      - $ref: '#/components/schemas/PayLaterData_oneOf_6'
      - $ref: '#/components/schemas/PayLaterData_oneOf_7'
    PayPalWalletData:
      properties:
        token:
          description: Token generated for the Apple pay
          type: string
      required:
      - token
      type: object
    PaylaterResponse:
      properties:
        klarna_sdk:
          allOf:
          - $ref: '#/components/schemas/KlarnaSdkPaymentMethodResponse'
          nullable: true
      type: object
    PaymentAttemptResponse:
      properties:
        attempt_id:
          description: Unique identifier for the attempt
          type: string
        status:
          $ref: '#/components/schemas/AttemptStatus'
        amount:
          description: "The payment attempt amount. Amount for the payment in lowest\
            \ denomination of the currency. (i.e) in cents for USD denomination, in\
            \ paisa for INR denomination etc.,"
          example: 6540
          format: int64
          type: integer
        currency:
          allOf:
          - $ref: '#/components/schemas/Currency'
          nullable: true
        connector:
          description: The connector used for the payment
          nullable: true
          type: string
        error_message:
          description: "If there was an error while calling the connector, the error\
            \ message is received here"
          nullable: true
          type: string
        payment_method:
          allOf:
          - $ref: '#/components/schemas/PaymentMethod'
          nullable: true
        connector_transaction_id:
          description: A unique identifier for a payment provided by the connector
          nullable: true
          type: string
        capture_method:
          allOf:
          - $ref: '#/components/schemas/CaptureMethod'
          nullable: true
        authentication_type:
          allOf:
          - $ref: '#/components/schemas/AuthenticationType'
          default: three_ds
          nullable: true
        created_at:
          description: Time at which the payment attempt was created
          example: 2022-09-10T10:11:12Z
          format: date-time
          type: string
        modified_at:
          description: Time at which the payment attempt was last modified
          example: 2022-09-10T10:11:12Z
          format: date-time
          type: string
        cancellation_reason:
          description: If the payment was cancelled the reason will be provided here
          nullable: true
          type: string
        mandate_id:
          description: "A unique identifier to link the payment to a mandate, can\
            \ be use instead of payment_method_data"
          nullable: true
          type: string
        error_code:
          description: If there was an error while calling the connectors the error
            code is received here
          nullable: true
          type: string
        payment_token:
          description: Provide a reference to a stored payment method
          nullable: true
          type: string
        connector_metadata:
          description: Additional data related to some connectors
          nullable: true
        payment_experience:
          allOf:
          - $ref: '#/components/schemas/PaymentExperience'
          nullable: true
        payment_method_type:
          allOf:
          - $ref: '#/components/schemas/PaymentMethodType'
          nullable: true
        reference_id:
          description: Reference to the payment at connector side
          example: 993672945374576J
          nullable: true
          type: string
        unified_code:
          description: (This field is not live yet)Error code unified across the connectors
            is received here if there was an error while calling connector
          nullable: true
          type: string
        unified_message:
          description: (This field is not live yet)Error message unified across the
            connectors is received here if there was an error while calling connector
          nullable: true
          type: string
        client_source:
          description: Value passed in X-CLIENT-SOURCE header during payments confirm
            request by the client
          nullable: true
          type: string
        client_version:
          description: Value passed in X-CLIENT-VERSION header during payments confirm
            request by the client
          nullable: true
          type: string
      required:
      - amount
      - attempt_id
      - created_at
      - modified_at
      - status
      type: object
    PaymentChargeRequest:
      description: Fee information to be charged on the payment being collected
      properties:
        charge_type:
          $ref: '#/components/schemas/PaymentChargeType'
        fees:
          description: Platform fees to be collected on the payment
          example: 6540
          format: int64
          type: integer
        transfer_account_id:
          description: Identifier for the reseller's account to send the funds to
          type: string
      required:
      - charge_type
      - fees
      - transfer_account_id
      type: object
    PaymentChargeResponse:
      description: Fee information to be charged on the payment being collected
      properties:
        charge_id:
          description: Identifier for charge created for the payment
          nullable: true
          type: string
        charge_type:
          $ref: '#/components/schemas/PaymentChargeType'
        application_fees:
          description: Platform fees collected on the payment
          example: 6540
          format: int64
          type: integer
        transfer_account_id:
          description: Identifier for the reseller's account where the funds were
            transferred
          type: string
      required:
      - application_fees
      - charge_type
      - transfer_account_id
      type: object
    PaymentChargeType:
      oneOf:
      - $ref: '#/components/schemas/PaymentChargeType_oneOf'
    PaymentCreatePaymentLinkConfig:
      allOf:
      - allOf:
        - $ref: '#/components/schemas/PaymentLinkConfigRequest'
        nullable: true
      - type: object
      description: Configure a custom payment link for the particular payment
    PaymentExperience:
      description: To indicate the type of payment experience that the customer would
        go through
      enum:
      - redirect_to_url
      - invoke_sdk_client
      - display_qr_code
      - one_click
      - link_wallet
      - invoke_payment_app
      - display_wait_screen
      type: string
    PaymentLinkConfig:
      properties:
        theme:
          description: custom theme for the payment link
          type: string
        logo:
          description: merchant display logo
          type: string
        seller_name:
          description: Custom merchant name for payment link
          type: string
        sdk_layout:
          description: Custom layout for sdk
          type: string
        display_sdk_only:
          description: Display only the sdk for payment link
          type: boolean
        enabled_saved_payment_method:
          description: Enable saved payment method option for payment link
          type: boolean
        allowed_domains:
          description: A list of allowed domains (glob patterns) where this link can
            be embedded / opened from
          items:
            type: string
          nullable: true
          type: array
          uniqueItems: true
        transaction_details:
          description: Dynamic details related to merchant to be rendered in payment
            link
          items:
            $ref: '#/components/schemas/PaymentLinkTransactionDetails'
          nullable: true
          type: array
      required:
      - display_sdk_only
      - enabled_saved_payment_method
      - logo
      - sdk_layout
      - seller_name
      - theme
      type: object
    PaymentLinkConfigRequest:
      properties:
        theme:
          description: custom theme for the payment link
          example: '#4E6ADD'
          maxLength: 255
          nullable: true
          type: string
        logo:
          description: merchant display logo
          example: https://i.pinimg.com/736x/4d/83/5c/4d835ca8aafbbb15f84d07d926fda473.jpg
          maxLength: 255
          nullable: true
          type: string
        seller_name:
          description: Custom merchant name for payment link
          example: hyperswitch
          maxLength: 255
          nullable: true
          type: string
        sdk_layout:
          description: Custom layout for sdk
          example: accordion
          maxLength: 255
          nullable: true
          type: string
        display_sdk_only:
          default: false
          description: Display only the sdk for payment link
          example: true
          nullable: true
          type: boolean
        enabled_saved_payment_method:
          default: false
          description: Enable saved payment method option for payment link
          example: true
          nullable: true
          type: boolean
        transaction_details:
          description: Dynamic details related to merchant to be rendered in payment
            link
          items:
            $ref: '#/components/schemas/PaymentLinkTransactionDetails'
          nullable: true
          type: array
      type: object
    PaymentLinkInitiateRequest:
      properties:
        merchant_id:
          type: string
        payment_id:
          type: string
      required:
      - merchant_id
      - payment_id
      type: object
    PaymentLinkResponse:
      properties:
        link:
          description: URL for rendering the open payment link
          type: string
        secure_link:
          description: URL for rendering the secure payment link
          nullable: true
          type: string
        payment_link_id:
          description: Identifier for the payment link
          type: string
      required:
      - link
      - payment_link_id
      type: object
    PaymentLinkStatus:
      description: Status Of the Payment Link
      enum:
      - active
      - expired
      type: string
    PaymentLinkTransactionDetails:
      properties:
        key:
          description: Key for the transaction details
          example: Policy-Number
          maxLength: 255
          type: string
        value:
          description: Value for the transaction details
          example: "297472368473924"
          maxLength: 255
          type: string
        ui_configuration:
          allOf:
          - $ref: '#/components/schemas/TransactionDetailsUiConfiguration'
          nullable: true
      required:
      - key
      - value
      type: object
    PaymentListConstraints:
      additionalProperties: false
      properties:
        customer_id:
          description: The identifier for customer
          example: cus_y3oqhf46pyzuxjbcn2giaqnb44
          maxLength: 64
          minLength: 1
          nullable: true
          type: string
        starting_after:
          description: "A cursor for use in pagination, fetch the next list after\
            \ some object"
          example: pay_fafa124123
          nullable: true
          type: string
        ending_before:
          description: "A cursor for use in pagination, fetch the previous list before\
            \ some object"
          example: pay_fafa124123
          nullable: true
          type: string
        limit:
          default: 10
          description: limit on the number of objects to return
          format: int32
          maximum: 100
          minimum: 0
          type: integer
        created:
          description: The time at which payment is created
          example: 2022-09-10T10:11:12Z
          format: date-time
          nullable: true
          type: string
        created.lt:
          description: Time less than the payment created time
          example: 2022-09-10T10:11:12Z
          format: date-time
          nullable: true
          type: string
        created.gt:
          description: Time greater than the payment created time
          example: 2022-09-10T10:11:12Z
          format: date-time
          nullable: true
          type: string
        created.lte:
          description: Time less than or equals to the payment created time
          example: 2022-09-10T10:11:12Z
          format: date-time
          nullable: true
          type: string
        created.gte:
          description: Time greater than or equals to the payment created time
          example: 2022-09-10T10:11:12Z
          format: date-time
          nullable: true
          type: string
      type: object
    PaymentListResponse:
      properties:
        size:
          description: The number of payments included in the list
          minimum: 0
          type: integer
        data:
          items:
            $ref: '#/components/schemas/PaymentsResponse'
          type: array
      required:
      - data
      - size
      type: object
    PaymentMethod:
      description: "Indicates the type of payment method. Eg: 'card', 'wallet', etc."
      enum:
      - card
      - card_redirect
      - pay_later
      - wallet
      - bank_redirect
      - bank_transfer
      - crypto
      - bank_debit
      - reward
      - real_time_payment
      - upi
      - voucher
      - gift_card
      - open_banking
      type: string
    PaymentMethodCollectLinkRequest:
      allOf:
      - allOf:
        - $ref: '#/components/schemas/GenericLinkUiConfig'
        nullable: true
      - properties:
          pm_collect_link_id:
            description: The unique identifier for the collect link.
            example: pm_collect_link_2bdacf398vwzq5n422S1
            nullable: true
            type: string
          customer_id:
            description: The unique identifier of the customer.
            example: cus_92dnwed8s32bV9D8Snbiasd8v
            type: string
          session_expiry:
            description: |-
              Will be used to expire client secret after certain amount of time to be supplied in seconds
              (900) for 15 mins
            example: 900
            format: int32
            minimum: 0
            nullable: true
            type: integer
          return_url:
            description: Redirect to this URL post completion
            example: https://sandbox.hyperswitch.io/payment_method/collect/pm_collect_link_2bdacf398vwzq5n422S1/status
            nullable: true
            type: string
          enabled_payment_methods:
            description: List of payment methods shown on collect UI
            example: "[{\"payment_method\": \"bank_transfer\", \"payment_method_types\"\
              : [\"ach\", \"bacs\"]}]"
            items:
              $ref: '#/components/schemas/EnabledPaymentMethod'
            nullable: true
            type: array
        required:
        - customer_id
        type: object
    PaymentMethodCollectLinkResponse:
      allOf:
      - $ref: '#/components/schemas/GenericLinkUiConfig'
      - properties:
          pm_collect_link_id:
            description: The unique identifier for the collect link.
            example: pm_collect_link_2bdacf398vwzq5n422S1
            type: string
          customer_id:
            description: The unique identifier of the customer.
            example: cus_92dnwed8s32bV9D8Snbiasd8v
            type: string
          expiry:
            description: Time when this link will be expired in ISO8601 format
            example: 2025-01-18T11:04:09.922Z
            format: date-time
            type: string
          link:
            description: URL to the form's link generated for collecting payment method
              details.
            example: https://sandbox.hyperswitch.io/payment_method/collect/pm_collect_link_2bdacf398vwzq5n422S1
            type: string
          return_url:
            description: Redirect to this URL post completion
            example: https://sandbox.hyperswitch.io/payment_method/collect/pm_collect_link_2bdacf398vwzq5n422S1/status
            nullable: true
            type: string
          enabled_payment_methods:
            description: List of payment methods shown on collect UI
            example: "[{\"payment_method\": \"bank_transfer\", \"payment_method_types\"\
              : [\"ach\", \"bacs\"]}]"
            items:
              $ref: '#/components/schemas/EnabledPaymentMethod'
            nullable: true
            type: array
        required:
        - customer_id
        - expiry
        - link
        - pm_collect_link_id
        type: object
    PaymentMethodCreate:
      additionalProperties: false
      properties:
        payment_method:
          $ref: '#/components/schemas/PaymentMethod'
        payment_method_type:
          allOf:
          - $ref: '#/components/schemas/PaymentMethodType'
          nullable: true
        payment_method_issuer:
          description: The name of the bank/ provider issuing the payment method to
            the end user
          example: Citibank
          nullable: true
          type: string
        payment_method_issuer_code:
          allOf:
          - $ref: '#/components/schemas/PaymentMethodIssuerCode'
          nullable: true
        card:
          allOf:
          - $ref: '#/components/schemas/CardDetail'
          nullable: true
        metadata:
          description: "You can specify up to 50 keys, with key names up to 40 characters\
            \ long and values up to 500 characters long. Metadata is useful for storing\
            \ additional, structured information on an object."
          nullable: true
          type: object
        customer_id:
          description: The unique identifier of the customer.
          example: cus_y3oqhf46pyzuxjbcn2giaqnb44
          maxLength: 64
          minLength: 1
          nullable: true
          type: string
        card_network:
          description: The card network
          example: Visa
          nullable: true
          type: string
        bank_transfer:
          allOf:
          - $ref: '#/components/schemas/Bank'
          nullable: true
        wallet:
          allOf:
          - $ref: '#/components/schemas/Wallet'
          nullable: true
        client_secret:
          description: |-
            For Client based calls, SDK will use the client_secret
            in order to call /payment_methods
            Client secret will be generated whenever a new
            payment method is created
          nullable: true
          type: string
        payment_method_data:
          allOf:
          - $ref: '#/components/schemas/PaymentMethodCreateData'
          nullable: true
        billing:
          allOf:
          - $ref: '#/components/schemas/Address'
          nullable: true
      required:
      - payment_method
      type: object
    PaymentMethodCreateData:
      oneOf:
      - $ref: '#/components/schemas/PaymentMethodCreateData_oneOf'
    PaymentMethodData:
      oneOf:
      - $ref: '#/components/schemas/Card_1'
      - $ref: '#/components/schemas/CardRedirect'
      - $ref: '#/components/schemas/Wallet_1'
      - $ref: '#/components/schemas/PayLater'
      - $ref: '#/components/schemas/BankRedirect'
      - $ref: '#/components/schemas/BankDebit'
      - $ref: '#/components/schemas/BankTransfer'
      - $ref: '#/components/schemas/RealTimePayment'
      - $ref: '#/components/schemas/Crypto'
      - enum:
        - mandate_payment
        title: MandatePayment
        type: string
      - enum:
        - reward
        title: Reward
        type: string
      - $ref: '#/components/schemas/Upi'
      - $ref: '#/components/schemas/Voucher'
      - $ref: '#/components/schemas/GiftCard'
      - $ref: '#/components/schemas/CardToken_1'
      - $ref: '#/components/schemas/OpenBanking'
    PaymentMethodDataRequest:
      allOf:
      - allOf:
        - $ref: '#/components/schemas/PaymentMethodData'
        nullable: true
      - properties:
          billing:
            allOf:
            - $ref: '#/components/schemas/Address'
            nullable: true
        type: object
      description: The payment method information provided for making a payment
      example:
        billing: ""
    PaymentMethodDataResponse:
      oneOf:
      - $ref: '#/components/schemas/PaymentMethodDataResponse_oneOf'
      - $ref: '#/components/schemas/PaymentMethodDataResponse_oneOf_1'
      - $ref: '#/components/schemas/PaymentMethodDataResponse_oneOf_2'
      - $ref: '#/components/schemas/PaymentMethodDataResponse_oneOf_3'
      - $ref: '#/components/schemas/PaymentMethodDataResponse_oneOf_4'
      - $ref: '#/components/schemas/PaymentMethodDataResponse_oneOf_5'
      - $ref: '#/components/schemas/PaymentMethodDataResponse_oneOf_6'
      - $ref: '#/components/schemas/PaymentMethodDataResponse_oneOf_7'
      - $ref: '#/components/schemas/PaymentMethodDataResponse_oneOf_8'
      - $ref: '#/components/schemas/PaymentMethodDataResponse_oneOf_9'
      - $ref: '#/components/schemas/PaymentMethodDataResponse_oneOf_10'
      - $ref: '#/components/schemas/PaymentMethodDataResponse_oneOf_11'
      - $ref: '#/components/schemas/PaymentMethodDataResponse_oneOf_12'
      - $ref: '#/components/schemas/PaymentMethodDataResponse_oneOf_13'
      - $ref: '#/components/schemas/PaymentMethodDataResponse_oneOf_14'
      - $ref: '#/components/schemas/PaymentMethodDataResponse_oneOf_15'
    PaymentMethodDataResponseWithBilling:
      allOf:
      - allOf:
        - $ref: '#/components/schemas/PaymentMethodDataResponse'
        nullable: true
      - properties:
          billing:
            allOf:
            - $ref: '#/components/schemas/Address'
            nullable: true
        type: object
    PaymentMethodDeleteResponse:
      properties:
        payment_method_id:
          description: The unique identifier of the Payment method
          example: card_rGK4Vi5iSW70MY7J2mIg
          type: string
        deleted:
          description: Whether payment method was deleted or not
          example: true
          type: boolean
      required:
      - deleted
      - payment_method_id
      type: object
    PaymentMethodIssuerCode:
      enum:
      - jp_hdfc
      - jp_icici
      - jp_googlepay
      - jp_applepay
      - jp_phonepay
      - jp_wechat
      - jp_sofort
      - jp_giropay
      - jp_sepa
      - jp_bacs
      type: string
    PaymentMethodList:
      properties:
        payment_method:
          $ref: '#/components/schemas/PaymentMethod'
        payment_method_types:
          description: This is a sub-category of payment method.
          example:
          - credit
          items:
            $ref: '#/components/schemas/PaymentMethodType'
          nullable: true
          type: array
      required:
      - payment_method
      type: object
    PaymentMethodListResponse:
      properties:
        redirect_url:
          description: Redirect URL of the merchant
          example: https://www.google.com
          nullable: true
          type: string
        currency:
          $ref: '#/components/schemas/Currency'
        payment_methods:
          description: Information about the payment method
          example:
          - payment_experience: null
            payment_method: wallet
            payment_method_issuers:
            - labore magna ipsum
            - aute
          items:
            $ref: '#/components/schemas/PaymentMethodList'
          type: array
        mandate_payment:
          $ref: '#/components/schemas/MandateType'
        merchant_name:
          nullable: true
          type: string
        show_surcharge_breakup_screen:
          description: flag to indicate if surcharge and tax breakup screen should
            be shown or not
          type: boolean
        payment_type:
          allOf:
          - $ref: '#/components/schemas/PaymentType'
          nullable: true
        request_external_three_ds_authentication:
          description: flag to indicate whether to perform external 3ds authentication
          example: true
          type: boolean
        collect_shipping_details_from_wallets:
          description: flag that indicates whether to collect shipping details from
            wallets or from the customer
          nullable: true
          type: boolean
        collect_billing_details_from_wallets:
          description: flag that indicates whether to collect billing details from
            wallets or from the customer
          nullable: true
          type: boolean
        is_tax_calculation_enabled:
          description: flag that indicates whether to calculate tax on the order amount
          type: boolean
      required:
      - currency
      - is_tax_calculation_enabled
      - mandate_payment
      - payment_methods
      - request_external_three_ds_authentication
      - show_surcharge_breakup_screen
      type: object
    PaymentMethodResponse:
      properties:
        merchant_id:
          description: Unique identifier for a merchant
          example: merchant_1671528864
          type: string
        customer_id:
          description: The unique identifier of the customer.
          example: cus_y3oqhf46pyzuxjbcn2giaqnb44
          maxLength: 64
          minLength: 1
          nullable: true
          type: string
        payment_method_id:
          description: The unique identifier of the Payment method
          example: card_rGK4Vi5iSW70MY7J2mIg
          type: string
        payment_method:
          $ref: '#/components/schemas/PaymentMethod'
        payment_method_type:
          allOf:
          - $ref: '#/components/schemas/PaymentMethodType'
          nullable: true
        card:
          allOf:
          - $ref: '#/components/schemas/CardDetailFromLocker'
          nullable: true
        recurring_enabled:
          description: Indicates whether the payment method is eligible for recurring
            payments
          example: true
          type: boolean
        installment_payment_enabled:
          description: Indicates whether the payment method is eligible for installment
            payments
          example: true
          type: boolean
        payment_experience:
          description: Type of payment experience enabled with the connector
          example:
          - redirect_to_url
          items:
            $ref: '#/components/schemas/PaymentExperience'
          nullable: true
          type: array
        metadata:
          description: "You can specify up to 50 keys, with key names up to 40 characters\
            \ long and values up to 500 characters long. Metadata is useful for storing\
            \ additional, structured information on an object."
          nullable: true
          type: object
        created:
          description: A timestamp (ISO 8601 code) that determines when the customer
            was created
          example: 2023-01-18T11:04:09.922Z
          format: date-time
          nullable: true
          type: string
        bank_transfer:
          allOf:
          - $ref: '#/components/schemas/Bank'
          nullable: true
        last_used_at:
          example: 2024-02-24T11:04:09.922Z
          format: date-time
          nullable: true
          type: string
        client_secret:
          description: For Client based calls
          nullable: true
          type: string
      required:
      - installment_payment_enabled
      - merchant_id
      - payment_method
      - payment_method_id
      - recurring_enabled
      type: object
    PaymentMethodStatus:
      description: Payment Method Status
      enum:
      - active
      - inactive
      - processing
      - awaiting_data
      type: string
    PaymentMethodType:
      description: "Indicates the sub type of payment method. Eg: 'google_pay' & 'apple_pay'\
        \ for wallets."
      enum:
      - ach
      - affirm
      - afterpay_clearpay
      - alfamart
      - ali_pay
      - ali_pay_hk
      - alma
      - apple_pay
      - atome
      - bacs
      - bancontact_card
      - becs
      - benefit
      - bizum
      - blik
      - boleto
      - bca_bank_transfer
      - bni_va
      - bri_va
      - card_redirect
      - cimb_va
      - classic
      - credit
      - crypto_currency
      - cashapp
      - dana
      - danamon_va
      - debit
      - duit_now
      - efecty
      - eps
      - fps
      - evoucher
      - giropay
      - givex
      - google_pay
      - go_pay
      - gcash
      - ideal
      - interac
      - indomaret
      - klarna
      - kakao_pay
      - local_bank_redirect
      - mandiri_va
      - knet
      - mb_way
      - mobile_pay
      - momo
      - momo_atm
      - multibanco
      - online_banking_thailand
      - online_banking_czech_republic
      - online_banking_finland
      - online_banking_fpx
      - online_banking_poland
      - online_banking_slovakia
      - oxxo
      - pago_efectivo
      - permata_bank_transfer
      - open_banking_uk
      - pay_bright
      - paypal
      - paze
      - pix
      - pay_safe_card
      - przelewy24
      - prompt_pay
      - pse
      - red_compra
      - red_pagos
      - samsung_pay
      - sepa
      - sofort
      - swish
      - touch_n_go
      - trustly
      - twint
      - upi_collect
      - upi_intent
      - vipps
      - viet_qr
      - venmo
      - walley
      - we_chat_pay
      - seven_eleven
      - lawson
      - mini_stop
      - family_mart
      - seicomart
      - pay_easy
      - local_bank_transfer
      - mifinity
      - open_banking_pis
      type: string
    PaymentMethodUpdate:
      additionalProperties: false
      properties:
        card:
          allOf:
          - $ref: '#/components/schemas/CardDetailUpdate'
          nullable: true
        client_secret:
          description: This is a 15 minute expiry token which shall be used from the
            client to authenticate and perform sessions from the SDK
          example: secret_k2uj3he2893eiu2d
          maxLength: 30
          minLength: 30
          nullable: true
          type: string
      type: object
    PaymentMethodsEnabled:
      additionalProperties: false
      description: Details of all the payment methods enabled for the connector for
        the given merchant account
      properties:
        payment_method:
          $ref: '#/components/schemas/PaymentMethod'
        payment_method_types:
          description: Subtype of payment method
          example:
          - credit
          items:
            $ref: '#/components/schemas/RequestPaymentMethodTypes'
          nullable: true
          type: array
      required:
      - payment_method
      type: object
    PaymentProcessingDetails:
      properties:
        payment_processing_certificate:
          type: string
        payment_processing_certificate_key:
          type: string
      required:
      - payment_processing_certificate
      - payment_processing_certificate_key
      type: object
    PaymentProcessingDetailsAt:
      discriminator:
        propertyName: payment_processing_details_at
      oneOf:
      - $ref: '#/components/schemas/PaymentProcessingDetailsAt_oneOf'
      - $ref: '#/components/schemas/PaymentProcessingDetailsAt_oneOf_1'
    PaymentRetrieveBody:
      properties:
        merchant_id:
          description: The identifier for the Merchant Account.
          nullable: true
          type: string
        force_sync:
          description: Decider to enable or disable the connector call for retrieve
            request
          nullable: true
          type: boolean
        client_secret:
          description: "This is a token which expires after 15 minutes, used from\
            \ the client to authenticate and create sessions from the SDK"
          nullable: true
          type: string
        expand_captures:
          description: If enabled provides list of captures linked to latest attempt
          nullable: true
          type: boolean
        expand_attempts:
          description: If enabled provides list of attempts linked to payment intent
          nullable: true
          type: boolean
      type: object
    PaymentType:
      description: The type of the payment that differentiates between normal and
        various types of mandate payments. Use 'setup_mandate' in case of zero auth
        flow.
      enum:
      - normal
      - new_mandate
      - setup_mandate
      - recurring_mandate
      type: string
    PaymentsCancelRequest:
      properties:
        cancellation_reason:
          description: The reason for the payment cancel
          nullable: true
          type: string
        merchant_connector_details:
          allOf:
          - $ref: '#/components/schemas/MerchantConnectorDetailsWrap'
          nullable: true
      type: object
    PaymentsCaptureRequest:
      properties:
        merchant_id:
          description: The unique identifier for the merchant
          nullable: true
          type: string
        amount_to_capture:
          description: The Amount to be captured/ debited from the user's payment
            method.
          example: 6540
          format: int64
          type: integer
        refund_uncaptured_amount:
          description: Decider to refund the uncaptured amount
          nullable: true
          type: boolean
        statement_descriptor_suffix:
          description: Provides information about a card payment that customers see
            on their statements.
          nullable: true
          type: string
        statement_descriptor_prefix:
          description: Concatenated with the statement descriptor suffix that’s set
            on the account to form the complete statement descriptor.
          nullable: true
          type: string
        merchant_connector_details:
          allOf:
          - $ref: '#/components/schemas/MerchantConnectorDetailsWrap'
          nullable: true
      required:
      - amount_to_capture
      type: object
    PaymentsCompleteAuthorizeRequest:
      properties:
        shipping:
          allOf:
          - $ref: '#/components/schemas/Address'
          nullable: true
        client_secret:
          description: Client Secret
          type: string
      required:
      - client_secret
      type: object
    PaymentsConfirmIntentRequest:
      description: Request for Payment Intent Confirm
      example:
        payment_method_type: card
        customer_acceptance: ""
        shipping: ""
        browser_info: ""
        payment_method_data:
          billing: ""
        return_url: https://hyperswitch.io
        payment_method_subtype: ach
      properties:
        return_url:
          description: |-
            The URL to which you want the user to be redirected after the completion of the payment operation
            If this url is not passed, the url configured in the business profile will be used
          example: https://hyperswitch.io
          nullable: true
          type: string
        payment_method_data:
          $ref: '#/components/schemas/PaymentMethodDataRequest'
        payment_method_type:
          $ref: '#/components/schemas/PaymentMethod'
        payment_method_subtype:
          $ref: '#/components/schemas/PaymentMethodType'
        shipping:
          allOf:
          - $ref: '#/components/schemas/Address'
          nullable: true
        customer_acceptance:
          allOf:
          - $ref: '#/components/schemas/CustomerAcceptance'
          nullable: true
        browser_info:
          allOf:
          - $ref: '#/components/schemas/BrowserInformation'
          nullable: true
      required:
      - payment_method_data
      - payment_method_subtype
      - payment_method_type
      type: object
    PaymentsConfirmIntentResponse:
      description: Response for Payment Intent Confirm
      example:
        payment_method_type: card
        amount:
          skip_external_tax_calculation: Skip
          skip_surcharge_calculation: Skip
          order_tax_amount: ""
          shipping_cost: ""
          order_amount: 6540
          amount_capturable: 6
          amount_captured: ""
          currency: AED
          tax_on_surcharge: ""
          net_amount: 0
          amount_to_capture: ""
          surcharge_amount: ""
        merchant_connector_id: merchant_connector_id
        created: 2022-09-10T10:11:12Z
        connector_transaction_id: 993672945374576J
        error: ""
        connector_reference_id: 993672945374576J
        connector: stripe
        browser_info: ""
        payment_method_data: ""
        next_action: ""
        id: 12345_pay_01926c58bc6e77c09e809964e72af8c8
        client_secret: client_secret
        payment_method_subtype: ach
        status: succeeded
      properties:
        id:
          description: |-
            Unique identifier for the payment. This ensures idempotency for multiple payments
            that have been done by a single merchant.
          example: 12345_pay_01926c58bc6e77c09e809964e72af8c8
          maxLength: 64
          minLength: 32
          type: string
        status:
          $ref: '#/components/schemas/IntentStatus'
        amount:
          $ref: '#/components/schemas/ConfirmIntentAmountDetailsResponse'
        connector:
          description: The connector used for the payment
          example: stripe
          type: string
        client_secret:
          description: It's a token used for client side verification.
          type: string
        created:
          description: Time when the payment was created
          example: 2022-09-10T10:11:12Z
          format: date-time
          type: string
        payment_method_data:
          allOf:
          - $ref: '#/components/schemas/PaymentMethodDataResponseWithBilling'
          nullable: true
        payment_method_type:
          $ref: '#/components/schemas/PaymentMethod'
        payment_method_subtype:
          $ref: '#/components/schemas/PaymentMethodType'
        next_action:
          allOf:
          - $ref: '#/components/schemas/NextActionData'
          nullable: true
        connector_transaction_id:
          description: A unique identifier for a payment provided by the connector
          example: 993672945374576J
          nullable: true
          type: string
        connector_reference_id:
          description: reference(Identifier) to the payment at connector side
          example: 993672945374576J
          nullable: true
          type: string
        merchant_connector_id:
          description: Identifier of the connector ( merchant connector account )
            which was chosen to make the payment
          type: string
        browser_info:
          allOf:
          - $ref: '#/components/schemas/BrowserInformation'
          nullable: true
        error:
          allOf:
          - $ref: '#/components/schemas/ErrorDetails'
          nullable: true
      required:
      - amount
      - client_secret
      - connector
      - created
      - id
      - merchant_connector_id
      - payment_method_subtype
      - payment_method_type
      - status
      type: object
    PaymentsCreateIntentRequest:
      additionalProperties: false
      example:
        payment_link_config: ""
        amount_details:
          skip_external_tax_calculation: Skip
          skip_surcharge_calculation: Skip
          order_tax_amount: ""
          shipping_cost: ""
          order_amount: 6540
          currency: AED
          tax_on_surcharge: ""
          surcharge_amount: ""
        metadata: "{}"
        connector_metadata: ""
        description: It's my first payment request
        payment_link_enabled: ""
        authentication_type: ""
        order_details: |-
          [{
                  "product_name": "Apple iPhone 16",
                  "quantity": 1,
                  "amount" : 69000
                  "product_img_link" : "https://dummy-img-link.com"
              }]
        allowed_payment_method_types:
        - ach
        - ach
        billing: ""
        statement_descriptor: Hyperswitch Router
        shipping: ""
        request_external_three_ds_authentication: ""
        return_url: https://hyperswitch.io
        apply_mit_exemption: ""
        merchant_reference_id: pay_mbabizu24mvu3mela5njyhpit4
        request_incremental_authorization: ""
        routing_algorithm_id: routing_algorithm_id
        capture_method: ""
        setup_future_usage: ""
        feature_metadata: ""
        frm_metadata: "{}"
        customer_present: ""
        customer_id: cus_y3oqhf46pyzuxjbcn2giaqnb44
        session_expiry: 900
      properties:
        amount_details:
          $ref: '#/components/schemas/AmountDetails'
        merchant_reference_id:
          description: |-
            Unique identifier for the payment. This ensures idempotency for multiple payments
            that have been done by a single merchant.
          example: pay_mbabizu24mvu3mela5njyhpit4
          maxLength: 30
          minLength: 30
          nullable: true
          type: string
        routing_algorithm_id:
          description: The routing algorithm id to be used for the payment
          nullable: true
          type: string
        capture_method:
          allOf:
          - $ref: '#/components/schemas/CaptureMethod'
          nullable: true
        authentication_type:
          allOf:
          - $ref: '#/components/schemas/AuthenticationType'
          default: no_three_ds
          nullable: true
        billing:
          allOf:
          - $ref: '#/components/schemas/Address'
          nullable: true
        shipping:
          allOf:
          - $ref: '#/components/schemas/Address'
          nullable: true
        customer_id:
          description: The identifier for the customer
          example: cus_y3oqhf46pyzuxjbcn2giaqnb44
          maxLength: 64
          minLength: 1
          nullable: true
          type: string
        customer_present:
          allOf:
          - $ref: '#/components/schemas/PresenceOfCustomerDuringPayment'
          nullable: true
        description:
          description: A description for the payment
          example: It's my first payment request
          nullable: true
          type: string
        return_url:
          description: The URL to which you want the user to be redirected after the
            completion of the payment operation
          example: https://hyperswitch.io
          nullable: true
          type: string
        setup_future_usage:
          allOf:
          - $ref: '#/components/schemas/FutureUsage'
          nullable: true
        apply_mit_exemption:
          allOf:
          - $ref: '#/components/schemas/MitExemptionRequest'
          nullable: true
        statement_descriptor:
          description: "For non-card charges, you can use this value as the complete\
            \ description that appears on your customers’ statements. Must contain\
            \ at least one letter, maximum 22 characters."
          example: Hyperswitch Router
          maxLength: 22
          nullable: true
          type: string
        order_details:
          description: Use this object to capture the details about the different
            products for which the payment is being made. The sum of amount across
            different products here should be equal to the overall payment amount
          example: |-
            [{
                    "product_name": "Apple iPhone 16",
                    "quantity": 1,
                    "amount" : 69000
                    "product_img_link" : "https://dummy-img-link.com"
                }]
          items:
            $ref: '#/components/schemas/OrderDetailsWithAmount'
          nullable: true
          type: array
        allowed_payment_method_types:
          description: Use this parameter to restrict the Payment Method Types to
            show for a given PaymentIntent
          items:
            $ref: '#/components/schemas/PaymentMethodType'
          nullable: true
          type: array
        metadata:
          description: "Metadata is useful for storing additional, unstructured information\
            \ on an object."
          nullable: true
          type: object
        connector_metadata:
          allOf:
          - $ref: '#/components/schemas/ConnectorMetadata'
          nullable: true
        feature_metadata:
          allOf:
          - $ref: '#/components/schemas/FeatureMetadata'
          nullable: true
        payment_link_enabled:
          allOf:
          - $ref: '#/components/schemas/EnablePaymentLinkRequest'
          nullable: true
        payment_link_config:
          allOf:
          - $ref: '#/components/schemas/PaymentLinkConfigRequest'
          nullable: true
        request_incremental_authorization:
          allOf:
          - $ref: '#/components/schemas/RequestIncrementalAuthorization'
          nullable: true
        session_expiry:
          description: |-
            Will be used to expire client secret after certain amount of time to be supplied in seconds, if not sent it will be taken from profile config
            (900) for 15 mins
          example: 900
          format: int32
          minimum: 0
          nullable: true
          type: integer
        frm_metadata:
          description: Additional data related to some frm(Fraud Risk Management)
            connectors
          nullable: true
          type: object
        request_external_three_ds_authentication:
          allOf:
          - $ref: '#/components/schemas/External3dsAuthenticationRequest'
          nullable: true
      required:
      - amount_details
      type: object
    PaymentsCreateResponseOpenApi:
      properties:
        payment_id:
          description: |-
            Unique identifier for the payment. This ensures idempotency for multiple payments
            that have been done by a single merchant.
          example: pay_mbabizu24mvu3mela5njyhpit4
          maxLength: 30
          minLength: 30
          type: string
        merchant_id:
          description: |-
            This is an identifier for the merchant account. This is inferred from the API key
            provided during the request
          example: merchant_1668273825
          maxLength: 255
          type: string
        status:
          allOf:
          - $ref: '#/components/schemas/IntentStatus'
          default: requires_confirmation
        amount:
          description: "The payment amount. Amount for the payment in lowest denomination\
            \ of the currency. (i.e) in cents for USD denomination, in paisa for INR\
            \ denomination etc.,"
          example: 6540
          format: int64
          type: integer
        net_amount:
          description: |-
            The payment net amount. net_amount = amount + surcharge_details.surcharge_amount + surcharge_details.tax_amount + shipping_cost + order_tax_amount,
            If no surcharge_details, shipping_cost, order_tax_amount, net_amount = amount
          example: 6540
          format: int64
          type: integer
        shipping_cost:
          description: The shipping cost for the payment.
          example: 6540
          format: int64
          nullable: true
          type: integer
        amount_capturable:
          description: The maximum amount that could be captured from the payment
          example: 6540
          format: int64
          minimum: 100
          type: integer
        amount_received:
          description: "The amount which is already captured from the payment, this\
            \ helps in the cases where merchants can't capture all capturable amount\
            \ at once."
          example: 6540
          format: int64
          nullable: true
          type: integer
        connector:
          description: The connector used for the payment
          example: stripe
          nullable: true
          type: string
        client_secret:
          description: It's a token used for client side verification.
          example: pay_U42c409qyHwOkWo3vK60_secret_el9ksDkiB8hi6j9N78yo
          nullable: true
          type: string
        created:
          description: Time when the payment was created
          example: 2022-09-10T10:11:12Z
          format: date-time
          nullable: true
          type: string
        currency:
          $ref: '#/components/schemas/Currency'
        customer_id:
          deprecated: true
          description: |-
            The identifier for the customer object. If not provided the customer ID will be autogenerated.
            This field will be deprecated soon. Please refer to `customer.id`
          example: cus_y3oqhf46pyzuxjbcn2giaqnb44
          maxLength: 64
          minLength: 1
          nullable: true
          type: string
        description:
          description: A description of the payment
          example: It's my first payment request
          nullable: true
          type: string
        refunds:
          description: "List of refunds that happened on this intent, as same payment\
            \ intent can have multiple refund requests depending on the nature of\
            \ order"
          items:
            $ref: '#/components/schemas/RefundResponse'
          nullable: true
          type: array
        disputes:
          description: List of disputes that happened on this intent
          items:
            $ref: '#/components/schemas/DisputeResponsePaymentsRetrieve'
          nullable: true
          type: array
        attempts:
          description: List of attempts that happened on this intent
          items:
            $ref: '#/components/schemas/PaymentAttemptResponse'
          nullable: true
          type: array
        captures:
          description: List of captures done on latest attempt
          items:
            $ref: '#/components/schemas/CaptureResponse'
          nullable: true
          type: array
        mandate_id:
          description: "A unique identifier to link the payment to a mandate, can\
            \ be used instead of payment_method_data, in case of setting up recurring\
            \ payments"
          example: mandate_iwer89rnjef349dni3
          maxLength: 255
          nullable: true
          type: string
        mandate_data:
          allOf:
          - $ref: '#/components/schemas/MandateData'
          nullable: true
        setup_future_usage:
          allOf:
          - $ref: '#/components/schemas/FutureUsage'
          nullable: true
        off_session:
          description: "Set to true to indicate that the customer is not in your checkout\
            \ flow during this payment, and therefore is unable to authenticate. This\
            \ parameter is intended for scenarios where you collect card details and\
            \ charge them later. This parameter can only be used with confirm=true."
          example: true
          nullable: true
          type: boolean
        capture_method:
          allOf:
          - $ref: '#/components/schemas/CaptureMethod'
          nullable: true
        payment_method:
          $ref: '#/components/schemas/PaymentMethod'
        payment_method_data:
          allOf:
          - $ref: '#/components/schemas/PaymentMethodDataResponseWithBilling'
          nullable: true
        payment_token:
          description: Provide a reference to a stored payment method
          example: 187282ab-40ef-47a9-9206-5099ba31e432
          nullable: true
          type: string
        shipping:
          allOf:
          - $ref: '#/components/schemas/Address'
          nullable: true
        billing:
          allOf:
          - $ref: '#/components/schemas/Address'
          nullable: true
        order_details:
          description: "Information about the product , quantity and amount for connectors.\
            \ (e.g. Klarna)"
          example: |-
            [{
                    "product_name": "gillete creme",
                    "quantity": 15,
                    "amount" : 900
                }]
          items:
            $ref: '#/components/schemas/OrderDetailsWithAmount'
          nullable: true
          type: array
        email:
          deprecated: true
          description: |-
            description: The customer's email address
            This field will be deprecated soon. Please refer to `customer.email` object
          example: johntest@test.com
          maxLength: 255
          nullable: true
          type: string
        name:
          deprecated: true
          description: |-
            description: The customer's name
            This field will be deprecated soon. Please refer to `customer.name` object
          example: John Test
          maxLength: 255
          nullable: true
          type: string
        phone:
          deprecated: true
          description: |-
            The customer's phone number
            This field will be deprecated soon. Please refer to `customer.phone` object
          example: "9123456789"
          maxLength: 255
          nullable: true
          type: string
        return_url:
          description: The URL to redirect after the completion of the operation
          example: https://hyperswitch.io
          nullable: true
          type: string
        authentication_type:
          allOf:
          - $ref: '#/components/schemas/AuthenticationType'
          default: three_ds
          nullable: true
        statement_descriptor_name:
          description: "For non-card charges, you can use this value as the complete\
            \ description that appears on your customers’ statements. Must contain\
            \ at least one letter, maximum 22 characters."
          example: Hyperswitch Router
          maxLength: 255
          nullable: true
          type: string
        statement_descriptor_suffix:
          description: Provides information about a card payment that customers see
            on their statements. Concatenated with the prefix (shortened descriptor)
            or statement descriptor that’s set on the account to form the complete
            statement descriptor. Maximum 255 characters for the concatenated descriptor.
          example: Payment for shoes purchase
          maxLength: 255
          nullable: true
          type: string
        next_action:
          allOf:
          - $ref: '#/components/schemas/NextActionData'
          nullable: true
        cancellation_reason:
          description: If the payment was cancelled the reason will be provided here
          nullable: true
          type: string
        error_code:
          description: If there was an error while calling the connectors the code
            is received here
          example: E0001
          nullable: true
          type: string
        error_message:
          description: If there was an error while calling the connector the error
            message is received here
          example: Failed while verifying the card
          nullable: true
          type: string
        payment_experience:
          allOf:
          - $ref: '#/components/schemas/PaymentExperience'
          nullable: true
        payment_method_type:
          allOf:
          - $ref: '#/components/schemas/PaymentMethodType'
          nullable: true
        connector_label:
          description: The connector used for this payment along with the country
            and business details
          example: stripe_US_food
          nullable: true
          type: string
        business_country:
          allOf:
          - $ref: '#/components/schemas/CountryAlpha2'
          nullable: true
        business_label:
          description: The business label of merchant for this payment
          nullable: true
          type: string
        business_sub_label:
          description: The business_sub_label for this payment
          nullable: true
          type: string
        allowed_payment_method_types:
          description: Allowed Payment Method Types for a given PaymentIntent
          items:
            $ref: '#/components/schemas/PaymentMethodType'
          nullable: true
          type: array
        ephemeral_key:
          allOf:
          - $ref: '#/components/schemas/EphemeralKeyCreateResponse'
          nullable: true
        manual_retry_allowed:
          description: If true the payment can be retried with same or different payment
            method which means the confirm call can be made again.
          nullable: true
          type: boolean
        connector_transaction_id:
          description: A unique identifier for a payment provided by the connector
          example: 993672945374576J
          nullable: true
          type: string
        frm_message:
          allOf:
          - $ref: '#/components/schemas/FrmMessage'
          nullable: true
        metadata:
          description: "You can specify up to 50 keys, with key names up to 40 characters\
            \ long and values up to 500 characters long. Metadata is useful for storing\
            \ additional, structured information on an object."
          nullable: true
          type: object
        connector_metadata:
          allOf:
          - $ref: '#/components/schemas/ConnectorMetadata'
          nullable: true
        feature_metadata:
          allOf:
          - $ref: '#/components/schemas/FeatureMetadata'
          nullable: true
        reference_id:
          description: reference(Identifier) to the payment at connector side
          example: 993672945374576J
          nullable: true
          type: string
        payment_link:
          allOf:
          - $ref: '#/components/schemas/PaymentLinkResponse'
          nullable: true
        profile_id:
          description: The business profile that is associated with this payment
          nullable: true
          type: string
        surcharge_details:
          allOf:
          - $ref: '#/components/schemas/RequestSurchargeDetails'
          nullable: true
        attempt_count:
          description: Total number of attempts associated with this payment
          format: int32
          type: integer
        merchant_decision:
          description: "Denotes the action(approve or reject) taken by merchant in\
            \ case of manual review. Manual review can occur when the transaction\
            \ is marked as risky by the frm_processor, payment processor or when there\
            \ is underpayment/over payment incase of crypto payment"
          nullable: true
          type: string
        merchant_connector_id:
          description: Identifier of the connector ( merchant connector account )
            which was chosen to make the payment
          nullable: true
          type: string
        incremental_authorization_allowed:
          description: "If true, incremental authorization can be performed on this\
            \ payment, in case the funds authorized initially fall short."
          nullable: true
          type: boolean
        authorization_count:
          description: Total number of authorizations happened in an incremental_authorization
            payment
          format: int32
          nullable: true
          type: integer
        incremental_authorizations:
          description: List of incremental authorizations happened to the payment
          items:
            $ref: '#/components/schemas/IncrementalAuthorizationResponse'
          nullable: true
          type: array
        external_authentication_details:
          allOf:
          - $ref: '#/components/schemas/ExternalAuthenticationDetailsResponse'
          nullable: true
        external_3ds_authentication_attempted:
          description: Flag indicating if external 3ds authentication is made or not
          nullable: true
          type: boolean
        expires_on:
          description: Date Time for expiry of the payment
          example: 2022-09-10T10:11:12Z
          format: date-time
          nullable: true
          type: string
        fingerprint:
          description: |-
            Payment Fingerprint, to identify a particular card.
            It is a 20 character long alphanumeric code.
          nullable: true
          type: string
        browser_info:
          allOf:
          - $ref: '#/components/schemas/BrowserInformation'
          nullable: true
        payment_method_id:
          description: Identifier for Payment Method used for the payment
          nullable: true
          type: string
        payment_method_status:
          allOf:
          - $ref: '#/components/schemas/PaymentMethodStatus'
          nullable: true
        updated:
          description: Date time at which payment was updated
          example: 2022-09-10T10:11:12Z
          format: date-time
          nullable: true
          type: string
        charges:
          allOf:
          - $ref: '#/components/schemas/PaymentChargeResponse'
          nullable: true
        frm_metadata:
          description: "You can specify up to 50 keys, with key names up to 40 characters\
            \ long and values up to 500 characters long. FRM Metadata is useful for\
            \ storing additional, structured information on an object related to FRM."
          nullable: true
          type: object
        merchant_order_reference_id:
          description: |-
            Merchant's identifier for the payment/invoice. This will be sent to the connector
            if the connector provides support to accept multiple reference ids.
            In case the connector supports only one reference id, Hyperswitch's Payment ID will be sent as reference.
          example: Custom_Order_id_123
          maxLength: 255
          nullable: true
          type: string
        order_tax_amount:
          allOf:
          - $ref: '#/components/schemas/MinorUnit'
          nullable: true
        connector_mandate_id:
          description: Connector Identifier for the payment method
          nullable: true
          type: string
      required:
      - amount
      - amount_capturable
      - attempt_count
      - currency
      - merchant_id
      - net_amount
      - payment_id
      - payment_method
      - status
      type: object
    PaymentsDynamicTaxCalculationRequest:
      properties:
        shipping:
          $ref: '#/components/schemas/Address'
        client_secret:
          description: Client Secret
          type: string
        payment_method_type:
          $ref: '#/components/schemas/PaymentMethodType'
        session_id:
          description: Session Id
          nullable: true
          type: string
      required:
      - client_secret
      - payment_method_type
      - shipping
      type: object
    PaymentsDynamicTaxCalculationResponse:
      properties:
        payment_id:
          description: The identifier for the payment
          type: string
        net_amount:
          description: This Unit struct represents MinorUnit in which core amount
            works
          format: int64
          type: integer
        order_tax_amount:
          allOf:
          - $ref: '#/components/schemas/MinorUnit'
          nullable: true
        shipping_cost:
          allOf:
          - $ref: '#/components/schemas/MinorUnit'
          nullable: true
        display_amount:
          $ref: '#/components/schemas/DisplayAmountOnSdk'
      required:
      - display_amount
      - net_amount
      - payment_id
      type: object
    PaymentsExternalAuthenticationRequest:
      properties:
        client_secret:
          description: Client Secret
          type: string
        sdk_information:
          allOf:
          - $ref: '#/components/schemas/SdkInformation'
          nullable: true
        device_channel:
          $ref: '#/components/schemas/DeviceChannel'
        threeds_method_comp_ind:
          $ref: '#/components/schemas/ThreeDsCompletionIndicator'
      required:
      - client_secret
      - device_channel
      - threeds_method_comp_ind
      type: object
    PaymentsExternalAuthenticationResponse:
      properties:
        trans_status:
          $ref: '#/components/schemas/TransactionStatus'
        acs_url:
          description: Access Server URL to be used for challenge submission
          nullable: true
          type: string
        challenge_request:
          description: Challenge request which should be sent to acs_url
          nullable: true
          type: string
        acs_reference_number:
          description: "Unique identifier assigned by the EMVCo(Europay, Mastercard\
            \ and Visa)"
          nullable: true
          type: string
        acs_trans_id:
          description: Unique identifier assigned by the ACS to identify a single
            transaction
          nullable: true
          type: string
        three_dsserver_trans_id:
          description: Unique identifier assigned by the 3DS Server to identify a
            single transaction
          nullable: true
          type: string
        acs_signed_content:
          description: Contains the JWS object created by the ACS for the ARes(Authentication
            Response) message
          nullable: true
          type: string
        three_ds_requestor_url:
          description: Three DS Requestor URL
          type: string
      required:
      - three_ds_requestor_url
      - trans_status
      type: object
    PaymentsIncrementalAuthorizationRequest:
      properties:
        amount:
          description: The total amount including previously authorized amount and
            additional amount
          example: 6540
          format: int64
          type: integer
        reason:
          description: Reason for incremental authorization
          nullable: true
          type: string
      required:
      - amount
      type: object
    PaymentsIntentResponse:
      additionalProperties: false
      example:
        payment_link_config: ""
        amount_details:
          skip_external_tax_calculation: Skip
          skip_surcharge_calculation: Skip
          order_tax_amount: ""
          shipping_cost: ""
          order_amount: 6540
          currency: AED
          tax_on_surcharge: ""
          surcharge_amount: ""
        metadata: "{}"
        connector_metadata: ""
        expires_on: 2000-01-23T04:56:07.000+00:00
        description: It's my first payment request
        payment_link_enabled: Enable
        authentication_type: ""
        order_details: |-
          [{
                  "product_name": "Apple iPhone 16",
                  "quantity": 1,
                  "amount" : 69000
                  "product_img_link" : "https://dummy-img-link.com"
              }]
        allowed_payment_method_types:
        - ach
        - ach
        billing: ""
        statement_descriptor: Hyperswitch Router
        shipping: ""
        request_external_three_ds_authentication: Enable
        return_url: https://hyperswitch.io
        apply_mit_exemption: Apply
        id: id
        client_secret: pay_U42c409qyHwOkWo3vK60_secret_el9ksDkiB8hi6j9N78yo
        merchant_reference_id: pay_mbabizu24mvu3mela5njyhpit4
        request_incremental_authorization: "true"
        routing_algorithm_id: routing_algorithm_id
        capture_method: automatic
        setup_future_usage: off_session
        feature_metadata: ""
        frm_metadata: "{}"
        customer_present: Present
        customer_id: cus_y3oqhf46pyzuxjbcn2giaqnb44
        status: succeeded
      properties:
        id:
          description: Global Payment Id for the payment
          type: string
        status:
          $ref: '#/components/schemas/IntentStatus'
        amount_details:
          $ref: '#/components/schemas/AmountDetailsResponse'
        client_secret:
          description: It's a token used for client side verification.
          example: pay_U42c409qyHwOkWo3vK60_secret_el9ksDkiB8hi6j9N78yo
          type: string
        merchant_reference_id:
          description: |-
            Unique identifier for the payment. This ensures idempotency for multiple payments
            that have been done by a single merchant.
          example: pay_mbabizu24mvu3mela5njyhpit4
          maxLength: 30
          minLength: 30
          nullable: true
          type: string
        routing_algorithm_id:
          description: The routing algorithm id to be used for the payment
          nullable: true
          type: string
        capture_method:
          $ref: '#/components/schemas/CaptureMethod'
        authentication_type:
          allOf:
          - $ref: '#/components/schemas/AuthenticationType'
          default: no_three_ds
        billing:
          allOf:
          - $ref: '#/components/schemas/Address'
          nullable: true
        shipping:
          allOf:
          - $ref: '#/components/schemas/Address'
          nullable: true
        customer_id:
          description: The identifier for the customer
          example: cus_y3oqhf46pyzuxjbcn2giaqnb44
          maxLength: 64
          minLength: 1
          nullable: true
          type: string
        customer_present:
          $ref: '#/components/schemas/PresenceOfCustomerDuringPayment'
        description:
          description: A description for the payment
          example: It's my first payment request
          nullable: true
          type: string
        return_url:
          description: The URL to which you want the user to be redirected after the
            completion of the payment operation
          example: https://hyperswitch.io
          nullable: true
          type: string
        setup_future_usage:
          $ref: '#/components/schemas/FutureUsage'
        apply_mit_exemption:
          $ref: '#/components/schemas/MitExemptionRequest'
        statement_descriptor:
          description: "For non-card charges, you can use this value as the complete\
            \ description that appears on your customers’ statements. Must contain\
            \ at least one letter, maximum 22 characters."
          example: Hyperswitch Router
          maxLength: 22
          nullable: true
          type: string
        order_details:
          description: Use this object to capture the details about the different
            products for which the payment is being made. The sum of amount across
            different products here should be equal to the overall payment amount
          example: |-
            [{
                    "product_name": "Apple iPhone 16",
                    "quantity": 1,
                    "amount" : 69000
                    "product_img_link" : "https://dummy-img-link.com"
                }]
          items:
            $ref: '#/components/schemas/OrderDetailsWithAmount'
          nullable: true
          type: array
        allowed_payment_method_types:
          description: Use this parameter to restrict the Payment Method Types to
            show for a given PaymentIntent
          items:
            $ref: '#/components/schemas/PaymentMethodType'
          nullable: true
          type: array
        metadata:
          description: "Metadata is useful for storing additional, unstructured information\
            \ on an object."
          nullable: true
          type: object
        connector_metadata:
          allOf:
          - $ref: '#/components/schemas/ConnectorMetadata'
          nullable: true
        feature_metadata:
          allOf:
          - $ref: '#/components/schemas/FeatureMetadata'
          nullable: true
        payment_link_enabled:
          $ref: '#/components/schemas/EnablePaymentLinkRequest'
        payment_link_config:
          allOf:
          - $ref: '#/components/schemas/PaymentLinkConfigRequest'
          nullable: true
        request_incremental_authorization:
          $ref: '#/components/schemas/RequestIncrementalAuthorization'
        expires_on:
          description: Will be used to expire client secret after certain amount of
            time to be supplied in seconds
          format: date-time
          type: string
        frm_metadata:
          description: Additional data related to some frm(Fraud Risk Management)
            connectors
          nullable: true
          type: object
        request_external_three_ds_authentication:
          $ref: '#/components/schemas/External3dsAuthenticationRequest'
      required:
      - amount_details
      - apply_mit_exemption
      - authentication_type
      - capture_method
      - client_secret
      - customer_present
      - expires_on
      - id
      - payment_link_enabled
      - request_external_three_ds_authentication
      - request_incremental_authorization
      - setup_future_usage
      - status
      type: object
    PaymentsResponse:
      properties:
        payment_id:
          description: |-
            Unique identifier for the payment. This ensures idempotency for multiple payments
            that have been done by a single merchant.
          example: pay_mbabizu24mvu3mela5njyhpit4
          maxLength: 30
          minLength: 30
          type: string
        merchant_id:
          description: |-
            This is an identifier for the merchant account. This is inferred from the API key
            provided during the request
          example: merchant_1668273825
          maxLength: 255
          type: string
        status:
          allOf:
          - $ref: '#/components/schemas/IntentStatus'
          default: requires_confirmation
        amount:
          description: "The payment amount. Amount for the payment in lowest denomination\
            \ of the currency. (i.e) in cents for USD denomination, in paisa for INR\
            \ denomination etc.,"
          example: 6540
          format: int64
          type: integer
        net_amount:
          description: |-
            The payment net amount. net_amount = amount + surcharge_details.surcharge_amount + surcharge_details.tax_amount + shipping_cost + order_tax_amount,
            If no surcharge_details, shipping_cost, order_tax_amount, net_amount = amount
          example: 6540
          format: int64
          type: integer
        shipping_cost:
          description: The shipping cost for the payment.
          example: 6540
          format: int64
          nullable: true
          type: integer
        amount_capturable:
          description: The maximum amount that could be captured from the payment
          example: 6540
          format: int64
          minimum: 100
          type: integer
        amount_received:
          description: "The amount which is already captured from the payment, this\
            \ helps in the cases where merchants can't capture all capturable amount\
            \ at once."
          example: 6540
          format: int64
          nullable: true
          type: integer
        connector:
          description: The connector used for the payment
          example: stripe
          nullable: true
          type: string
        client_secret:
          description: It's a token used for client side verification.
          example: pay_U42c409qyHwOkWo3vK60_secret_el9ksDkiB8hi6j9N78yo
          nullable: true
          type: string
        created:
          description: Time when the payment was created
          example: 2022-09-10T10:11:12Z
          format: date-time
          nullable: true
          type: string
        currency:
          $ref: '#/components/schemas/Currency'
        customer_id:
          deprecated: true
          description: |-
            The identifier for the customer object. If not provided the customer ID will be autogenerated.
            This field will be deprecated soon. Please refer to `customer.id`
          example: cus_y3oqhf46pyzuxjbcn2giaqnb44
          maxLength: 64
          minLength: 1
          nullable: true
          type: string
        customer:
          allOf:
          - $ref: '#/components/schemas/CustomerDetailsResponse'
          nullable: true
        description:
          description: A description of the payment
          example: It's my first payment request
          nullable: true
          type: string
        refunds:
          description: "List of refunds that happened on this intent, as same payment\
            \ intent can have multiple refund requests depending on the nature of\
            \ order"
          items:
            $ref: '#/components/schemas/RefundResponse'
          nullable: true
          type: array
        disputes:
          description: List of disputes that happened on this intent
          items:
            $ref: '#/components/schemas/DisputeResponsePaymentsRetrieve'
          nullable: true
          type: array
        attempts:
          description: List of attempts that happened on this intent
          items:
            $ref: '#/components/schemas/PaymentAttemptResponse'
          nullable: true
          type: array
        captures:
          description: List of captures done on latest attempt
          items:
            $ref: '#/components/schemas/CaptureResponse'
          nullable: true
          type: array
        mandate_id:
          description: "A unique identifier to link the payment to a mandate, can\
            \ be used instead of payment_method_data, in case of setting up recurring\
            \ payments"
          example: mandate_iwer89rnjef349dni3
          maxLength: 255
          nullable: true
          type: string
        mandate_data:
          allOf:
          - $ref: '#/components/schemas/MandateData'
          nullable: true
        setup_future_usage:
          allOf:
          - $ref: '#/components/schemas/FutureUsage'
          nullable: true
        off_session:
          description: "Set to true to indicate that the customer is not in your checkout\
            \ flow during this payment, and therefore is unable to authenticate. This\
            \ parameter is intended for scenarios where you collect card details and\
            \ charge them later. This parameter can only be used with confirm=true."
          example: true
          nullable: true
          type: boolean
        capture_on:
          description: |-
            A timestamp (ISO 8601 code) that determines when the payment should be captured.
            Providing this field will automatically set `capture` to true
          example: 2022-09-10T10:11:12Z
          format: date-time
          nullable: true
          type: string
        capture_method:
          allOf:
          - $ref: '#/components/schemas/CaptureMethod'
          nullable: true
        payment_method:
          $ref: '#/components/schemas/PaymentMethod'
        payment_method_data:
          allOf:
          - $ref: '#/components/schemas/PaymentMethodDataResponseWithBilling'
          nullable: true
        payment_token:
          description: Provide a reference to a stored payment method
          example: 187282ab-40ef-47a9-9206-5099ba31e432
          nullable: true
          type: string
        shipping:
          allOf:
          - $ref: '#/components/schemas/Address'
          nullable: true
        billing:
          allOf:
          - $ref: '#/components/schemas/Address'
          nullable: true
        order_details:
          description: "Information about the product , quantity and amount for connectors.\
            \ (e.g. Klarna)"
          example: |-
            [{
                    "product_name": "gillete creme",
                    "quantity": 15,
                    "amount" : 900
                }]
          items:
            $ref: '#/components/schemas/OrderDetailsWithAmount'
          nullable: true
          type: array
        email:
          deprecated: true
          description: |-
            description: The customer's email address
            This field will be deprecated soon. Please refer to `customer.email` object
          example: johntest@test.com
          maxLength: 255
          nullable: true
          type: string
        name:
          deprecated: true
          description: |-
            description: The customer's name
            This field will be deprecated soon. Please refer to `customer.name` object
          example: John Test
          maxLength: 255
          nullable: true
          type: string
        phone:
          deprecated: true
          description: |-
            The customer's phone number
            This field will be deprecated soon. Please refer to `customer.phone` object
          example: "9123456789"
          maxLength: 255
          nullable: true
          type: string
        return_url:
          description: The URL to redirect after the completion of the operation
          example: https://hyperswitch.io
          nullable: true
          type: string
        authentication_type:
          allOf:
          - $ref: '#/components/schemas/AuthenticationType'
          default: three_ds
          nullable: true
        statement_descriptor_name:
          description: "For non-card charges, you can use this value as the complete\
            \ description that appears on your customers’ statements. Must contain\
            \ at least one letter, maximum 22 characters."
          example: Hyperswitch Router
          maxLength: 255
          nullable: true
          type: string
        statement_descriptor_suffix:
          description: Provides information about a card payment that customers see
            on their statements. Concatenated with the prefix (shortened descriptor)
            or statement descriptor that’s set on the account to form the complete
            statement descriptor. Maximum 255 characters for the concatenated descriptor.
          example: Payment for shoes purchase
          maxLength: 255
          nullable: true
          type: string
        next_action:
          allOf:
          - $ref: '#/components/schemas/NextActionData'
          nullable: true
        cancellation_reason:
          description: If the payment was cancelled the reason will be provided here
          nullable: true
          type: string
        error_code:
          description: If there was an error while calling the connectors the code
            is received here
          example: E0001
          nullable: true
          type: string
        error_message:
          description: If there was an error while calling the connector the error
            message is received here
          example: Failed while verifying the card
          nullable: true
          type: string
        unified_code:
          description: error code unified across the connectors is received here if
            there was an error while calling connector
          nullable: true
          type: string
        unified_message:
          description: error message unified across the connectors is received here
            if there was an error while calling connector
          nullable: true
          type: string
        payment_experience:
          allOf:
          - $ref: '#/components/schemas/PaymentExperience'
          nullable: true
        payment_method_type:
          allOf:
          - $ref: '#/components/schemas/PaymentMethodType'
          nullable: true
        connector_label:
          description: The connector used for this payment along with the country
            and business details
          example: stripe_US_food
          nullable: true
          type: string
        business_country:
          allOf:
          - $ref: '#/components/schemas/CountryAlpha2'
          nullable: true
        business_label:
          description: The business label of merchant for this payment
          nullable: true
          type: string
        business_sub_label:
          description: The business_sub_label for this payment
          nullable: true
          type: string
        allowed_payment_method_types:
          description: Allowed Payment Method Types for a given PaymentIntent
          items:
            $ref: '#/components/schemas/PaymentMethodType'
          nullable: true
          type: array
        ephemeral_key:
          allOf:
          - $ref: '#/components/schemas/EphemeralKeyCreateResponse'
          nullable: true
        manual_retry_allowed:
          description: If true the payment can be retried with same or different payment
            method which means the confirm call can be made again.
          nullable: true
          type: boolean
        connector_transaction_id:
          description: A unique identifier for a payment provided by the connector
          example: 993672945374576J
          nullable: true
          type: string
        frm_message:
          allOf:
          - $ref: '#/components/schemas/FrmMessage'
          nullable: true
        metadata:
          description: "You can specify up to 50 keys, with key names up to 40 characters\
            \ long and values up to 500 characters long. Metadata is useful for storing\
            \ additional, structured information on an object."
          nullable: true
          type: object
        connector_metadata:
          allOf:
          - $ref: '#/components/schemas/ConnectorMetadata'
          nullable: true
        feature_metadata:
          allOf:
          - $ref: '#/components/schemas/FeatureMetadata'
          nullable: true
        reference_id:
          description: reference(Identifier) to the payment at connector side
          example: 993672945374576J
          nullable: true
          type: string
        payment_link:
          allOf:
          - $ref: '#/components/schemas/PaymentLinkResponse'
          nullable: true
        profile_id:
          description: The business profile that is associated with this payment
          nullable: true
          type: string
        surcharge_details:
          allOf:
          - $ref: '#/components/schemas/RequestSurchargeDetails'
          nullable: true
        attempt_count:
          description: Total number of attempts associated with this payment
          format: int32
          type: integer
        merchant_decision:
          description: "Denotes the action(approve or reject) taken by merchant in\
            \ case of manual review. Manual review can occur when the transaction\
            \ is marked as risky by the frm_processor, payment processor or when there\
            \ is underpayment/over payment incase of crypto payment"
          nullable: true
          type: string
        merchant_connector_id:
          description: Identifier of the connector ( merchant connector account )
            which was chosen to make the payment
          nullable: true
          type: string
        incremental_authorization_allowed:
          description: "If true, incremental authorization can be performed on this\
            \ payment, in case the funds authorized initially fall short."
          nullable: true
          type: boolean
        authorization_count:
          description: Total number of authorizations happened in an incremental_authorization
            payment
          format: int32
          nullable: true
          type: integer
        incremental_authorizations:
          description: List of incremental authorizations happened to the payment
          items:
            $ref: '#/components/schemas/IncrementalAuthorizationResponse'
          nullable: true
          type: array
        external_authentication_details:
          allOf:
          - $ref: '#/components/schemas/ExternalAuthenticationDetailsResponse'
          nullable: true
        external_3ds_authentication_attempted:
          description: Flag indicating if external 3ds authentication is made or not
          nullable: true
          type: boolean
        expires_on:
          description: Date Time for expiry of the payment
          example: 2022-09-10T10:11:12Z
          format: date-time
          nullable: true
          type: string
        fingerprint:
          description: |-
            Payment Fingerprint, to identify a particular card.
            It is a 20 character long alphanumeric code.
          nullable: true
          type: string
        browser_info:
          allOf:
          - $ref: '#/components/schemas/BrowserInformation'
          nullable: true
        payment_method_id:
          description: Identifier for Payment Method used for the payment
          nullable: true
          type: string
        payment_method_status:
          allOf:
          - $ref: '#/components/schemas/PaymentMethodStatus'
          nullable: true
        updated:
          description: Date time at which payment was updated
          example: 2022-09-10T10:11:12Z
          format: date-time
          nullable: true
          type: string
        charges:
          allOf:
          - $ref: '#/components/schemas/PaymentChargeResponse'
          nullable: true
        frm_metadata:
          description: "You can specify up to 50 keys, with key names up to 40 characters\
            \ long and values up to 500 characters long. FRM Metadata is useful for\
            \ storing additional, structured information on an object related to FRM."
          nullable: true
          type: object
        merchant_order_reference_id:
          description: |-
            Merchant's identifier for the payment/invoice. This will be sent to the connector
            if the connector provides support to accept multiple reference ids.
            In case the connector supports only one reference id, Hyperswitch's Payment ID will be sent as reference.
          example: Custom_Order_id_123
          maxLength: 255
          nullable: true
          type: string
        order_tax_amount:
          allOf:
          - $ref: '#/components/schemas/MinorUnit'
          nullable: true
        connector_mandate_id:
          description: Connector Identifier for the payment method
          nullable: true
          type: string
      required:
      - amount
      - amount_capturable
      - attempt_count
      - currency
      - merchant_id
      - net_amount
      - payment_id
      - payment_method
      - status
      type: object
    PaymentsRetrieveRequest:
      description: Request for Payment Status
      properties:
        force_sync:
          description: |-
            A boolean used to indicate if the payment status should be fetched from the connector
            If this is set to true, the status will be fetched from the connector
          type: boolean
      type: object
    PaymentsSessionRequest:
      type: object
    PaymentsSessionResponse:
      example:
        session_token:
        - wallet_name: google_pay
        - wallet_name: google_pay
        payment_id: payment_id
        client_secret: client_secret
      properties:
        payment_id:
          description: The identifier for the payment
          type: string
        client_secret:
          description: "This is a token which expires after 15 minutes, used from\
            \ the client to authenticate and create sessions from the SDK"
          type: string
        session_token:
          description: The list of session token object
          items:
            $ref: '#/components/schemas/SessionToken'
          type: array
      required:
      - client_secret
      - payment_id
      - session_token
      type: object
    PayoutActionRequest:
      type: object
    PayoutAttemptResponse:
      properties:
        attempt_id:
          description: Unique identifier for the attempt
          type: string
        status:
          $ref: '#/components/schemas/PayoutStatus'
        amount:
          description: "The payout attempt amount. Amount for the payout in lowest\
            \ denomination of the currency. (i.e) in cents for USD denomination, in\
            \ paisa for INR denomination etc.,"
          example: 6583
          format: int64
          type: integer
        currency:
          allOf:
          - $ref: '#/components/schemas/Currency'
          nullable: true
        connector:
          description: The connector used for the payout
          nullable: true
          type: string
        error_code:
          description: Connector's error code in case of failures
          nullable: true
          type: string
        error_message:
          description: Connector's error message in case of failures
          nullable: true
          type: string
        payment_method:
          allOf:
          - $ref: '#/components/schemas/PayoutType'
          nullable: true
        payout_method_type:
          allOf:
          - $ref: '#/components/schemas/PaymentMethodType'
          nullable: true
        connector_transaction_id:
          description: A unique identifier for a payout provided by the connector
          nullable: true
          type: string
        cancellation_reason:
          description: If the payout was cancelled the reason provided here
          nullable: true
          type: string
        unified_code:
          description: |-
            (This field is not live yet)
            Error code unified across the connectors is received here in case of errors while calling the underlying connector
          example: UE_000
          maxLength: 255
          nullable: true
          type: string
        unified_message:
          description: |-
            (This field is not live yet)
            Error message unified across the connectors is received here in case of errors while calling the underlying connector
          example: Invalid card details
          maxLength: 1024
          nullable: true
          type: string
      required:
      - amount
      - attempt_id
      - status
      type: object
    PayoutConnectors:
      enum:
      - adyen
      - adyenplatform
      - cybersource
      - ebanx
      - payone
      - paypal
      - stripe
      - wise
      type: string
    PayoutCreatePayoutLinkConfig:
      allOf:
      - allOf:
        - $ref: '#/components/schemas/GenericLinkUiConfig'
        nullable: true
      - properties:
          payout_link_id:
            description: The unique identifier for the collect link.
            example: pm_collect_link_2bdacf398vwzq5n422S1
            nullable: true
            type: string
          enabled_payment_methods:
            description: List of payout methods shown on collect UI
            example: "[{\"payment_method\": \"bank_transfer\", \"payment_method_types\"\
              : [\"ach\", \"bacs\"]}]"
            items:
              $ref: '#/components/schemas/EnabledPaymentMethod'
            nullable: true
            type: array
          form_layout:
            allOf:
            - $ref: '#/components/schemas/UIWidgetFormLayout'
            nullable: true
          test_mode:
            description: |-
              `test_mode` allows for opening payout links without any restrictions. This removes
              - domain name validations
              - check for making sure link is accessed within an iframe
            example: false
            nullable: true
            type: boolean
        type: object
      description: "Custom payout link config for the particular payout, if payout\
        \ link is to be generated."
    PayoutCreateRequest:
      additionalProperties: false
      properties:
        payout_id:
          description: "Unique identifier for the payout. This ensures idempotency\
            \ for multiple payouts that have been done by a single merchant. This\
            \ field is auto generated and is returned in the API response, **not required\
            \ to be included in the Payout Create/Update Request.**"
          example: 187282ab-40ef-47a9-9206-5099ba31e432
          maxLength: 30
          minLength: 30
          nullable: true
          type: string
        merchant_id:
          description: "This is an identifier for the merchant account. This is inferred\
            \ from the API key provided during the request, **not required to be included\
            \ in the Payout Create/Update Request.**"
          example: merchant_1668273825
          maxLength: 255
          nullable: true
          type: string
        amount:
          description: "The payout amount. Amount for the payout in lowest denomination\
            \ of the currency. (i.e) in cents for USD denomination, in paisa for INR\
            \ denomination etc.,"
          example: 1000
          format: int64
          minimum: 0
          nullable: true
          type: integer
        currency:
          allOf:
          - $ref: '#/components/schemas/Currency'
          nullable: true
        routing:
          allOf:
          - $ref: '#/components/schemas/RoutingAlgorithm'
          nullable: true
        connector:
          description: This field allows the merchant to manually select a connector
            with which the payout can go through.
          example:
          - wise
          - adyen
          items:
            $ref: '#/components/schemas/PayoutConnectors'
          nullable: true
          type: array
        confirm:
          default: false
          description: "This field is used when merchant wants to confirm the payout,\
            \ thus useful for the payout _Confirm_ request. Ideally merchants should\
            \ _Create_ a payout, _Update_ it (if required), then _Confirm_ it."
          example: true
          nullable: true
          type: boolean
        payout_type:
          allOf:
          - $ref: '#/components/schemas/PayoutType'
          nullable: true
        payout_method_data:
          allOf:
          - $ref: '#/components/schemas/PayoutMethodData'
          nullable: true
        billing:
          allOf:
          - $ref: '#/components/schemas/Address'
          nullable: true
        auto_fulfill:
          default: false
          description: "Set to true to confirm the payout without review, no further\
            \ action required"
          example: true
          nullable: true
          type: boolean
        customer_id:
          deprecated: true
          description: "The identifier for the customer object. If not provided the\
            \ customer ID will be autogenerated. _Deprecated: Use customer_id instead._"
          example: cus_y3oqhf46pyzuxjbcn2giaqnb44
          maxLength: 255
          nullable: true
          type: string
        customer:
          allOf:
          - $ref: '#/components/schemas/CustomerDetails'
          nullable: true
        client_secret:
          description: It's a token used for client side verification.
          example: pay_U42c409qyHwOkWo3vK60_secret_el9ksDkiB8hi6j9N78yo
          nullable: true
          type: string
        return_url:
          description: The URL to redirect after the completion of the operation
          example: https://hyperswitch.io
          nullable: true
          type: string
        business_country:
          allOf:
          - $ref: '#/components/schemas/CountryAlpha2'
          nullable: true
        business_label:
          deprecated: true
          description: "Business label of the merchant for this payout. _Deprecated:\
            \ Use profile_id instead._"
          example: food
          nullable: true
          type: string
        description:
          description: A description of the payout
          example: It's my first payout request
          nullable: true
          type: string
        entity_type:
          allOf:
          - $ref: '#/components/schemas/PayoutEntityType'
          nullable: true
        recurring:
          default: false
          description: Specifies whether or not the payout request is recurring
          nullable: true
          type: boolean
        metadata:
          description: "You can specify up to 50 keys, with key names up to 40 characters\
            \ long and values up to 500 characters long. Metadata is useful for storing\
            \ additional, structured information on an object."
          nullable: true
          type: object
        payout_token:
          description: "Provide a reference to a stored payout method, used to process\
            \ the payout."
          example: 187282ab-40ef-47a9-9206-5099ba31e432
          nullable: true
          type: string
        profile_id:
          description: "The business profile to use for this payout, especially if\
            \ there are multiple business profiles associated with the account, otherwise\
            \ default business profile associated with the merchant account will be\
            \ used."
          nullable: true
          type: string
        priority:
          allOf:
          - $ref: '#/components/schemas/PayoutSendPriority'
          nullable: true
        payout_link:
          default: false
          description: "Whether to get the payout link (if applicable). Merchant need\
            \ to specify this during the Payout _Create_, this field can not be updated\
            \ during Payout _Update_."
          example: true
          nullable: true
          type: boolean
        payout_link_config:
          allOf:
          - $ref: '#/components/schemas/PayoutCreatePayoutLinkConfig'
          nullable: true
        session_expiry:
          description: |-
            Will be used to expire client secret after certain amount of time to be supplied in seconds
            (900) for 15 mins
          example: 900
          format: int32
          minimum: 0
          nullable: true
          type: integer
        email:
          deprecated: true
          description: "Customer's email. _Deprecated: Use customer object instead._"
          example: johntest@test.com
          maxLength: 255
          nullable: true
          type: string
        name:
          deprecated: true
          description: "Customer's name. _Deprecated: Use customer object instead._"
          example: John Test
          maxLength: 255
          nullable: true
          type: string
        phone:
          deprecated: true
          description: "Customer's phone. _Deprecated: Use customer object instead._"
          example: "9123456789"
          maxLength: 255
          nullable: true
          type: string
        phone_country_code:
          deprecated: true
          description: "Customer's phone country code. _Deprecated: Use customer object\
            \ instead._"
          example: "+1"
          maxLength: 255
          nullable: true
          type: string
      type: object
    PayoutCreateResponse:
      additionalProperties: false
      properties:
        payout_id:
          description: |-
            Unique identifier for the payout. This ensures idempotency for multiple payouts
            that have been done by a single merchant. This field is auto generated and is returned in the API response.
          example: 187282ab-40ef-47a9-9206-5099ba31e432
          maxLength: 30
          minLength: 30
          type: string
        merchant_id:
          description: |-
            This is an identifier for the merchant account. This is inferred from the API key
            provided during the request
          example: merchant_1668273825
          maxLength: 255
          type: string
        amount:
          description: "The payout amount. Amount for the payout in lowest denomination\
            \ of the currency. (i.e) in cents for USD denomination, in paisa for INR\
            \ denomination etc.,"
          example: 1000
          format: int64
          type: integer
        currency:
          $ref: '#/components/schemas/Currency'
        connector:
          description: The connector used for the payout
          example: wise
          nullable: true
          type: string
        payout_type:
          allOf:
          - $ref: '#/components/schemas/PayoutType'
          nullable: true
        payout_method_data:
          allOf:
          - $ref: '#/components/schemas/PayoutMethodDataResponse'
          nullable: true
        billing:
          allOf:
          - $ref: '#/components/schemas/Address'
          nullable: true
        auto_fulfill:
          default: false
          description: "Set to true to confirm the payout without review, no further\
            \ action required"
          example: true
          type: boolean
        customer_id:
          description: The identifier for the customer object. If not provided the
            customer ID will be autogenerated.
          example: cus_y3oqhf46pyzuxjbcn2giaqnb44
          maxLength: 255
          type: string
        customer:
          allOf:
          - $ref: '#/components/schemas/CustomerDetailsResponse'
          nullable: true
        client_secret:
          description: It's a token used for client side verification.
          example: pay_U42c409qyHwOkWo3vK60_secret_el9ksDkiB8hi6j9N78yo
          type: string
        return_url:
          description: The URL to redirect after the completion of the operation
          example: https://hyperswitch.io
          type: string
        business_country:
          $ref: '#/components/schemas/CountryAlpha2'
        business_label:
          description: Business label of the merchant for this payout
          example: food
          nullable: true
          type: string
        description:
          description: A description of the payout
          example: It's my first payout request
          nullable: true
          type: string
        entity_type:
          $ref: '#/components/schemas/PayoutEntityType'
        recurring:
          default: false
          description: Specifies whether or not the payout request is recurring
          type: boolean
        metadata:
          description: "You can specify up to 50 keys, with key names up to 40 characters\
            \ long and values up to 500 characters long. Metadata is useful for storing\
            \ additional, structured information on an object."
          nullable: true
          type: object
        merchant_connector_id:
          description: Unique identifier of the merchant connector account
          example: mca_sAD3OZLATetvjLOYhUSy
          nullable: true
          type: string
        status:
          $ref: '#/components/schemas/PayoutStatus'
        error_message:
          description: If there was an error while calling the connector the error
            message is received here
          example: Failed while verifying the card
          nullable: true
          type: string
        error_code:
          description: If there was an error while calling the connectors the code
            is received here
          example: E0001
          nullable: true
          type: string
        profile_id:
          description: The business profile that is associated with this payout
          type: string
        created:
          description: Time when the payout was created
          example: 2022-09-10T10:11:12Z
          format: date-time
          nullable: true
          type: string
        connector_transaction_id:
          description: Underlying processor's payout resource ID
          example: S3FC9G9M2MVFDXT5
          nullable: true
          type: string
        priority:
          allOf:
          - $ref: '#/components/schemas/PayoutSendPriority'
          nullable: true
        attempts:
          description: List of attempts
          items:
            $ref: '#/components/schemas/PayoutAttemptResponse'
          nullable: true
          type: array
        payout_link:
          allOf:
          - $ref: '#/components/schemas/PayoutLinkResponse'
          nullable: true
        email:
          deprecated: true
          description: "Customer's email. _Deprecated: Use customer object instead._"
          example: johntest@test.com
          maxLength: 255
          nullable: true
          type: string
        name:
          deprecated: true
          description: "Customer's name. _Deprecated: Use customer object instead._"
          example: John Test
          maxLength: 255
          nullable: true
          type: string
        phone:
          deprecated: true
          description: "Customer's phone. _Deprecated: Use customer object instead._"
          example: "9123456789"
          maxLength: 255
          nullable: true
          type: string
        phone_country_code:
          deprecated: true
          description: "Customer's phone country code. _Deprecated: Use customer object\
            \ instead._"
          example: "+1"
          maxLength: 255
          nullable: true
          type: string
        unified_code:
          description: |-
            (This field is not live yet)
            Error code unified across the connectors is received here in case of errors while calling the underlying connector
          example: UE_000
          maxLength: 255
          nullable: true
          type: string
        unified_message:
          description: |-
            (This field is not live yet)
            Error message unified across the connectors is received here in case of errors while calling the underlying connector
          example: Invalid card details
          maxLength: 1024
          nullable: true
          type: string
      required:
      - amount
      - auto_fulfill
      - business_country
      - client_secret
      - currency
      - customer_id
      - entity_type
      - merchant_id
      - payout_id
      - profile_id
      - recurring
      - return_url
      - status
      type: object
    PayoutEntityType:
      description: "Type of entity to whom the payout is being carried out to, select\
        \ from the given list of options"
      enum:
      - Individual
      - Company
      - NonProfit
      - PublicSector
      - NaturalPerson
      - lowercase
      - Personal
      type: string
    PayoutLinkInitiateRequest:
      properties:
        merchant_id:
          type: string
        payout_id:
          type: string
      required:
      - merchant_id
      - payout_id
      type: object
    PayoutLinkResponse:
      properties:
        payout_link_id:
          type: string
        link:
          type: string
      required:
      - link
      - payout_link_id
      type: object
    PayoutListConstraints:
      allOf:
      - allOf:
        - $ref: '#/components/schemas/TimeRange'
        nullable: true
      - properties:
          customer_id:
            description: The identifier for customer
            example: cus_y3oqhf46pyzuxjbcn2giaqnb44
            nullable: true
            type: string
          starting_after:
            description: "A cursor for use in pagination, fetch the next list after\
              \ some object"
            example: pay_fafa124123
            nullable: true
            type: string
          ending_before:
            description: "A cursor for use in pagination, fetch the previous list\
              \ before some object"
            example: pay_fafa124123
            nullable: true
            type: string
          limit:
            default: 10
            description: limit on the number of objects to return
            format: int32
            maximum: 100
            minimum: 0
            type: integer
          created:
            description: The time at which payout is created
            example: 2022-09-10T10:11:12Z
            format: date-time
            nullable: true
            type: string
        type: object
    PayoutListFilterConstraints:
      allOf:
      - allOf:
        - $ref: '#/components/schemas/TimeRange'
        nullable: true
      - properties:
          payout_id:
            description: The identifier for payout
            example: 187282ab-40ef-47a9-9206-5099ba31e432
            maxLength: 30
            minLength: 30
            nullable: true
            type: string
          profile_id:
            description: The identifier for business profile
            nullable: true
            type: string
          customer_id:
            description: The identifier for customer
            example: cus_y3oqhf46pyzuxjbcn2giaqnb44
            nullable: true
            type: string
          limit:
            description: The limit on the number of objects. The default limit is
              10 and max limit is 20
            format: int32
            minimum: 0
            type: integer
          offset:
            description: The starting point within a list of objects
            format: int32
            minimum: 0
            nullable: true
            type: integer
          connector:
            description: The list of connectors to filter payouts list
            example:
            - wise
            - adyen
            items:
              $ref: '#/components/schemas/PayoutConnectors'
            nullable: true
            type: array
          currency:
            $ref: '#/components/schemas/Currency'
          status:
            description: The list of payout status to filter payouts list
            example:
            - pending
            - failed
            items:
              $ref: '#/components/schemas/PayoutStatus'
            nullable: true
            type: array
          payout_method:
            description: The list of payout methods to filter payouts list
            example:
            - bank
            - card
            items:
              $ref: '#/components/schemas/PayoutType'
            nullable: true
            type: array
          entity_type:
            $ref: '#/components/schemas/PayoutEntityType'
        required:
        - currency
        - entity_type
        type: object
    PayoutListResponse:
      properties:
        size:
          description: The number of payouts included in the list
          minimum: 0
          type: integer
        data:
          description: The list of payouts response objects
          items:
            $ref: '#/components/schemas/PayoutCreateResponse'
          type: array
        total_count:
          description: The total number of available payouts for given constraints
          format: int64
          nullable: true
          type: integer
      required:
      - data
      - size
      type: object
    PayoutMethodData:
      description: The payout method information required for carrying out a payout
      oneOf:
      - $ref: '#/components/schemas/PayoutMethodData_oneOf'
      - $ref: '#/components/schemas/PayoutMethodData_oneOf_1'
      - $ref: '#/components/schemas/PayoutMethodData_oneOf_2'
    PayoutMethodDataResponse:
      description: The payout method information for response
      oneOf:
      - $ref: '#/components/schemas/PayoutMethodDataResponse_oneOf'
      - $ref: '#/components/schemas/PayoutMethodDataResponse_oneOf_1'
      - $ref: '#/components/schemas/PayoutMethodDataResponse_oneOf_2'
    PayoutRequest:
      oneOf:
      - $ref: '#/components/schemas/PayoutRequest_oneOf'
      - $ref: '#/components/schemas/PayoutRequest_oneOf_1'
      - $ref: '#/components/schemas/PayoutRequest_oneOf_2'
    PayoutRetrieveBody:
      properties:
        force_sync:
          nullable: true
          type: boolean
        merchant_id:
          nullable: true
          type: string
      type: object
    PayoutRetrieveRequest:
      properties:
        payout_id:
          description: |-
            Unique identifier for the payout. This ensures idempotency for multiple payouts
            that have been done by a single merchant. This field is auto generated and is returned in the API response.
          example: 187282ab-40ef-47a9-9206-5099ba31e432
          maxLength: 30
          minLength: 30
          type: string
        force_sync:
          default: false
          description: |-
            `force_sync` with the connector to get payout details
            (defaults to false)
          example: true
          nullable: true
          type: boolean
        merchant_id:
          description: The identifier for the Merchant Account.
          nullable: true
          type: string
      required:
      - payout_id
      type: object
    PayoutSendPriority:
      description: "The send method which will be required for processing payouts,\
        \ check options for better understanding."
      enum:
      - instant
      - fast
      - regular
      - wire
      - cross_border
      - internal
      type: string
    PayoutStatus:
      enum:
      - success
      - failed
      - cancelled
      - initiated
      - expired
      - reversed
      - pending
      - ineligible
      - requires_creation
      - requires_confirmation
      - requires_payout_method_data
      - requires_fulfillment
      - requires_vendor_account_creation
      type: string
    PayoutType:
      description: "The payout_type of the payout request is a mandatory field for\
        \ confirming the payouts. It should be specified in the Create request. If\
        \ not provided, it must be updated in the Payout Update request before it\
        \ can be confirmed."
      enum:
      - card
      - bank
      - wallet
      type: string
    Paypal:
      properties:
        email:
          description: Email linked with paypal account
          example: john.doe@example.com
          type: string
        telephone_number:
          description: mobile number linked to paypal account
          example: "16608213349"
          type: string
        paypal_id:
          description: id of the paypal account
          example: G83KXTJ5EHCQ2
          type: string
      required:
      - email
      - paypal_id
      - telephone_number
      type: object
    PaypalAdditionalData:
      description: Masked payout method details for paypal wallet payout method
      properties:
        email:
          description: Email linked with paypal account
          example: john.doe@example.com
          nullable: true
          type: string
        telephone_number:
          description: mobile number linked to paypal account
          example: '******* 3349'
          nullable: true
          type: string
        paypal_id:
          description: id of the paypal account
          example: G83K ***** HCQ2
          nullable: true
          type: string
      type: object
    PaypalRedirection:
      properties:
        email:
          description: paypal's email address
          example: johntest@test.com
          maxLength: 255
          nullable: true
          type: string
      type: object
    PaypalSessionTokenResponse:
      properties:
        connector:
          description: Name of the connector
          type: string
        session_token:
          description: The session token for PayPal
          type: string
        sdk_next_action:
          $ref: '#/components/schemas/SdkNextAction'
      required:
      - connector
      - sdk_next_action
      - session_token
      type: object
    PazeSessionTokenResponse:
      properties:
        client_id:
          description: Paze Client ID
          type: string
        client_name:
          description: Client Name to be displayed on the Paze screen
          type: string
        client_profile_id:
          description: Paze Client Profile ID
          type: string
        transaction_currency_code:
          $ref: '#/components/schemas/Currency'
        transaction_amount:
          description: The transaction amount
          example: "38.02"
          type: string
        email_address:
          description: Email Address
          example: johntest@test.com
          maxLength: 255
          nullable: true
          type: string
      required:
      - client_id
      - client_name
      - client_profile_id
      - transaction_amount
      - transaction_currency_code
      type: object
    PazeWalletData:
      properties:
        complete_response:
          type: string
      required:
      - complete_response
      type: object
    PhoneDetails:
      properties:
        number:
          description: The contact number
          example: "9123456789"
          nullable: true
          type: string
        country_code:
          description: The country code attached to the number
          example: "+1"
          nullable: true
          type: string
      type: object
    PixBankTransfer:
      properties:
        bank_name:
          description: Bank name
          example: Deutsche Bank
          nullable: true
          type: string
        bank_branch:
          description: Bank branch
          example: "3707"
          nullable: true
          type: string
        bank_account_number:
          description: Bank account number is an unique identifier assigned by a bank
            to a customer.
          example: "000123456"
          type: string
        pix_key:
          description: Unique key for pix customer
          example: "000123456"
          type: string
        tax_id:
          description: Individual taxpayer identification number
          example: "000123456"
          nullable: true
          type: string
      required:
      - bank_account_number
      - pix_key
      type: object
    PixBankTransferAdditionalData:
      properties:
        pix_key:
          description: Partially masked unique key for pix transfer
          example: a1f4102e ****** 6fa48899c1d1
          nullable: true
          type: string
        cpf:
          description: Partially masked CPF - CPF is a Brazilian tax identification
            number
          example: '**** 124689'
          nullable: true
          type: string
        cnpj:
          description: Partially masked CNPJ - CNPJ is a Brazilian company tax identification
            number
          example: '**** 417312'
          nullable: true
          type: string
      type: object
    PollConfigResponse:
      properties:
        poll_id:
          description: Poll Id
          type: string
        delay_in_secs:
          description: Interval of the poll
          format: int32
          type: integer
        frequency:
          description: Frequency of the poll
          format: int32
          type: integer
      required:
      - delay_in_secs
      - frequency
      - poll_id
      type: object
    PollResponse:
      properties:
        poll_id:
          description: The poll id
          type: string
        status:
          $ref: '#/components/schemas/PollStatus'
      required:
      - poll_id
      - status
      type: object
    PollStatus:
      enum:
      - pending
      - completed
      - not_found
      type: string
    PresenceOfCustomerDuringPayment:
      description: "Set to true to indicate that the customer is in your checkout\
        \ flow during this payment, and therefore is able to authenticate. This parameter\
        \ should be false when merchant's doing merchant initiated payments and customer\
        \ is not present while doing the payment."
      enum:
      - Present
      - Absent
      type: string
    PrimaryBusinessDetails:
      additionalProperties: false
      properties:
        country:
          $ref: '#/components/schemas/CountryAlpha2'
        business:
          example: food
          type: string
      required:
      - business
      - country
      type: object
    ProcessorPaymentToken:
      description: Processor payment token for MIT payments where payment_method_data
        is not available
      properties:
        processor_payment_token:
          type: string
        merchant_connector_id:
          nullable: true
          type: string
      required:
      - processor_payment_token
      type: object
    ProductType:
      enum:
      - physical
      - digital
      - travel
      - ride
      - event
      - accommodation
      type: string
    ProfileCreate:
      additionalProperties: false
      example:
        enable_payment_response_hash: true
        payment_link_config: ""
        use_billing_as_payment_method_billing: true
        outgoing_webhook_custom_http_headers: "{}"
        metadata: "{}"
        is_connector_agnostic_mit_enabled: true
        order_fulfillment_time_origin: ""
        always_collect_shipping_details_from_wallet_connector: false
        tax_connector_id: tax_connector_id
        payment_response_hash_key: payment_response_hash_key
        always_collect_billing_details_from_wallet_connector: false
        is_network_tokenization_enabled: true
        order_fulfillment_time: 900
        webhook_details: ""
        is_tax_connector_enabled: true
        profile_name: profile_name
        authentication_connector_details: ""
        applepay_verified_domains:
        - applepay_verified_domains
        - applepay_verified_domains
        payout_link_config: ""
        redirect_to_merchant_with_http_post: true
        collect_shipping_details_from_wallet_connector_if_required: false
        collect_billing_details_from_wallet_connector_if_required: false
        return_url: https://www.example.com/success
        session_expiry: 900
      properties:
        profile_name:
          description: The name of profile
          maxLength: 64
          type: string
        return_url:
          description: The URL to redirect after the completion of the operation
          example: https://www.example.com/success
          maxLength: 255
          nullable: true
          type: string
        enable_payment_response_hash:
          default: true
          description: A boolean value to indicate if payment response hash needs
            to be enabled
          example: true
          nullable: true
          type: boolean
        payment_response_hash_key:
          description: "Refers to the hash key used for calculating the signature\
            \ for webhooks and redirect response. If the value is not provided, a\
            \ value is automatically generated."
          nullable: true
          type: string
        redirect_to_merchant_with_http_post:
          default: false
          description: A boolean value to indicate if redirect to merchant with http
            post needs to be enabled
          example: true
          nullable: true
          type: boolean
        webhook_details:
          allOf:
          - $ref: '#/components/schemas/WebhookDetails'
          nullable: true
        metadata:
          description: "Metadata is useful for storing additional, unstructured information\
            \ on an object."
          nullable: true
          type: object
        order_fulfillment_time:
          description: Will be used to determine the time till which your payment
            will be active once the payment session starts
          example: 900
          format: int32
          minimum: 0
          nullable: true
          type: integer
        order_fulfillment_time_origin:
          allOf:
          - $ref: '#/components/schemas/OrderFulfillmentTimeOrigin'
          nullable: true
        applepay_verified_domains:
          description: Verified Apple Pay domains for a particular profile
          items:
            type: string
          nullable: true
          type: array
        session_expiry:
          description: Client Secret Default expiry for all payments created under
            this profile
          example: 900
          format: int32
          minimum: 0
          nullable: true
          type: integer
        payment_link_config:
          allOf:
          - $ref: '#/components/schemas/BusinessPaymentLinkConfig'
          nullable: true
        authentication_connector_details:
          allOf:
          - $ref: '#/components/schemas/AuthenticationConnectorDetails'
          nullable: true
        use_billing_as_payment_method_billing:
          description: Whether to use the billing details passed when creating the
            intent as payment method billing
          nullable: true
          type: boolean
        collect_shipping_details_from_wallet_connector_if_required:
          default: false
          description: |-
            A boolean value to indicate if customer shipping details needs to be collected from wallet
            connector only if it is required field for connector (Eg. Apple Pay, Google Pay etc)
          example: false
          nullable: true
          type: boolean
        collect_billing_details_from_wallet_connector_if_required:
          default: false
          description: |-
            A boolean value to indicate if customer billing details needs to be collected from wallet
            connector only if it is required field for connector (Eg. Apple Pay, Google Pay etc)
          example: false
          nullable: true
          type: boolean
        always_collect_shipping_details_from_wallet_connector:
          default: false
          description: |-
            A boolean value to indicate if customer shipping details needs to be collected from wallet
            connector irrespective of connector required fields (Eg. Apple pay, Google pay etc)
          example: false
          nullable: true
          type: boolean
        always_collect_billing_details_from_wallet_connector:
          default: false
          description: |-
            A boolean value to indicate if customer billing details needs to be collected from wallet
            connector irrespective of connector required fields (Eg. Apple pay, Google pay etc)
          example: false
          nullable: true
          type: boolean
        is_connector_agnostic_mit_enabled:
          description: |-
            Indicates if the MIT (merchant initiated transaction) payments can be made connector
            agnostic, i.e., MITs may be processed through different connector than CIT (customer
            initiated transaction) based on the routing rules.
            If set to `false`, MIT will go through the same connector as the CIT.
          nullable: true
          type: boolean
        payout_link_config:
          allOf:
          - $ref: '#/components/schemas/BusinessPayoutLinkConfig'
          nullable: true
        outgoing_webhook_custom_http_headers:
          description: These key-value pairs are sent as additional custom headers
            in the outgoing webhook request. It is recommended not to use more than
            four key-value pairs.
          nullable: true
          type: object
        tax_connector_id:
          description: Merchant Connector id to be stored for tax_calculator connector
          nullable: true
          type: string
        is_tax_connector_enabled:
          description: |-
            Indicates if tax_calculator connector is enabled or not.
            If set to `true` tax_connector_id will be checked.
          type: boolean
        is_network_tokenization_enabled:
          description: Indicates if network tokenization is enabled or not.
          type: boolean
      required:
      - profile_name
      type: object
    ProfileDefaultRoutingConfig:
      properties:
        profile_id:
          type: string
        connectors:
          items:
            $ref: '#/components/schemas/RoutableConnectorChoice'
          type: array
      required:
      - connectors
      - profile_id
      type: object
    ProfileResponse:
      example:
        payment_link_config: ""
        metadata: "{}"
        should_collect_cvv_during_payment: true
        is_connector_agnostic_mit_enabled: true
        order_fulfillment_time_origin: ""
        always_collect_shipping_details_from_wallet_connector: false
        payment_response_hash_key: payment_response_hash_key
        always_collect_billing_details_from_wallet_connector: false
        merchant_id: y3oqhf46pyzuxjbcn2giaqnb44
        is_network_tokenization_enabled: false
        order_fulfillment_time: 900
        is_tax_connector_enabled: true
        profile_name: profile_name
        return_url: https://www.example.com/success
        id: pro_abcdefghijklmnopqrstuvwxyz
        extended_card_info_config: ""
        enable_payment_response_hash: true
        use_billing_as_payment_method_billing: true
        outgoing_webhook_custom_http_headers: "{}"
        tax_connector_id: tax_connector_id
        webhook_details: ""
        authentication_connector_details: ""
        applepay_verified_domains:
        - applepay_verified_domains
        - applepay_verified_domains
        payout_link_config: ""
        redirect_to_merchant_with_http_post: true
        collect_shipping_details_from_wallet_connector_if_required: false
        collect_billing_details_from_wallet_connector_if_required: false
        session_expiry: 900
      properties:
        merchant_id:
          description: The identifier for Merchant Account
          example: y3oqhf46pyzuxjbcn2giaqnb44
          maxLength: 64
          type: string
        id:
          description: "The identifier for profile. This must be used for creating\
            \ merchant accounts, payments and payouts"
          example: pro_abcdefghijklmnopqrstuvwxyz
          maxLength: 64
          type: string
        profile_name:
          description: Name of the profile
          maxLength: 64
          type: string
        return_url:
          description: The URL to redirect after the completion of the operation
          example: https://www.example.com/success
          maxLength: 255
          nullable: true
          type: string
        enable_payment_response_hash:
          default: true
          description: A boolean value to indicate if payment response hash needs
            to be enabled
          example: true
          type: boolean
        payment_response_hash_key:
          description: "Refers to the hash key used for calculating the signature\
            \ for webhooks and redirect response. If the value is not provided, a\
            \ value is automatically generated."
          nullable: true
          type: string
        redirect_to_merchant_with_http_post:
          default: false
          description: A boolean value to indicate if redirect to merchant with http
            post needs to be enabled
          example: true
          type: boolean
        webhook_details:
          allOf:
          - $ref: '#/components/schemas/WebhookDetails'
          nullable: true
        metadata:
          description: "Metadata is useful for storing additional, unstructured information\
            \ on an object."
          nullable: true
          type: object
        applepay_verified_domains:
          description: Verified Apple Pay domains for a particular profile
          items:
            type: string
          nullable: true
          type: array
        session_expiry:
          description: Client Secret Default expiry for all payments created under
            this profile
          example: 900
          format: int64
          nullable: true
          type: integer
        payment_link_config:
          allOf:
          - $ref: '#/components/schemas/BusinessPaymentLinkConfig'
          nullable: true
        authentication_connector_details:
          allOf:
          - $ref: '#/components/schemas/AuthenticationConnectorDetails'
          nullable: true
        use_billing_as_payment_method_billing:
          nullable: true
          type: boolean
        extended_card_info_config:
          allOf:
          - $ref: '#/components/schemas/ExtendedCardInfoConfig'
          nullable: true
        collect_shipping_details_from_wallet_connector_if_required:
          default: false
          description: |-
            A boolean value to indicate if customer shipping details needs to be collected from wallet
            connector only if it is required field for connector (Eg. Apple Pay, Google Pay etc)
          example: false
          nullable: true
          type: boolean
        collect_billing_details_from_wallet_connector_if_required:
          default: false
          description: |-
            A boolean value to indicate if customer billing details needs to be collected from wallet
            connector only if it is required field for connector (Eg. Apple Pay, Google Pay etc)
          example: false
          nullable: true
          type: boolean
        always_collect_shipping_details_from_wallet_connector:
          default: false
          description: |-
            A boolean value to indicate if customer shipping details needs to be collected from wallet
            connector irrespective of connector required fields (Eg. Apple pay, Google pay etc)
          example: false
          nullable: true
          type: boolean
        always_collect_billing_details_from_wallet_connector:
          default: false
          description: |-
            A boolean value to indicate if customer billing details needs to be collected from wallet
            connector irrespective of connector required fields (Eg. Apple pay, Google pay etc)
          example: false
          nullable: true
          type: boolean
        is_connector_agnostic_mit_enabled:
          description: |-
            Indicates if the MIT (merchant initiated transaction) payments can be made connector
            agnostic, i.e., MITs may be processed through different connector than CIT (customer
            initiated transaction) based on the routing rules.
            If set to `false`, MIT will go through the same connector as the CIT.
          nullable: true
          type: boolean
        payout_link_config:
          allOf:
          - $ref: '#/components/schemas/BusinessPayoutLinkConfig'
          nullable: true
        outgoing_webhook_custom_http_headers:
          description: These key-value pairs are sent as additional custom headers
            in the outgoing webhook request.
          nullable: true
          type: object
        order_fulfillment_time:
          description: Will be used to determine the time till which your payment
            will be active once the payment session starts
          example: 900
          format: int32
          minimum: 0
          nullable: true
          type: integer
        order_fulfillment_time_origin:
          allOf:
          - $ref: '#/components/schemas/OrderFulfillmentTimeOrigin'
          nullable: true
        tax_connector_id:
          description: Merchant Connector id to be stored for tax_calculator connector
          nullable: true
          type: string
        is_tax_connector_enabled:
          description: |-
            Indicates if tax_calculator connector is enabled or not.
            If set to `true` tax_connector_id will be checked.
          type: boolean
        is_network_tokenization_enabled:
          default: false
          description: Indicates if network tokenization is enabled or not.
          example: false
          type: boolean
        should_collect_cvv_during_payment:
          description: Indicates if CVV should be collected during payment or not.
          type: boolean
      required:
      - enable_payment_response_hash
      - id
      - is_network_tokenization_enabled
      - is_tax_connector_enabled
      - merchant_id
      - profile_name
      - redirect_to_merchant_with_http_post
      - should_collect_cvv_during_payment
      type: object
    ProgramConnectorSelection:
      description: |-
        The program, having a default connector selection and
        a bunch of rules. Also can hold arbitrary metadata.
      properties:
        defaultSelection:
          $ref: '#/components/schemas/ConnectorSelection'
        rules:
          $ref: '#/components/schemas/RuleConnectorSelection'
        metadata:
          additionalProperties: {}
          type: object
      required:
      - defaultSelection
      - metadata
      - rules
      type: object
    RealTimePaymentData:
      oneOf:
      - $ref: '#/components/schemas/RealTimePaymentData_oneOf'
      - $ref: '#/components/schemas/RealTimePaymentData_oneOf_1'
      - $ref: '#/components/schemas/RealTimePaymentData_oneOf_2'
      - $ref: '#/components/schemas/RealTimePaymentData_oneOf_3'
    RealTimePaymentDataResponse:
      allOf:
      - allOf:
        - $ref: '#/components/schemas/RealTimePaymentData'
        nullable: true
      - type: object
    ReceiverDetails:
      properties:
        amount_received:
          description: The amount received by receiver
          format: int64
          type: integer
        amount_charged:
          description: The amount charged by ACH
          format: int64
          nullable: true
          type: integer
        amount_remaining:
          description: The amount remaining to be sent via ACH
          format: int64
          nullable: true
          type: integer
      required:
      - amount_received
      type: object
    ReconStatus:
      enum:
      - not_requested
      - requested
      - active
      - disabled
      type: string
    RecurringDetails:
      description: Details required for recurring payment
      discriminator:
        propertyName: type
      oneOf:
      - $ref: '#/components/schemas/RecurringDetails_oneOf'
      - $ref: '#/components/schemas/RecurringDetails_oneOf_1'
      - $ref: '#/components/schemas/RecurringDetails_oneOf_2'
      - $ref: '#/components/schemas/RecurringDetails_oneOf_3'
    RedirectResponse:
      properties:
        param:
          nullable: true
          type: string
        json_payload:
          nullable: true
          type: object
      type: object
    RefundErrorDetails:
      properties:
        code:
          type: string
        message:
          type: string
      required:
      - code
      - message
      type: object
    RefundListRequest:
      allOf:
      - allOf:
        - $ref: '#/components/schemas/TimeRange'
        nullable: true
      - properties:
          payment_id:
            description: The identifier for the payment
            nullable: true
            type: string
          refund_id:
            description: The identifier for the refund
            nullable: true
            type: string
          profile_id:
            description: The identifier for business profile
            nullable: true
            type: string
          limit:
            description: Limit on the number of objects to return
            format: int64
            nullable: true
            type: integer
          offset:
            description: The starting point within a list of objects
            format: int64
            nullable: true
            type: integer
          amount_filter:
            allOf:
            - $ref: '#/components/schemas/AmountFilter'
            nullable: true
          connector:
            description: The list of connectors to filter refunds list
            items:
              type: string
            nullable: true
            type: array
          merchant_connector_id:
            description: The list of merchant connector ids to filter the refunds
              list for selected label
            items:
              type: string
            nullable: true
            type: array
          currency:
            description: The list of currencies to filter refunds list
            items:
              $ref: '#/components/schemas/Currency'
            nullable: true
            type: array
          refund_status:
            description: The list of refund statuses to filter refunds list
            items:
              $ref: '#/components/schemas/RefundStatus'
            nullable: true
            type: array
        type: object
    RefundListResponse:
      properties:
        count:
          description: The number of refunds included in the list
          minimum: 0
          type: integer
        total_count:
          description: The total number of refunds in the list
          format: int64
          type: integer
        data:
          description: The List of refund response object
          items:
            $ref: '#/components/schemas/RefundResponse'
          type: array
      required:
      - count
      - data
      - total_count
      type: object
    RefundRequest:
      additionalProperties: false
      properties:
        payment_id:
          description: The payment id against which refund is to be initiated
          example: pay_mbabizu24mvu3mela5njyhpit4
          maxLength: 30
          minLength: 30
          type: string
        refund_id:
          description: "Unique Identifier for the Refund. This is to ensure idempotency\
            \ for multiple partial refunds initiated against the same payment. If\
            \ this is not passed by the merchant, this field shall be auto generated\
            \ and provided in the API response. It is recommended to generate uuid(v4)\
            \ as the refund_id."
          example: ref_mbabizu24mvu3mela5njyhpit4
          maxLength: 30
          minLength: 30
          nullable: true
          type: string
        merchant_id:
          description: The identifier for the Merchant Account
          example: y3oqhf46pyzuxjbcn2giaqnb44
          maxLength: 255
          nullable: true
          type: string
        amount:
          description: "Total amount for which the refund is to be initiated. Amount\
            \ for the payment in lowest denomination of the currency. (i.e) in cents\
            \ for USD denomination, in paisa for INR denomination etc., If not provided,\
            \ this will default to the full payment amount"
          example: 6540
          format: int64
          minimum: 100
          nullable: true
          type: integer
        reason:
          description: "Reason for the refund. Often useful for displaying to users\
            \ and your customer support executive. In case the payment went through\
            \ Stripe, this field needs to be passed with one of these enums: `duplicate`,\
            \ `fraudulent`, or `requested_by_customer`"
          example: Customer returned the product
          maxLength: 255
          nullable: true
          type: string
        refund_type:
          allOf:
          - $ref: '#/components/schemas/RefundType'
          default: Instant
          nullable: true
        metadata:
          description: "You can specify up to 50 keys, with key names up to 40 characters\
            \ long and values up to 500 characters long. Metadata is useful for storing\
            \ additional, structured information on an object."
          nullable: true
          type: object
        merchant_connector_details:
          allOf:
          - $ref: '#/components/schemas/MerchantConnectorDetailsWrap'
          nullable: true
        charges:
          allOf:
          - $ref: '#/components/schemas/ChargeRefunds'
          nullable: true
      required:
      - payment_id
      type: object
    RefundResponse:
      example:
        connector_refund_reference_id: connector_refund_reference_id
        reason: reason
        amount: 6540
        metadata: "{}"
        merchant_connector_id: merchant_connector_id
        created_at: 2000-01-23T04:56:07.000+00:00
        updated_at: 2000-01-23T04:56:07.000+00:00
        connector: adyenplatform
        error_details: ""
        payment_id: payment_id
        profile_id: profile_id
        currency: AED
        id: id
        merchant_reference_id: ref_mbabizu24mvu3mela5njyhpit4
        status: succeeded
      properties:
        id:
          description: Global Refund Id for the refund
          type: string
        payment_id:
          description: The payment id against which refund is initiated
          type: string
        merchant_reference_id:
          description: Unique Identifier for the Refund. This is to ensure idempotency
            for multiple partial refunds initiated against the same payment.
          example: ref_mbabizu24mvu3mela5njyhpit4
          maxLength: 30
          minLength: 30
          nullable: true
          type: string
        amount:
          description: The refund amount
          example: 6540
          format: int64
          minimum: 100
          type: integer
        currency:
          $ref: '#/components/schemas/Currency'
        status:
          $ref: '#/components/schemas/RefundStatus'
        reason:
          description: An arbitrary string attached to the object
          nullable: true
          type: string
        metadata:
          description: "Metadata is useful for storing additional, unstructured information\
            \ on an object"
          nullable: true
          type: object
        error_details:
          allOf:
          - $ref: '#/components/schemas/RefundErrorDetails'
          nullable: true
        created_at:
          description: The timestamp at which refund is created
          format: date-time
          type: string
        updated_at:
          description: The timestamp at which refund is updated
          format: date-time
          type: string
        connector:
          $ref: '#/components/schemas/Connector'
        profile_id:
          description: The id of business profile for this refund
          type: string
        merchant_connector_id:
          description: The merchant_connector_id of the processor through which this
            payment went through
          type: string
        connector_refund_reference_id:
          description: The reference id of the connector for the refund
          nullable: true
          type: string
      required:
      - amount
      - connector
      - created_at
      - currency
      - id
      - merchant_connector_id
      - payment_id
      - profile_id
      - status
      - updated_at
      type: object
    RefundStatus:
      description: The status for refunds
      enum:
      - succeeded
      - failed
      - pending
      - review
      type: string
    RefundType:
      description: To indicate whether to refund needs to be instant or scheduled
      enum:
      - scheduled
      - instant
      type: string
    RefundUpdateRequest:
      additionalProperties: false
      properties:
        reason:
          description: An arbitrary string attached to the object. Often useful for
            displaying to users and your customer support executive
          example: Customer returned the product
          maxLength: 255
          nullable: true
          type: string
        metadata:
          description: "You can specify up to 50 keys, with key names up to 40 characters\
            \ long and values up to 500 characters long. Metadata is useful for storing\
            \ additional, structured information on an object."
          nullable: true
          type: object
      type: object
    RefundsCreateRequest:
      additionalProperties: false
      example:
        reason: Customer returned the product
        amount: 6540
        metadata: "{}"
        refund_type: ""
        payment_id: pay_mbabizu24mvu3mela5njyhpit4
        merchant_reference_id: ref_mbabizu24mvu3mela5njyhpit4
      properties:
        payment_id:
          description: The payment id against which refund is initiated
          example: pay_mbabizu24mvu3mela5njyhpit4
          maxLength: 30
          minLength: 30
          type: string
        merchant_reference_id:
          description: Unique Identifier for the Refund. This is to ensure idempotency
            for multiple partial refunds initiated against the same payment.
          example: ref_mbabizu24mvu3mela5njyhpit4
          maxLength: 30
          minLength: 30
          nullable: true
          type: string
        amount:
          description: "Total amount for which the refund is to be initiated. Amount\
            \ for the payment in lowest denomination of the currency. (i.e) in cents\
            \ for USD denomination, in paisa for INR denomination etc., If not provided,\
            \ this will default to the amount_captured of the payment"
          example: 6540
          format: int64
          minimum: 100
          nullable: true
          type: integer
        reason:
          description: Reason for the refund. Often useful for displaying to users
            and your customer support executive.
          example: Customer returned the product
          maxLength: 255
          nullable: true
          type: string
        refund_type:
          allOf:
          - $ref: '#/components/schemas/RefundType'
          default: Instant
          nullable: true
        metadata:
          description: "Metadata is useful for storing additional, unstructured information\
            \ on an object."
          nullable: true
          type: object
      required:
      - payment_id
      type: object
    RequestIncrementalAuthorization:
      enum:
      - "true"
      - "false"
      - default
      type: string
    RequestPaymentMethodTypes:
      properties:
        payment_method_type:
          $ref: '#/components/schemas/PaymentMethodType'
        payment_experience:
          allOf:
          - $ref: '#/components/schemas/PaymentExperience'
          nullable: true
        card_networks:
          items:
            $ref: '#/components/schemas/CardNetwork'
          nullable: true
          type: array
        accepted_currencies:
          allOf:
          - $ref: '#/components/schemas/AcceptedCurrencies'
          nullable: true
        accepted_countries:
          allOf:
          - $ref: '#/components/schemas/AcceptedCountries'
          nullable: true
        minimum_amount:
          allOf:
          - $ref: '#/components/schemas/MinorUnit'
          nullable: true
        maximum_amount:
          allOf:
          - $ref: '#/components/schemas/MinorUnit'
          nullable: true
        recurring_enabled:
          default: true
          description: Boolean to enable recurring payments / mandates. Default is
            true.
          example: false
          type: boolean
        installment_payment_enabled:
          default: true
          description: Boolean to enable installment / EMI / BNPL payments. Default
            is true.
          example: false
          type: boolean
      required:
      - installment_payment_enabled
      - payment_method_type
      - recurring_enabled
      type: object
    RequestSurchargeDetails:
      description: "Details of surcharge applied on this payment, if applicable"
      properties:
        surcharge_amount:
          example: 6540
          format: int64
          type: integer
        tax_amount:
          allOf:
          - $ref: '#/components/schemas/MinorUnit'
          nullable: true
      required:
      - surcharge_amount
      type: object
    RequiredFieldInfo:
      description: Required fields info used while listing the payment_method_data
      properties:
        required_field:
          description: Required field for a payment_method through a payment_method_type
          type: string
        display_name:
          description: Display name of the required field in the front-end
          type: string
        field_type:
          $ref: '#/components/schemas/FieldType'
        value:
          nullable: true
          type: string
      required:
      - display_name
      - field_type
      - required_field
      type: object
    RetrieveApiKeyResponse:
      description: The response body for retrieving an API Key.
      example:
        key_id: 5hEEqkgJUyuxgSKGArHA4mWSnX
        prefix: prefix
        created: 2022-09-10T10:11:12Z
        name: Sandbox integration key
        description: Key used by our developers to integrate with the sandbox environment
        expiration: never
        merchant_id: y3oqhf46pyzuxjbcn2giaqnb44
      properties:
        key_id:
          description: The identifier for the API Key.
          example: 5hEEqkgJUyuxgSKGArHA4mWSnX
          maxLength: 64
          type: string
        merchant_id:
          description: The identifier for the Merchant Account.
          example: y3oqhf46pyzuxjbcn2giaqnb44
          maxLength: 64
          type: string
        name:
          description: The unique name for the API Key to help you identify it.
          example: Sandbox integration key
          maxLength: 64
          type: string
        description:
          description: The description to provide more context about the API Key.
          example: Key used by our developers to integrate with the sandbox environment
          maxLength: 256
          nullable: true
          type: string
        prefix:
          description: The first few characters of the plaintext API Key to help you
            identify it.
          maxLength: 64
          type: string
        created:
          description: The time at which the API Key was created.
          example: 2022-09-10T10:11:12Z
          format: date-time
          type: string
        expiration:
          $ref: '#/components/schemas/ApiKeyExpiration'
      required:
      - created
      - expiration
      - key_id
      - merchant_id
      - name
      - prefix
      type: object
    RetrievePaymentLinkRequest:
      properties:
        client_secret:
          description: It's a token used for client side verification.
          nullable: true
          type: string
      type: object
    RetrievePaymentLinkResponse:
      properties:
        payment_link_id:
          description: Identifier for Payment Link
          type: string
        merchant_id:
          description: Identifier for Merchant
          type: string
        link_to_pay:
          description: Open payment link (without any security checks and listing
            SPMs)
          type: string
        amount:
          description: The payment amount. Amount for the payment in the lowest denomination
            of the currency
          example: 6540
          format: int64
          type: integer
        created_at:
          description: Date and time of Payment Link creation
          format: date-time
          type: string
        expiry:
          description: Date and time of Expiration for Payment Link
          format: date-time
          nullable: true
          type: string
        description:
          description: Description for Payment Link
          nullable: true
          type: string
        status:
          $ref: '#/components/schemas/PaymentLinkStatus'
        currency:
          allOf:
          - $ref: '#/components/schemas/Currency'
          nullable: true
        secure_link:
          description: Secure payment link (with security checks and listing saved
            payment methods)
          nullable: true
          type: string
      required:
      - amount
      - created_at
      - link_to_pay
      - merchant_id
      - payment_link_id
      - status
      type: object
    RetryAction:
      description: Denotes the retry action
      enum:
      - manual_retry
      - requeue
      type: string
    RevokeApiKeyResponse:
      description: The response body for revoking an API Key.
      example:
        key_id: 5hEEqkgJUyuxgSKGArHA4mWSnX
        merchant_id: y3oqhf46pyzuxjbcn2giaqnb44
        revoked: true
      properties:
        merchant_id:
          description: The identifier for the Merchant Account.
          example: y3oqhf46pyzuxjbcn2giaqnb44
          maxLength: 64
          type: string
        key_id:
          description: The identifier for the API Key.
          example: 5hEEqkgJUyuxgSKGArHA4mWSnX
          maxLength: 64
          type: string
        revoked:
          description: Indicates whether the API key was revoked or not.
          example: true
          type: boolean
      required:
      - key_id
      - merchant_id
      - revoked
      type: object
    RewardData:
      properties:
        merchant_id:
          description: The merchant ID with which we have to call the connector
          type: string
      required:
      - merchant_id
      type: object
    RoutableChoiceKind:
      enum:
      - OnlyConnector
      - FullStruct
      type: string
    RoutableConnectorChoice:
      description: Routable Connector chosen for a payment
      example:
        merchant_connector_id: merchant_connector_id
        connector: adyenplatform
      properties:
        connector:
          $ref: '#/components/schemas/RoutableConnectors'
        merchant_connector_id:
          nullable: true
          type: string
      required:
      - connector
      type: object
    RoutableConnectors:
      description: Connectors eligible for payments routing
      enum:
      - adyenplatform
      - phonypay
      - fauxpay
      - pretendpay
      - stripe_test
      - adyen_test
      - checkout_test
      - paypal_test
      - aci
      - adyen
      - airwallex
      - authorizedotnet
      - bankofamerica
      - billwerk
      - bitpay
      - bambora
      - bamboraapac
      - bluesnap
      - boku
      - braintree
      - cashtocode
      - checkout
      - coinbase
      - cryptopay
      - cybersource
      - datatrans
      - deutschebank
      - dlocal
      - ebanx
      - fiserv
      - fiservemea
      - fiuu
      - forte
      - globalpay
      - globepay
      - gocardless
      - helcim
      - iatapay
      - itaubank
      - klarna
      - mifinity
      - mollie
      - multisafepay
      - nexinets
      - nexixpay
      - nmi
      - noon
      - novalnet
      - nuvei
      - opennode
      - paybox
      - payme
      - payone
      - paypal
      - payu
      - placetopay
      - powertranz
      - prophetpay
      - rapyd
      - razorpay
      - riskified
      - shift4
      - signifyd
      - square
      - stax
      - stripe
      - trustpay
      - tsys
      - volt
      - wellsfargo
      - wise
      - worldline
      - worldpay
      - zen
      - plaid
      - zsl
      type: string
    RoutingAlgorithm:
      description: Routing Algorithm kind
      discriminator:
        propertyName: type
      oneOf:
      - $ref: '#/components/schemas/RoutingAlgorithm_oneOf'
      - $ref: '#/components/schemas/ConnectorSelection_oneOf'
      - $ref: '#/components/schemas/ConnectorSelection_oneOf_1'
      - $ref: '#/components/schemas/RoutingAlgorithm_oneOf_1'
    RoutingAlgorithmId:
      example:
        routing_algorithm_id: routing_algorithm_id
      properties:
        routing_algorithm_id:
          type: string
      required:
      - routing_algorithm_id
      type: object
    RoutingAlgorithmKind:
      enum:
      - single
      - priority
      - volume_split
      - advanced
      - dynamic
      type: string
    RoutingConfigRequest:
      example:
        profile_id: profile_id
        name: name
        description: description
        algorithm:
          data:
            merchant_connector_id: merchant_connector_id
            connector: adyenplatform
          type: single
      properties:
        name:
          type: string
        description:
          type: string
        algorithm:
          $ref: '#/components/schemas/RoutingAlgorithm'
        profile_id:
          type: string
      required:
      - algorithm
      - description
      - name
      - profile_id
      type: object
    RoutingDictionary:
      properties:
        merchant_id:
          type: string
        active_id:
          nullable: true
          type: string
        records:
          items:
            $ref: '#/components/schemas/RoutingDictionaryRecord'
          type: array
      required:
      - merchant_id
      - records
      type: object
    RoutingDictionaryRecord:
      example:
        profile_id: profile_id
        kind: single
        algorithm_for: ""
        name: name
        description: description
        created_at: 0
        id: id
        modified_at: 6
      properties:
        id:
          type: string
        profile_id:
          type: string
        name:
          type: string
        kind:
          $ref: '#/components/schemas/RoutingAlgorithmKind'
        description:
          type: string
        created_at:
          format: int64
          type: integer
        modified_at:
          format: int64
          type: integer
        algorithm_for:
          allOf:
          - $ref: '#/components/schemas/TransactionType'
          nullable: true
      required:
      - created_at
      - description
      - id
      - kind
      - modified_at
      - name
      - profile_id
      type: object
    RoutingKind:
      oneOf:
      - $ref: '#/components/schemas/RoutingDictionary'
      - items:
          $ref: '#/components/schemas/RoutingDictionaryRecord'
        type: array
    RoutingRetrieveResponse:
      description: Response of the retrieved routing configs for a merchant account
      example:
        algorithm: ""
      properties:
        algorithm:
          allOf:
          - $ref: '#/components/schemas/MerchantRoutingAlgorithm'
          nullable: true
      type: object
    RuleConnectorSelection:
      description: |-
        Represents a rule

        ```text
        rule_name: [stripe, adyen, checkout]
        {
        payment.method = card {
        payment.method.cardtype = (credit, debit) {
        payment.method.network = (amex, rupay, diners)
        }

        payment.method.cardtype = credit
        }
        }
        ```
      properties:
        name:
          type: string
        connectorSelection:
          $ref: '#/components/schemas/ConnectorSelection'
        statements:
          items:
            $ref: '#/components/schemas/IfStatement'
          type: array
      required:
      - connectorSelection
      - name
      - statements
      type: object
    SamsungPayAmountDetails:
      properties:
        option:
          $ref: '#/components/schemas/SamsungPayAmountFormat'
        currency_code:
          $ref: '#/components/schemas/Currency'
        total:
          description: The total amount of the transaction
          example: "38.02"
          type: string
      required:
      - currency_code
      - option
      - total
      type: object
    SamsungPayAmountFormat:
      enum:
      - FORMAT_TOTAL_PRICE_ONLY
      - FORMAT_TOTAL_ESTIMATED_AMOUNT
      type: string
    SamsungPayAppWalletData:
      properties:
        "3_d_s":
          $ref: '#/components/schemas/SamsungPayTokenData'
        payment_card_brand:
          $ref: '#/components/schemas/SamsungPayCardBrand'
        payment_currency_type:
          description: Currency type of the payment
          type: string
        payment_last4_dpan:
          description: Last 4 digits of the device specific card number
          nullable: true
          type: string
        payment_last4_fpan:
          description: Last 4 digits of the card number
          type: string
        merchant_ref:
          description: Merchant reference id that was passed in the session call request
          nullable: true
          type: string
        method:
          description: Specifies authentication method used
          nullable: true
          type: string
        recurring_payment:
          description: Value if credential is enabled for recurring payment
          nullable: true
          type: boolean
      required:
      - 3_d_s
      - payment_card_brand
      - payment_currency_type
      - payment_last4_fpan
      type: object
    SamsungPayCardBrand:
      enum:
      - visa
      - mastercard
      - amex
      - discover
      - unknown
      type: string
    SamsungPayMerchantPaymentInformation:
      properties:
        name:
          description: "Merchant name, this will be displayed on the Samsung Pay screen"
          type: string
        url:
          description: "Merchant domain that process payments, required for web payments"
          nullable: true
          type: string
        country_code:
          $ref: '#/components/schemas/CountryAlpha2'
      required:
      - country_code
      - name
      type: object
    SamsungPayProtocolType:
      enum:
      - PROTOCOL3DS
      type: string
    SamsungPaySessionTokenResponse:
      properties:
        version:
          description: Samsung Pay API version
          type: string
        service_id:
          description: Samsung Pay service ID to which session call needs to be made
          type: string
        order_number:
          description: Order number of the transaction
          type: string
        merchant:
          $ref: '#/components/schemas/SamsungPayMerchantPaymentInformation'
        amount:
          $ref: '#/components/schemas/SamsungPayAmountDetails'
        protocol:
          $ref: '#/components/schemas/SamsungPayProtocolType'
        allowed_brands:
          description: List of supported card brands
          items:
            type: string
          type: array
      required:
      - allowed_brands
      - amount
      - merchant
      - order_number
      - protocol
      - service_id
      - version
      type: object
    SamsungPayTokenData:
      properties:
        type:
          description: 3DS type used by Samsung Pay
          nullable: true
          type: string
        version:
          description: 3DS version used by Samsung Pay
          type: string
        data:
          description: Samsung Pay encrypted payment credential data
          type: string
      required:
      - data
      - version
      type: object
    SamsungPayWalletCredentials:
      oneOf:
      - $ref: '#/components/schemas/SamsungPayWebWalletData'
      - $ref: '#/components/schemas/SamsungPayAppWalletData'
    SamsungPayWalletData:
      properties:
        payment_credential:
          $ref: '#/components/schemas/SamsungPayWalletCredentials'
      required:
      - payment_credential
      type: object
    SamsungPayWebWalletData:
      properties:
        method:
          description: Specifies authentication method used
          nullable: true
          type: string
        recurring_payment:
          description: Value if credential is enabled for recurring payment
          nullable: true
          type: boolean
        card_brand:
          $ref: '#/components/schemas/SamsungPayCardBrand'
        card_last4digits:
          description: Last 4 digits of the card number
          type: string
        "3_d_s":
          $ref: '#/components/schemas/SamsungPayTokenData'
      required:
      - 3_d_s
      - card_brand
      - card_last4digits
      type: object
    SdkInformation:
      description: SDK Information if request is from SDK
      properties:
        sdk_app_id:
          description: Unique ID created on installations of the 3DS Requestor App
            on a Consumer Device
          type: string
        sdk_enc_data:
          description: JWE Object containing data encrypted by the SDK for the DS
            to decrypt
          type: string
        sdk_ephem_pub_key:
          additionalProperties:
            type: string
          description: Public key component of the ephemeral key pair generated by
            the 3DS SDK
          type: object
        sdk_trans_id:
          description: Unique transaction identifier assigned by the 3DS SDK
          type: string
        sdk_reference_number:
          description: Identifies the vendor and version for the 3DS SDK that is integrated
            in a 3DS Requestor App
          type: string
        sdk_max_timeout:
          description: Indicates maximum amount of time in minutes
          format: int32
          minimum: 0
          type: integer
      required:
      - sdk_app_id
      - sdk_enc_data
      - sdk_ephem_pub_key
      - sdk_max_timeout
      - sdk_reference_number
      - sdk_trans_id
      type: object
    SdkNextAction:
      properties:
        next_action:
          $ref: '#/components/schemas/NextActionCall'
      required:
      - next_action
      type: object
    SdkNextActionData:
      properties:
        next_action:
          $ref: '#/components/schemas/NextActionCall'
        order_id:
          nullable: true
          type: string
      required:
      - next_action
      type: object
    SecretInfoToInitiateSdk:
      properties:
        display:
          type: string
        payment:
          type: string
      required:
      - display
      - payment
      type: object
    SepaAndBacsBillingDetails:
      properties:
        email:
          description: The Email ID for SEPA and BACS billing
          example: example@me.com
          nullable: true
          type: string
        name:
          description: The billing name for SEPA and BACS billing
          example: Jane Doe
          nullable: true
          type: string
      type: object
    SepaBankDebitAdditionalData:
      properties:
        iban:
          description: Partially masked international bank account number (iban) for
            SEPA
          example: DE8937******013000
          type: string
        bank_account_holder_name:
          description: Bank account's owner name
          example: John Doe
          nullable: true
          type: string
      required:
      - iban
      type: object
    SepaBankTransfer:
      properties:
        bank_name:
          description: Bank name
          example: Deutsche Bank
          nullable: true
          type: string
        bank_country_code:
          allOf:
          - $ref: '#/components/schemas/CountryAlpha2'
          nullable: true
        bank_city:
          description: Bank city
          example: California
          nullable: true
          type: string
        iban:
          description: International Bank Account Number (iban) - used in many countries
            for identifying a bank along with it's customer.
          example: DE89370400440532013000
          type: string
        bic:
          description: "[8 / 11 digits] Bank Identifier Code (bic) / Swift Code -\
            \ used in many countries for identifying a bank and it's branches"
          example: HSBCGB2LXXX
          type: string
      required:
      - bic
      - iban
      type: object
    SepaBankTransferAdditionalData:
      description: Masked payout method details for sepa bank transfer payout method
      properties:
        iban:
          description: Partially masked international bank account number (iban) for
            SEPA
          example: DE8937******013000
          type: string
        bank_name:
          description: Bank name
          example: Deutsche Bank
          nullable: true
          type: string
        bank_country_code:
          allOf:
          - $ref: '#/components/schemas/CountryAlpha2'
          nullable: true
        bank_city:
          description: Bank city
          example: California
          nullable: true
          type: string
        bic:
          description: "[8 / 11 digits] Bank Identifier Code (bic) / Swift Code -\
            \ used in many countries for identifying a bank and it's branches"
          example: HSBCGB2LXXX
          nullable: true
          type: string
      required:
      - iban
      type: object
    SepaBankTransferInstructions:
      properties:
        account_holder_name:
          example: Jane Doe
          type: string
        bic:
          example: "9123456789"
          type: string
        country:
          type: string
        iban:
          example: "123456789"
          type: string
        reference:
          example: U2PVVSEV4V9Y
          type: string
      required:
      - account_holder_name
      - bic
      - country
      - iban
      - reference
      type: object
    SessionToken:
      discriminator:
        propertyName: wallet_name
      oneOf:
      - $ref: '#/components/schemas/SessionToken_oneOf'
      - $ref: '#/components/schemas/SessionToken_oneOf_1'
      - $ref: '#/components/schemas/SessionToken_oneOf_2'
      - $ref: '#/components/schemas/SessionToken_oneOf_3'
      - $ref: '#/components/schemas/SessionToken_oneOf_4'
      - $ref: '#/components/schemas/SessionToken_oneOf_5'
      - $ref: '#/components/schemas/SessionToken_oneOf_6'
      - $ref: '#/components/schemas/SessionToken_oneOf_7'
    SessionTokenInfo:
      allOf:
      - allOf:
        - $ref: '#/components/schemas/PaymentProcessingDetailsAt'
        nullable: true
      - properties:
          certificate:
            type: string
          certificate_keys:
            type: string
          merchant_identifier:
            type: string
          display_name:
            type: string
          initiative:
            $ref: '#/components/schemas/ApplepayInitiative'
          initiative_context:
            nullable: true
            type: string
          merchant_business_country:
            allOf:
            - $ref: '#/components/schemas/CountryAlpha2'
            nullable: true
        required:
        - certificate
        - certificate_keys
        - display_name
        - initiative
        - merchant_identifier
        type: object
    StraightThroughAlgorithm:
      discriminator:
        propertyName: type
      oneOf:
      - $ref: '#/components/schemas/Single'
      - $ref: '#/components/schemas/Priority'
      - $ref: '#/components/schemas/VolumeSplit'
    StripeChargeType:
      enum:
      - direct
      - destination
      type: string
    SurchargeCalculationOverride:
      enum:
      - Skip
      - Calculate
      type: string
    SurchargeDetailsResponse:
      properties:
        surcharge:
          $ref: '#/components/schemas/SurchargeResponse'
        tax_on_surcharge:
          allOf:
          - $ref: '#/components/schemas/SurchargePercentage'
          nullable: true
        display_surcharge_amount:
          description: surcharge amount for this payment
          format: double
          type: number
        display_tax_on_surcharge_amount:
          description: tax on surcharge amount for this payment
          format: double
          type: number
        display_total_surcharge_amount:
          description: sum of display_surcharge_amount and display_tax_on_surcharge_amount
          format: double
          type: number
      required:
      - display_surcharge_amount
      - display_tax_on_surcharge_amount
      - display_total_surcharge_amount
      - surcharge
      type: object
    SurchargePercentage:
      properties:
        percentage:
          format: float
          type: number
      required:
      - percentage
      type: object
    SurchargeResponse:
      discriminator:
        propertyName: type
      oneOf:
      - $ref: '#/components/schemas/SurchargeResponse_oneOf'
      - $ref: '#/components/schemas/SurchargeResponse_oneOf_1'
    SwishQrData:
      type: object
    TaxCalculationOverride:
      enum:
      - Skip
      - Calculate
      type: string
    ThirdPartySdkSessionResponse:
      properties:
        secrets:
          $ref: '#/components/schemas/SecretInfoToInitiateSdk'
      required:
      - secrets
      type: object
    ThreeDsCompletionIndicator:
      enum:
      - "Y"
      - "N"
      - U
      type: string
    ThreeDsData:
      properties:
        three_ds_authentication_url:
          description: ThreeDS authentication url - to initiate authentication
          type: string
        three_ds_authorize_url:
          description: ThreeDS authorize url - to complete the payment authorization
            after authentication
          type: string
        three_ds_method_details:
          $ref: '#/components/schemas/ThreeDsMethodData'
        poll_config:
          $ref: '#/components/schemas/PollConfigResponse'
        message_version:
          description: Message Version
          nullable: true
          type: string
        directory_server_id:
          description: Directory Server ID
          nullable: true
          type: string
      required:
      - poll_config
      - three_ds_authentication_url
      - three_ds_authorize_url
      - three_ds_method_details
      type: object
    ThreeDsMethodData:
      discriminator:
        propertyName: three_ds_method_key
      oneOf:
      - $ref: '#/components/schemas/ThreeDsMethodData_oneOf'
    TimeRange:
      description: "A type representing a range of time for filtering, including a\
        \ mandatory start time and an optional end time."
      properties:
        start_time:
          description: The start time to filter payments list or to get list of filters.
            To get list of filters start time is needed to be passed
          format: date-time
          type: string
        end_time:
          description: The end time to filter payments list or to get list of filters.
            If not passed the default time is now
          format: date-time
          nullable: true
          type: string
      required:
      - start_time
      type: object
    ToggleBlocklistResponse:
      properties:
        blocklist_guard_status:
          type: string
      required:
      - blocklist_guard_status
      type: object
    ToggleKVRequest:
      properties:
        kv_enabled:
          description: Status of KV for the specific merchant
          example: true
          type: boolean
      required:
      - kv_enabled
      type: object
    ToggleKVResponse:
      properties:
        merchant_id:
          description: The identifier for the Merchant Account
          example: y3oqhf46pyzuxjbcn2giaqnb44
          maxLength: 255
          type: string
        kv_enabled:
          description: Status of KV for the specific merchant
          example: true
          type: boolean
      required:
      - kv_enabled
      - merchant_id
      type: object
    TouchNGoRedirection:
      type: object
    TransactionDetailsUiConfiguration:
      properties:
        position:
          description: Position of the key-value pair in the UI
          example: 5
          format: int32
          nullable: true
          type: integer
        is_key_bold:
          default: false
          description: Whether the key should be bold
          example: true
          nullable: true
          type: boolean
        is_value_bold:
          default: false
          description: Whether the value should be bold
          example: true
          nullable: true
          type: boolean
      type: object
    TransactionStatus:
      description: Indicates the transaction status
      enum:
      - "Y"
      - "N"
      - U
      - A
      - R
      - C
      - D
      - I
      type: string
    TransactionType:
      enum:
      - payment
      - payout
      type: string
    UIWidgetFormLayout:
      enum:
      - tabs
      - journey
      type: string
    UpdateApiKeyRequest:
      additionalProperties: false
      description: The request body for updating an API Key.
      example:
        name: Sandbox integration key
        description: Key used by our developers to integrate with the sandbox environment
        expiration: ""
      properties:
        name:
          description: A unique name for the API Key to help you identify it.
          example: Sandbox integration key
          maxLength: 64
          nullable: true
          type: string
        description:
          description: A description to provide more context about the API Key.
          example: Key used by our developers to integrate with the sandbox environment
          maxLength: 256
          nullable: true
          type: string
        expiration:
          allOf:
          - $ref: '#/components/schemas/ApiKeyExpiration'
          nullable: true
      type: object
    UpiAdditionalData:
      oneOf:
      - $ref: '#/components/schemas/UpiAdditionalData_oneOf'
      - $ref: '#/components/schemas/UpiAdditionalData_oneOf_1'
    UpiCollectAdditionalData:
      properties:
        vpa_id:
          description: Masked VPA ID
          example: ab********@okhdfcbank
          nullable: true
          type: string
      type: object
    UpiCollectData:
      properties:
        vpa_id:
          example: successtest@iata
          nullable: true
          type: string
      type: object
    UpiData:
      oneOf:
      - $ref: '#/components/schemas/UpiData_oneOf'
      - $ref: '#/components/schemas/UpiAdditionalData_oneOf_1'
    UpiIntentData:
      type: object
    UpiResponse:
      allOf:
      - allOf:
        - $ref: '#/components/schemas/UpiAdditionalData'
        nullable: true
      - type: object
    ValueType:
      description: Represents a value in the DSL
      discriminator:
        propertyName: type
      oneOf:
      - $ref: '#/components/schemas/ValueType_oneOf'
      - $ref: '#/components/schemas/ValueType_oneOf_1'
      - $ref: '#/components/schemas/ValueType_oneOf_2'
      - $ref: '#/components/schemas/ValueType_oneOf_3'
      - $ref: '#/components/schemas/ValueType_oneOf_4'
      - $ref: '#/components/schemas/ValueType_oneOf_5'
      - $ref: '#/components/schemas/ValueType_oneOf_6'
    Venmo:
      properties:
        telephone_number:
          description: mobile number linked to venmo account
          example: "16608213349"
          type: string
      required:
      - telephone_number
      type: object
    VenmoAdditionalData:
      description: Masked payout method details for venmo wallet payout method
      properties:
        telephone_number:
          description: mobile number linked to venmo account
          example: '******* 3349'
          nullable: true
          type: string
      type: object
    VoucherData:
      oneOf:
      - $ref: '#/components/schemas/VoucherData_oneOf'
      - enum:
        - efecty
        type: string
      - enum:
        - pago_efectivo
        type: string
      - enum:
        - red_compra
        type: string
      - enum:
        - red_pagos
        type: string
      - $ref: '#/components/schemas/VoucherData_oneOf_1'
      - $ref: '#/components/schemas/VoucherData_oneOf_2'
      - enum:
        - oxxo
        type: string
      - $ref: '#/components/schemas/VoucherData_oneOf_3'
      - $ref: '#/components/schemas/VoucherData_oneOf_4'
      - $ref: '#/components/schemas/VoucherData_oneOf_5'
      - $ref: '#/components/schemas/VoucherData_oneOf_6'
      - $ref: '#/components/schemas/VoucherData_oneOf_7'
      - $ref: '#/components/schemas/VoucherData_oneOf_8'
    VoucherResponse:
      allOf:
      - allOf:
        - $ref: '#/components/schemas/VoucherData'
        nullable: true
      - type: object
    Wallet:
      oneOf:
      - $ref: '#/components/schemas/Wallet_oneOf'
      - $ref: '#/components/schemas/Wallet_oneOf_1'
    WalletAdditionalData:
      description: Masked payout method details for wallet payout method
      oneOf:
      - $ref: '#/components/schemas/PaypalAdditionalData'
      - $ref: '#/components/schemas/VenmoAdditionalData'
    WalletAdditionalDataForCard:
      properties:
        last4:
          description: Last 4 digits of the card number
          type: string
        card_network:
          description: The information of the payment method
          type: string
        type:
          description: The type of payment method
          type: string
      required:
      - card_network
      - last4
      - type
      type: object
    WalletData:
      oneOf:
      - $ref: '#/components/schemas/WalletData_oneOf'
      - $ref: '#/components/schemas/WalletData_oneOf_1'
      - $ref: '#/components/schemas/WalletData_oneOf_2'
      - $ref: '#/components/schemas/WalletData_oneOf_3'
      - $ref: '#/components/schemas/WalletData_oneOf_4'
      - $ref: '#/components/schemas/WalletData_oneOf_5'
      - $ref: '#/components/schemas/WalletData_oneOf_6'
      - $ref: '#/components/schemas/WalletData_oneOf_7'
      - $ref: '#/components/schemas/WalletData_oneOf_8'
      - $ref: '#/components/schemas/WalletData_oneOf_9'
      - $ref: '#/components/schemas/WalletData_oneOf_10'
      - $ref: '#/components/schemas/WalletData_oneOf_11'
      - $ref: '#/components/schemas/WalletData_oneOf_12'
      - $ref: '#/components/schemas/WalletData_oneOf_13'
      - $ref: '#/components/schemas/WalletData_oneOf_14'
      - $ref: '#/components/schemas/WalletData_oneOf_15'
      - $ref: '#/components/schemas/WalletData_oneOf_16'
      - $ref: '#/components/schemas/WalletData_oneOf_17'
      - $ref: '#/components/schemas/WalletData_oneOf_18'
      - $ref: '#/components/schemas/WalletData_oneOf_19'
      - $ref: '#/components/schemas/WalletData_oneOf_20'
      - $ref: '#/components/schemas/WalletData_oneOf_21'
      - $ref: '#/components/schemas/WalletData_oneOf_22'
      - $ref: '#/components/schemas/WalletData_oneOf_23'
      - $ref: '#/components/schemas/WalletData_oneOf_24'
      - $ref: '#/components/schemas/WalletData_oneOf_25'
      - $ref: '#/components/schemas/WalletData_oneOf_26'
      - $ref: '#/components/schemas/WalletData_oneOf_27'
    WalletResponse:
      allOf:
      - allOf:
        - $ref: '#/components/schemas/WalletResponseData'
        nullable: true
      - type: object
    WalletResponseData:
      description: "Hyperswitch supports SDK integration with Apple Pay and Google\
        \ Pay wallets. For other wallets, we integrate with their respective connectors,\
        \ redirecting the customer to the connector for wallet payments. As a result,\
        \ we don’t receive any payment method data in the confirm call for payments\
        \ made through other wallets."
      oneOf:
      - $ref: '#/components/schemas/WalletResponseData_oneOf'
      - $ref: '#/components/schemas/WalletResponseData_oneOf_1'
    WeChatPay:
      type: object
    WeChatPayQr:
      type: object
    WeChatPayRedirection:
      type: object
    WebhookDeliveryAttempt:
      enum:
      - initial_attempt
      - automatic_retry
      - manual_retry
      type: string
    WebhookDetails:
      additionalProperties: false
      properties:
        webhook_version:
          description: The version for Webhook
          example: 1.0.2
          maxLength: 255
          nullable: true
          type: string
        webhook_username:
          description: The user name for Webhook login
          example: ekart_retail
          maxLength: 255
          nullable: true
          type: string
        webhook_password:
          description: The password for Webhook login
          example: ekart@123
          maxLength: 255
          nullable: true
          type: string
        webhook_url:
          description: The url for the webhook endpoint
          example: www.ekart.com/webhooks
          nullable: true
          type: string
        payment_created_enabled:
          description: "If this property is true, a webhook message is posted whenever\
            \ a new payment is created"
          example: true
          nullable: true
          type: boolean
        payment_succeeded_enabled:
          description: "If this property is true, a webhook message is posted whenever\
            \ a payment is successful"
          example: true
          nullable: true
          type: boolean
        payment_failed_enabled:
          description: "If this property is true, a webhook message is posted whenever\
            \ a payment fails"
          example: true
          nullable: true
          type: boolean
      type: object
    AcceptedCountries_oneOf:
      properties:
        type:
          enum:
          - enable_only
          type: string
        list:
          items:
            $ref: '#/components/schemas/CountryAlpha2'
          type: array
      required:
      - list
      - type
      type: object
    AcceptedCountries_oneOf_1:
      properties:
        type:
          enum:
          - disable_only
          type: string
        list:
          items:
            $ref: '#/components/schemas/CountryAlpha2'
          type: array
      required:
      - list
      - type
      type: object
    AcceptedCountries_oneOf_2:
      properties:
        type:
          enum:
          - all_accepted
          type: string
      required:
      - type
      type: object
    AcceptedCurrencies_oneOf:
      properties:
        type:
          enum:
          - enable_only
          type: string
        list:
          items:
            $ref: '#/components/schemas/Currency'
          type: array
      required:
      - list
      - type
      type: object
    AcceptedCurrencies_oneOf_1:
      properties:
        type:
          enum:
          - disable_only
          type: string
        list:
          items:
            $ref: '#/components/schemas/Currency'
          type: array
      required:
      - list
      - type
      type: object
    AdditionalMerchantData_oneOf:
      properties:
        open_banking_recipient_data:
          $ref: '#/components/schemas/MerchantRecipientData'
      required:
      - open_banking_recipient_data
      type: object
    AdditionalPayoutMethodData_oneOf:
      properties:
        Card:
          $ref: '#/components/schemas/CardAdditionalData'
      required:
      - Card
      type: object
    AdditionalPayoutMethodData_oneOf_1:
      properties:
        Bank:
          $ref: '#/components/schemas/BankAdditionalData'
      required:
      - Bank
      type: object
    AdditionalPayoutMethodData_oneOf_2:
      properties:
        Wallet:
          $ref: '#/components/schemas/WalletAdditionalData'
      required:
      - Wallet
      type: object
    BankDebitAdditionalData_oneOf:
      properties:
        ach:
          $ref: '#/components/schemas/AchBankDebitAdditionalData'
      required:
      - ach
      type: object
    BankDebitAdditionalData_oneOf_1:
      properties:
        bacs:
          $ref: '#/components/schemas/BacsBankDebitAdditionalData'
      required:
      - bacs
      type: object
    BankDebitAdditionalData_oneOf_2:
      properties:
        becs:
          $ref: '#/components/schemas/BecsBankDebitAdditionalData'
      required:
      - becs
      type: object
    BankDebitAdditionalData_oneOf_3:
      properties:
        sepa:
          $ref: '#/components/schemas/SepaBankDebitAdditionalData'
      required:
      - sepa
      type: object
    BankDebitData_oneOf_ach_bank_debit:
      description: Payment Method data for Ach bank debit
      properties:
        billing_details:
          allOf:
          - $ref: '#/components/schemas/BankDebitBilling'
          nullable: true
        account_number:
          description: Account number for ach bank debit payment
          example: "000123456789"
          type: string
        routing_number:
          description: Routing number for ach bank debit payment
          example: "110000000"
          type: string
        card_holder_name:
          example: John Test
          type: string
        bank_account_holder_name:
          example: John Doe
          type: string
        bank_name:
          example: ACH
          type: string
        bank_type:
          example: Checking
          type: string
        bank_holder_type:
          example: Personal
          type: string
      required:
      - account_number
      - bank_account_holder_name
      - bank_holder_type
      - bank_name
      - bank_type
      - card_holder_name
      - routing_number
      type: object
    BankDebitData_oneOf:
      properties:
        ach_bank_debit:
          $ref: '#/components/schemas/BankDebitData_oneOf_ach_bank_debit'
      required:
      - ach_bank_debit
      type: object
    BankDebitData_oneOf_1_sepa_bank_debit:
      properties:
        billing_details:
          allOf:
          - $ref: '#/components/schemas/BankDebitBilling'
          nullable: true
        iban:
          description: International bank account number (iban) for SEPA
          example: DE89370400440532013000
          type: string
        bank_account_holder_name:
          description: Owner name for bank debit
          example: A. Schneider
          type: string
      required:
      - bank_account_holder_name
      - iban
      type: object
    BankDebitData_oneOf_1:
      properties:
        sepa_bank_debit:
          $ref: '#/components/schemas/BankDebitData_oneOf_1_sepa_bank_debit'
      required:
      - sepa_bank_debit
      type: object
    BankDebitData_oneOf_2_becs_bank_debit:
      properties:
        billing_details:
          allOf:
          - $ref: '#/components/schemas/BankDebitBilling'
          nullable: true
        account_number:
          description: Account number for Becs payment method
          example: "000123456"
          type: string
        bsb_number:
          description: Bank-State-Branch (bsb) number
          example: "000000"
          type: string
        bank_account_holder_name:
          description: Owner name for bank debit
          example: A. Schneider
          nullable: true
          type: string
      required:
      - account_number
      - bsb_number
      type: object
    BankDebitData_oneOf_2:
      properties:
        becs_bank_debit:
          $ref: '#/components/schemas/BankDebitData_oneOf_2_becs_bank_debit'
      required:
      - becs_bank_debit
      type: object
    BankDebitData_oneOf_3_bacs_bank_debit:
      properties:
        billing_details:
          allOf:
          - $ref: '#/components/schemas/BankDebitBilling'
          nullable: true
        account_number:
          description: Account number for Bacs payment method
          example: "00012345"
          type: string
        sort_code:
          description: Sort code for Bacs payment method
          example: "108800"
          type: string
        bank_account_holder_name:
          description: holder name for bank debit
          example: A. Schneider
          type: string
      required:
      - account_number
      - bank_account_holder_name
      - sort_code
      type: object
    BankDebitData_oneOf_3:
      properties:
        bacs_bank_debit:
          $ref: '#/components/schemas/BankDebitData_oneOf_3_bacs_bank_debit'
      required:
      - bacs_bank_debit
      type: object
    BankRedirectData_oneOf_bancontact_card:
      properties:
        card_number:
          description: The card number
          example: "4242424242424242"
          type: string
        card_exp_month:
          description: The card's expiry month
          example: "24"
          type: string
        card_exp_year:
          description: The card's expiry year
          example: "24"
          type: string
        card_holder_name:
          description: The card holder's name
          example: John Test
          type: string
        billing_details:
          allOf:
          - $ref: '#/components/schemas/BankRedirectBilling'
          nullable: true
      required:
      - card_exp_month
      - card_exp_year
      - card_holder_name
      - card_number
      type: object
    BankRedirectData_oneOf:
      properties:
        bancontact_card:
          $ref: '#/components/schemas/BankRedirectData_oneOf_bancontact_card'
      required:
      - bancontact_card
      type: object
    BankRedirectData_oneOf_1:
      properties:
        bizum:
          type: object
      required:
      - bizum
      type: object
    BankRedirectData_oneOf_2_blik:
      properties:
        blik_code:
          nullable: true
          type: string
      type: object
    BankRedirectData_oneOf_2:
      properties:
        blik:
          $ref: '#/components/schemas/BankRedirectData_oneOf_2_blik'
      required:
      - blik
      type: object
    BankRedirectData_oneOf_3_eps:
      properties:
        billing_details:
          allOf:
          - $ref: '#/components/schemas/BankRedirectBilling'
          nullable: true
        bank_name:
          $ref: '#/components/schemas/BankNames'
        country:
          $ref: '#/components/schemas/CountryAlpha2'
      required:
      - bank_name
      - country
      type: object
    BankRedirectData_oneOf_3:
      properties:
        eps:
          $ref: '#/components/schemas/BankRedirectData_oneOf_3_eps'
      required:
      - eps
      type: object
    BankRedirectData_oneOf_4_giropay:
      properties:
        billing_details:
          allOf:
          - $ref: '#/components/schemas/BankRedirectBilling'
          nullable: true
        bank_account_bic:
          description: |-
            Bank account details for Giropay
            Bank account bic code
          nullable: true
          type: string
        bank_account_iban:
          description: Bank account iban
          nullable: true
          type: string
        country:
          $ref: '#/components/schemas/CountryAlpha2'
      required:
      - country
      type: object
    BankRedirectData_oneOf_4:
      properties:
        giropay:
          $ref: '#/components/schemas/BankRedirectData_oneOf_4_giropay'
      required:
      - giropay
      type: object
    BankRedirectData_oneOf_5:
      properties:
        ideal:
          $ref: '#/components/schemas/BankRedirectData_oneOf_3_eps'
      required:
      - ideal
      type: object
    BankRedirectData_oneOf_6_interac:
      properties:
        country:
          allOf:
          - $ref: '#/components/schemas/CountryAlpha2'
          nullable: true
        email:
          example: john.doe@example.com
          nullable: true
          type: string
      type: object
    BankRedirectData_oneOf_6:
      properties:
        interac:
          $ref: '#/components/schemas/BankRedirectData_oneOf_6_interac'
      required:
      - interac
      type: object
    BankRedirectData_oneOf_7_online_banking_czech_republic:
      properties:
        issuer:
          $ref: '#/components/schemas/BankNames'
      required:
      - issuer
      type: object
    BankRedirectData_oneOf_7:
      properties:
        online_banking_czech_republic:
          $ref: '#/components/schemas/BankRedirectData_oneOf_7_online_banking_czech_republic'
      required:
      - online_banking_czech_republic
      type: object
    BankRedirectData_oneOf_8_online_banking_finland:
      properties:
        email:
          nullable: true
          type: string
      type: object
    BankRedirectData_oneOf_8:
      properties:
        online_banking_finland:
          $ref: '#/components/schemas/BankRedirectData_oneOf_8_online_banking_finland'
      required:
      - online_banking_finland
      type: object
    BankRedirectData_oneOf_9:
      properties:
        online_banking_poland:
          $ref: '#/components/schemas/BankRedirectData_oneOf_7_online_banking_czech_republic'
      required:
      - online_banking_poland
      type: object
    BankRedirectData_oneOf_10:
      properties:
        online_banking_slovakia:
          $ref: '#/components/schemas/BankRedirectData_oneOf_7_online_banking_czech_republic'
      required:
      - online_banking_slovakia
      type: object
    BankRedirectData_oneOf_11_open_banking_uk:
      properties:
        issuer:
          $ref: '#/components/schemas/BankNames'
        country:
          $ref: '#/components/schemas/CountryAlpha2'
      required:
      - country
      - issuer
      type: object
    BankRedirectData_oneOf_11:
      properties:
        open_banking_uk:
          $ref: '#/components/schemas/BankRedirectData_oneOf_11_open_banking_uk'
      required:
      - open_banking_uk
      type: object
    BankRedirectData_oneOf_12_przelewy24:
      properties:
        bank_name:
          allOf:
          - $ref: '#/components/schemas/BankNames'
          nullable: true
        billing_details:
          allOf:
          - $ref: '#/components/schemas/BankRedirectBilling'
          nullable: true
      type: object
    BankRedirectData_oneOf_12:
      properties:
        przelewy24:
          $ref: '#/components/schemas/BankRedirectData_oneOf_12_przelewy24'
      required:
      - przelewy24
      type: object
    BankRedirectData_oneOf_13_sofort:
      properties:
        billing_details:
          allOf:
          - $ref: '#/components/schemas/BankRedirectBilling'
          nullable: true
        country:
          $ref: '#/components/schemas/CountryAlpha2'
        preferred_language:
          description: The preferred language
          example: en
          nullable: true
          type: string
      required:
      - country
      type: object
    BankRedirectData_oneOf_13:
      properties:
        sofort:
          $ref: '#/components/schemas/BankRedirectData_oneOf_13_sofort'
      required:
      - sofort
      type: object
    BankRedirectData_oneOf_14_trustly:
      properties:
        country:
          $ref: '#/components/schemas/CountryAlpha2'
      required:
      - country
      type: object
    BankRedirectData_oneOf_14:
      properties:
        trustly:
          $ref: '#/components/schemas/BankRedirectData_oneOf_14_trustly'
      required:
      - trustly
      type: object
    BankRedirectData_oneOf_15:
      properties:
        online_banking_fpx:
          $ref: '#/components/schemas/BankRedirectData_oneOf_7_online_banking_czech_republic'
      required:
      - online_banking_fpx
      type: object
    BankRedirectData_oneOf_16:
      properties:
        online_banking_thailand:
          $ref: '#/components/schemas/BankRedirectData_oneOf_7_online_banking_czech_republic'
      required:
      - online_banking_thailand
      type: object
    BankRedirectData_oneOf_17:
      properties:
        local_bank_redirect:
          type: object
      required:
      - local_bank_redirect
      type: object
    BankRedirectDetails_oneOf:
      properties:
        BancontactCard:
          $ref: '#/components/schemas/BancontactBankRedirectAdditionalData'
      required:
      - BancontactCard
      type: object
    BankRedirectDetails_oneOf_1:
      properties:
        Blik:
          $ref: '#/components/schemas/BlikBankRedirectAdditionalData'
      required:
      - Blik
      type: object
    BankRedirectDetails_oneOf_2:
      properties:
        Giropay:
          $ref: '#/components/schemas/GiropayBankRedirectAdditionalData'
      required:
      - Giropay
      type: object
    BankTransferAdditionalData_oneOf:
      properties:
        ach:
          type: object
      required:
      - ach
      type: object
    BankTransferAdditionalData_oneOf_1:
      properties:
        sepa:
          type: object
      required:
      - sepa
      type: object
    BankTransferAdditionalData_oneOf_2:
      properties:
        bacs:
          type: object
      required:
      - bacs
      type: object
    BankTransferAdditionalData_oneOf_3:
      properties:
        multibanco:
          type: object
      required:
      - multibanco
      type: object
    BankTransferAdditionalData_oneOf_4:
      properties:
        permata:
          type: object
      required:
      - permata
      type: object
    BankTransferAdditionalData_oneOf_5:
      properties:
        bca:
          type: object
      required:
      - bca
      type: object
    BankTransferAdditionalData_oneOf_6:
      properties:
        bni_va:
          type: object
      required:
      - bni_va
      type: object
    BankTransferAdditionalData_oneOf_7:
      properties:
        bri_va:
          type: object
      required:
      - bri_va
      type: object
    BankTransferAdditionalData_oneOf_8:
      properties:
        cimb_va:
          type: object
      required:
      - cimb_va
      type: object
    BankTransferAdditionalData_oneOf_9:
      properties:
        danamon_va:
          type: object
      required:
      - danamon_va
      type: object
    BankTransferAdditionalData_oneOf_10:
      properties:
        mandiri_va:
          type: object
      required:
      - mandiri_va
      type: object
    BankTransferAdditionalData_oneOf_11:
      properties:
        pix:
          $ref: '#/components/schemas/PixBankTransferAdditionalData'
      required:
      - pix
      type: object
    BankTransferAdditionalData_oneOf_12:
      properties:
        pse:
          type: object
      required:
      - pse
      type: object
    BankTransferAdditionalData_oneOf_13:
      properties:
        local_bank_transfer:
          $ref: '#/components/schemas/LocalBankTransferAdditionalData'
      required:
      - local_bank_transfer
      type: object
    BankTransferData_oneOf_ach_bank_transfer:
      properties:
        billing_details:
          allOf:
          - $ref: '#/components/schemas/AchBillingDetails'
          nullable: true
      type: object
    BankTransferData_oneOf:
      properties:
        ach_bank_transfer:
          $ref: '#/components/schemas/BankTransferData_oneOf_ach_bank_transfer'
      required:
      - ach_bank_transfer
      type: object
    BankTransferData_oneOf_1_sepa_bank_transfer:
      properties:
        billing_details:
          allOf:
          - $ref: '#/components/schemas/SepaAndBacsBillingDetails'
          nullable: true
        country:
          $ref: '#/components/schemas/CountryAlpha2'
      required:
      - country
      type: object
    BankTransferData_oneOf_1:
      properties:
        sepa_bank_transfer:
          $ref: '#/components/schemas/BankTransferData_oneOf_1_sepa_bank_transfer'
      required:
      - sepa_bank_transfer
      type: object
    BankTransferData_oneOf_2_bacs_bank_transfer:
      properties:
        billing_details:
          allOf:
          - $ref: '#/components/schemas/SepaAndBacsBillingDetails'
          nullable: true
      type: object
    BankTransferData_oneOf_2:
      properties:
        bacs_bank_transfer:
          $ref: '#/components/schemas/BankTransferData_oneOf_2_bacs_bank_transfer'
      required:
      - bacs_bank_transfer
      type: object
    BankTransferData_oneOf_3_multibanco_bank_transfer:
      properties:
        billing_details:
          allOf:
          - $ref: '#/components/schemas/MultibancoBillingDetails'
          nullable: true
      type: object
    BankTransferData_oneOf_3:
      properties:
        multibanco_bank_transfer:
          $ref: '#/components/schemas/BankTransferData_oneOf_3_multibanco_bank_transfer'
      required:
      - multibanco_bank_transfer
      type: object
    BankTransferData_oneOf_4_permata_bank_transfer:
      properties:
        billing_details:
          allOf:
          - $ref: '#/components/schemas/DokuBillingDetails'
          nullable: true
      type: object
    BankTransferData_oneOf_4:
      properties:
        permata_bank_transfer:
          $ref: '#/components/schemas/BankTransferData_oneOf_4_permata_bank_transfer'
      required:
      - permata_bank_transfer
      type: object
    BankTransferData_oneOf_5:
      properties:
        bca_bank_transfer:
          $ref: '#/components/schemas/BankTransferData_oneOf_4_permata_bank_transfer'
      required:
      - bca_bank_transfer
      type: object
    BankTransferData_oneOf_6:
      properties:
        bni_va_bank_transfer:
          $ref: '#/components/schemas/BankTransferData_oneOf_4_permata_bank_transfer'
      required:
      - bni_va_bank_transfer
      type: object
    BankTransferData_oneOf_7:
      properties:
        bri_va_bank_transfer:
          $ref: '#/components/schemas/BankTransferData_oneOf_4_permata_bank_transfer'
      required:
      - bri_va_bank_transfer
      type: object
    BankTransferData_oneOf_8:
      properties:
        cimb_va_bank_transfer:
          $ref: '#/components/schemas/BankTransferData_oneOf_4_permata_bank_transfer'
      required:
      - cimb_va_bank_transfer
      type: object
    BankTransferData_oneOf_9:
      properties:
        danamon_va_bank_transfer:
          $ref: '#/components/schemas/BankTransferData_oneOf_4_permata_bank_transfer'
      required:
      - danamon_va_bank_transfer
      type: object
    BankTransferData_oneOf_10:
      properties:
        mandiri_va_bank_transfer:
          $ref: '#/components/schemas/BankTransferData_oneOf_4_permata_bank_transfer'
      required:
      - mandiri_va_bank_transfer
      type: object
    BankTransferData_oneOf_11_pix:
      properties:
        pix_key:
          description: Unique key for pix transfer
          example: a1f4102e-a446-4a57-bcce-6fa48899c1d1
          nullable: true
          type: string
        cpf:
          description: CPF is a Brazilian tax identification number
          example: "10599054689"
          nullable: true
          type: string
        cnpj:
          description: CNPJ is a Brazilian company tax identification number
          example: "74469027417312"
          nullable: true
          type: string
      type: object
    BankTransferData_oneOf_11:
      properties:
        pix:
          $ref: '#/components/schemas/BankTransferData_oneOf_11_pix'
      required:
      - pix
      type: object
    BankTransferData_oneOf_12_local_bank_transfer:
      properties:
        bank_code:
          nullable: true
          type: string
      type: object
    BankTransferData_oneOf_12:
      properties:
        local_bank_transfer:
          $ref: '#/components/schemas/BankTransferData_oneOf_12_local_bank_transfer'
      required:
      - local_bank_transfer
      type: object
    BankTransferInstructions_oneOf:
      properties:
        doku_bank_transfer_instructions:
          $ref: '#/components/schemas/DokuBankTransferInstructions'
      required:
      - doku_bank_transfer_instructions
      type: object
    BankTransferInstructions_oneOf_1:
      properties:
        ach_credit_transfer:
          $ref: '#/components/schemas/AchTransfer'
      required:
      - ach_credit_transfer
      type: object
    BankTransferInstructions_oneOf_2:
      properties:
        sepa_bank_instructions:
          $ref: '#/components/schemas/SepaBankTransferInstructions'
      required:
      - sepa_bank_instructions
      type: object
    BankTransferInstructions_oneOf_3:
      properties:
        bacs_bank_instructions:
          $ref: '#/components/schemas/BacsBankTransferInstructions'
      required:
      - bacs_bank_instructions
      type: object
    BankTransferInstructions_oneOf_4:
      properties:
        multibanco:
          $ref: '#/components/schemas/MultibancoTransferInstructions'
      required:
      - multibanco
      type: object
    BlocklistRequest_oneOf:
      properties:
        type:
          enum:
          - card_bin
          type: string
        data:
          type: string
      required:
      - data
      - type
      type: object
    BlocklistRequest_oneOf_1:
      properties:
        type:
          enum:
          - fingerprint
          type: string
        data:
          type: string
      required:
      - data
      - type
      type: object
    BlocklistRequest_oneOf_2:
      properties:
        type:
          enum:
          - extended_card_bin
          type: string
        data:
          type: string
      required:
      - data
      - type
      type: object
    CardRedirectData_oneOf:
      properties:
        knet:
          type: object
      required:
      - knet
      type: object
    CardRedirectData_oneOf_1:
      properties:
        benefit:
          type: object
      required:
      - benefit
      type: object
    CardRedirectData_oneOf_2:
      properties:
        momo_atm:
          type: object
      required:
      - momo_atm
      type: object
    CardRedirectData_oneOf_3:
      properties:
        card_redirect:
          type: object
      required:
      - card_redirect
      type: object
    ConnectorSelection_oneOf:
      properties:
        type:
          enum:
          - priority
          type: string
        data:
          items:
            $ref: '#/components/schemas/RoutableConnectorChoice'
          type: array
      required:
      - data
      - type
      type: object
    ConnectorSelection_oneOf_1:
      properties:
        type:
          enum:
          - volume_split
          type: string
        data:
          items:
            $ref: '#/components/schemas/ConnectorVolumeSplit'
          type: array
      required:
      - data
      - type
      type: object
    FieldType_oneOf_user_country:
      properties:
        options:
          items:
            type: string
          type: array
      required:
      - options
      type: object
    FieldType_oneOf:
      properties:
        user_country:
          $ref: '#/components/schemas/FieldType_oneOf_user_country'
      required:
      - user_country
      type: object
    FieldType_oneOf_1:
      properties:
        user_currency:
          $ref: '#/components/schemas/FieldType_oneOf_user_country'
      required:
      - user_currency
      type: object
    FieldType_oneOf_2:
      properties:
        user_address_country:
          $ref: '#/components/schemas/FieldType_oneOf_user_country'
      required:
      - user_address_country
      type: object
    FieldType_oneOf_3:
      properties:
        user_shipping_address_country:
          $ref: '#/components/schemas/FieldType_oneOf_user_country'
      required:
      - user_shipping_address_country
      type: object
    FieldType_oneOf_4:
      properties:
        drop_down:
          $ref: '#/components/schemas/FieldType_oneOf_user_country'
      required:
      - drop_down
      type: object
    FieldType_oneOf_5:
      properties:
        language_preference:
          $ref: '#/components/schemas/FieldType_oneOf_user_country'
      required:
      - language_preference
      type: object
    GiftCardAdditionalData_oneOf:
      properties:
        givex:
          $ref: '#/components/schemas/GivexGiftCardAdditionalData'
      required:
      - givex
      type: object
    GiftCardAdditionalData_oneOf_1:
      properties:
        pay_safe_card:
          type: object
      required:
      - pay_safe_card
      type: object
    GiftCardData_oneOf:
      properties:
        givex:
          $ref: '#/components/schemas/GiftCardDetails'
      required:
      - givex
      type: object
    MandateType_oneOf:
      properties:
        single_use:
          $ref: '#/components/schemas/MandateAmountData'
      required:
      - single_use
      type: object
    MandateType_oneOf_1:
      properties:
        multi_use:
          allOf:
          - $ref: '#/components/schemas/MandateAmountData'
          nullable: true
      required:
      - multi_use
      type: object
    MerchantAccountData_oneOf_iban:
      properties:
        iban:
          type: string
        name:
          type: string
        connector_recipient_id:
          nullable: true
          type: string
      required:
      - iban
      - name
      type: object
    MerchantAccountData_oneOf:
      properties:
        iban:
          $ref: '#/components/schemas/MerchantAccountData_oneOf_iban'
      required:
      - iban
      type: object
    MerchantAccountData_oneOf_1_bacs:
      properties:
        account_number:
          type: string
        sort_code:
          type: string
        name:
          type: string
        connector_recipient_id:
          nullable: true
          type: string
      required:
      - account_number
      - name
      - sort_code
      type: object
    MerchantAccountData_oneOf_1:
      properties:
        bacs:
          $ref: '#/components/schemas/MerchantAccountData_oneOf_1_bacs'
      required:
      - bacs
      type: object
    MerchantRecipientData_oneOf:
      properties:
        connector_recipient_id:
          nullable: true
          type: string
      required:
      - connector_recipient_id
      type: object
    MerchantRecipientData_oneOf_1:
      properties:
        wallet_id:
          nullable: true
          type: string
      required:
      - wallet_id
      type: object
    MerchantRecipientData_oneOf_2:
      properties:
        account_data:
          $ref: '#/components/schemas/MerchantAccountData'
      required:
      - account_data
      type: object
    NextActionData_oneOf:
      description: Contains the url for redirection flow
      properties:
        redirect_to_url:
          type: string
        type:
          enum:
          - redirect_to_url
          type: string
      required:
      - redirect_to_url
      - type
      type: object
    NextActionData_oneOf_1:
      description: "Informs the next steps for bank transfer and also contains the\
        \ charges details (ex: amount received, amount charged etc)"
      properties:
        bank_transfer_steps_and_charges_details:
          $ref: '#/components/schemas/BankTransferNextStepsData'
        type:
          enum:
          - display_bank_transfer_information
          type: string
      required:
      - bank_transfer_steps_and_charges_details
      - type
      type: object
    NextActionData_oneOf_2:
      description: Contains third party sdk session token response
      properties:
        session_token:
          allOf:
          - $ref: '#/components/schemas/SessionToken'
          nullable: true
        type:
          enum:
          - third_party_sdk_session_token
          type: string
      required:
      - type
      type: object
    NextActionData_oneOf_3:
      description: "Contains url for Qr code image, this qr code has to be shown in\
        \ sdk"
      properties:
        image_data_url:
          description: Hyperswitch generated image data source url
          type: string
        display_to_timestamp:
          format: int64
          nullable: true
          type: integer
        qr_code_url:
          description: The url for Qr code given by the connector
          type: string
        type:
          enum:
          - qr_code_information
          type: string
      required:
      - image_data_url
      - qr_code_url
      - type
      type: object
    NextActionData_oneOf_4:
      description: Contains url to fetch Qr code data
      properties:
        qr_code_fetch_url:
          type: string
        type:
          enum:
          - fetch_qr_code_information
          type: string
      required:
      - qr_code_fetch_url
      - type
      type: object
    NextActionData_oneOf_5:
      description: Contains the download url and the reference number for transaction
      properties:
        voucher_details:
          type: string
        type:
          enum:
          - display_voucher_information
          type: string
      required:
      - type
      - voucher_details
      type: object
    NextActionData_oneOf_6:
      description: "Contains duration for displaying a wait screen, wait screen with\
        \ timer is displayed by sdk"
      properties:
        display_from_timestamp:
          type: integer
        display_to_timestamp:
          nullable: true
          type: integer
        type:
          enum:
          - wait_screen_information
          type: string
      required:
      - display_from_timestamp
      - type
      type: object
    NextActionData_oneOf_7:
      description: "Contains the information regarding three_ds_method_data submission,\
        \ three_ds authentication, and authorization flows"
      properties:
        three_ds_data:
          $ref: '#/components/schemas/ThreeDsData'
        type:
          enum:
          - three_ds_invoke
          type: string
      required:
      - three_ds_data
      - type
      type: object
    NextActionData_oneOf_8:
      properties:
        next_action_data:
          $ref: '#/components/schemas/SdkNextActionData'
        type:
          enum:
          - invoke_sdk_client
          type: string
      required:
      - next_action_data
      - type
      type: object
    OpenBankingData_oneOf:
      properties:
        open_banking_pis:
          type: object
      required:
      - open_banking_pis
      type: object
    PaymentsResponse_1:
      properties:
        type:
          enum:
          - payment_details
          type: string
        object:
          $ref: '#/components/schemas/PaymentsResponse'
      required:
      - object
      - type
      title: PaymentsResponse
      type: object
    RefundResponse_1:
      properties:
        type:
          enum:
          - refund_details
          type: string
        object:
          $ref: '#/components/schemas/RefundResponse'
      required:
      - object
      - type
      title: RefundResponse
      type: object
    DisputeResponse_1:
      properties:
        type:
          enum:
          - dispute_details
          type: string
        object:
          $ref: '#/components/schemas/DisputeResponse'
      required:
      - object
      - type
      title: DisputeResponse
      type: object
    MandateResponse_1:
      properties:
        type:
          enum:
          - mandate_details
          type: string
        object:
          $ref: '#/components/schemas/MandateResponse'
      required:
      - object
      - type
      title: MandateResponse
      type: object
    PayoutCreateResponse_1:
      properties:
        type:
          enum:
          - payout_details
          type: string
        object:
          $ref: '#/components/schemas/PayoutCreateResponse'
      required:
      - object
      - type
      title: PayoutCreateResponse
      type: object
    OutgoingWebhookRequestContent_headers_inner_inner:
      allOf:
      - type: string
      - type: string
    PayLaterData_oneOf_klarna_redirect:
      description: For KlarnaRedirect as PayLater Option
      properties:
        billing_email:
          description: The billing email
          nullable: true
          type: string
        billing_country:
          allOf:
          - $ref: '#/components/schemas/CountryAlpha2'
          nullable: true
      type: object
    PayLaterData_oneOf:
      properties:
        klarna_redirect:
          $ref: '#/components/schemas/PayLaterData_oneOf_klarna_redirect'
      required:
      - klarna_redirect
      type: object
    PayLaterData_oneOf_1_klarna_sdk:
      description: For Klarna Sdk as PayLater Option
      properties:
        token:
          description: The token for the sdk workflow
          type: string
      required:
      - token
      type: object
    PayLaterData_oneOf_1:
      properties:
        klarna_sdk:
          $ref: '#/components/schemas/PayLaterData_oneOf_1_klarna_sdk'
      required:
      - klarna_sdk
      type: object
    PayLaterData_oneOf_2:
      properties:
        affirm_redirect:
          description: For Affirm redirect as PayLater Option
          type: object
      required:
      - affirm_redirect
      type: object
    PayLaterData_oneOf_3_afterpay_clearpay_redirect:
      description: For AfterpayClearpay redirect as PayLater Option
      properties:
        billing_email:
          description: The billing email
          nullable: true
          type: string
        billing_name:
          description: The billing name
          nullable: true
          type: string
      type: object
    PayLaterData_oneOf_3:
      properties:
        afterpay_clearpay_redirect:
          $ref: '#/components/schemas/PayLaterData_oneOf_3_afterpay_clearpay_redirect'
      required:
      - afterpay_clearpay_redirect
      type: object
    PayLaterData_oneOf_4:
      properties:
        pay_bright_redirect:
          description: For PayBright Redirect as PayLater Option
          type: object
      required:
      - pay_bright_redirect
      type: object
    PayLaterData_oneOf_5:
      properties:
        walley_redirect:
          description: For WalleyRedirect as PayLater Option
          type: object
      required:
      - walley_redirect
      type: object
    PayLaterData_oneOf_6:
      properties:
        alma_redirect:
          description: For Alma Redirection as PayLater Option
          type: object
      required:
      - alma_redirect
      type: object
    PayLaterData_oneOf_7:
      properties:
        atome_redirect:
          type: object
      required:
      - atome_redirect
      type: object
    PaymentChargeType_oneOf:
      properties:
        Stripe:
          $ref: '#/components/schemas/StripeChargeType'
      required:
      - Stripe
      type: object
    PaymentMethodCreateData_oneOf:
      properties:
        card:
          $ref: '#/components/schemas/CardDetail'
      required:
      - card
      type: object
    Card_1:
      properties:
        card:
          $ref: '#/components/schemas/Card'
      required:
      - card
      title: Card
      type: object
    CardRedirect:
      properties:
        card_redirect:
          $ref: '#/components/schemas/CardRedirectData'
      required:
      - card_redirect
      title: CardRedirect
      type: object
    Wallet_1:
      properties:
        wallet:
          $ref: '#/components/schemas/WalletData'
      required:
      - wallet
      title: Wallet
      type: object
    PayLater:
      properties:
        pay_later:
          $ref: '#/components/schemas/PayLaterData'
      required:
      - pay_later
      title: PayLater
      type: object
    BankRedirect:
      properties:
        bank_redirect:
          $ref: '#/components/schemas/BankRedirectData'
      required:
      - bank_redirect
      title: BankRedirect
      type: object
    BankDebit:
      properties:
        bank_debit:
          $ref: '#/components/schemas/BankDebitData'
      required:
      - bank_debit
      title: BankDebit
      type: object
    BankTransfer:
      properties:
        bank_transfer:
          $ref: '#/components/schemas/BankTransferData'
      required:
      - bank_transfer
      title: BankTransfer
      type: object
    RealTimePayment:
      properties:
        real_time_payment:
          $ref: '#/components/schemas/RealTimePaymentData'
      required:
      - real_time_payment
      title: RealTimePayment
      type: object
    Crypto:
      properties:
        crypto:
          $ref: '#/components/schemas/CryptoData'
      required:
      - crypto
      title: Crypto
      type: object
    Upi:
      properties:
        upi:
          $ref: '#/components/schemas/UpiData'
      required:
      - upi
      title: Upi
      type: object
    Voucher:
      properties:
        voucher:
          $ref: '#/components/schemas/VoucherData'
      required:
      - voucher
      title: Voucher
      type: object
    GiftCard:
      properties:
        gift_card:
          $ref: '#/components/schemas/GiftCardData'
      required:
      - gift_card
      title: GiftCard
      type: object
    CardToken_1:
      properties:
        card_token:
          $ref: '#/components/schemas/CardToken'
      required:
      - card_token
      title: CardToken
      type: object
    OpenBanking:
      properties:
        open_banking:
          $ref: '#/components/schemas/OpenBankingData'
      required:
      - open_banking
      title: OpenBanking
      type: object
    PaymentMethodDataResponse_oneOf:
      properties:
        card:
          $ref: '#/components/schemas/CardResponse'
      required:
      - card
      type: object
    PaymentMethodDataResponse_oneOf_1:
      properties:
        bank_transfer:
          $ref: '#/components/schemas/BankTransferResponse'
      required:
      - bank_transfer
      type: object
    PaymentMethodDataResponse_oneOf_2:
      properties:
        wallet:
          $ref: '#/components/schemas/WalletResponse'
      required:
      - wallet
      type: object
    PaymentMethodDataResponse_oneOf_3:
      properties:
        pay_later:
          $ref: '#/components/schemas/PaylaterResponse'
      required:
      - pay_later
      type: object
    PaymentMethodDataResponse_oneOf_4:
      properties:
        bank_redirect:
          $ref: '#/components/schemas/BankRedirectResponse'
      required:
      - bank_redirect
      type: object
    PaymentMethodDataResponse_oneOf_5:
      properties:
        crypto:
          $ref: '#/components/schemas/CryptoResponse'
      required:
      - crypto
      type: object
    PaymentMethodDataResponse_oneOf_6:
      properties:
        bank_debit:
          $ref: '#/components/schemas/BankDebitResponse'
      required:
      - bank_debit
      type: object
    PaymentMethodDataResponse_oneOf_7:
      properties:
        mandate_payment:
          type: object
      required:
      - mandate_payment
      type: object
    PaymentMethodDataResponse_oneOf_8:
      properties:
        reward:
          type: object
      required:
      - reward
      type: object
    PaymentMethodDataResponse_oneOf_9:
      properties:
        real_time_payment:
          $ref: '#/components/schemas/RealTimePaymentDataResponse'
      required:
      - real_time_payment
      type: object
    PaymentMethodDataResponse_oneOf_10:
      properties:
        upi:
          $ref: '#/components/schemas/UpiResponse'
      required:
      - upi
      type: object
    PaymentMethodDataResponse_oneOf_11:
      properties:
        voucher:
          $ref: '#/components/schemas/VoucherResponse'
      required:
      - voucher
      type: object
    PaymentMethodDataResponse_oneOf_12:
      properties:
        gift_card:
          $ref: '#/components/schemas/GiftCardResponse'
      required:
      - gift_card
      type: object
    PaymentMethodDataResponse_oneOf_13:
      properties:
        card_redirect:
          $ref: '#/components/schemas/CardRedirectResponse'
      required:
      - card_redirect
      type: object
    PaymentMethodDataResponse_oneOf_14:
      properties:
        card_token:
          $ref: '#/components/schemas/CardTokenResponse'
      required:
      - card_token
      type: object
    PaymentMethodDataResponse_oneOf_15:
      properties:
        open_banking:
          $ref: '#/components/schemas/OpenBankingResponse'
      required:
      - open_banking
      type: object
    PaymentProcessingDetailsAt_oneOf:
      allOf:
      - $ref: '#/components/schemas/PaymentProcessingDetails'
      - properties:
          payment_processing_details_at:
            enum:
            - Hyperswitch
            type: string
        required:
        - payment_processing_details_at
        type: object
    PaymentProcessingDetailsAt_oneOf_1:
      properties:
        payment_processing_details_at:
          enum:
          - Connector
          type: string
      required:
      - payment_processing_details_at
      type: object
    PayoutMethodData_oneOf:
      properties:
        card:
          $ref: '#/components/schemas/CardPayout'
      required:
      - card
      type: object
    PayoutMethodData_oneOf_1:
      properties:
        bank:
          $ref: '#/components/schemas/Bank'
      required:
      - bank
      type: object
    PayoutMethodData_oneOf_2:
      properties:
        wallet:
          $ref: '#/components/schemas/Wallet'
      required:
      - wallet
      type: object
    PayoutMethodDataResponse_oneOf:
      properties:
        card:
          $ref: '#/components/schemas/CardAdditionalData'
      required:
      - card
      type: object
    PayoutMethodDataResponse_oneOf_1:
      properties:
        bank:
          $ref: '#/components/schemas/BankAdditionalData'
      required:
      - bank
      type: object
    PayoutMethodDataResponse_oneOf_2:
      properties:
        wallet:
          $ref: '#/components/schemas/WalletAdditionalData'
      required:
      - wallet
      type: object
    PayoutRequest_oneOf:
      properties:
        PayoutActionRequest:
          type: object
      required:
      - PayoutActionRequest
      type: object
    PayoutRequest_oneOf_1:
      properties:
        PayoutCreateRequest:
          $ref: '#/components/schemas/PayoutCreateRequest'
      required:
      - PayoutCreateRequest
      type: object
    PayoutRequest_oneOf_2:
      properties:
        PayoutRetrieveRequest:
          $ref: '#/components/schemas/PayoutRetrieveRequest'
      required:
      - PayoutRetrieveRequest
      type: object
    RealTimePaymentData_oneOf:
      properties:
        fps:
          type: object
      required:
      - fps
      type: object
    RealTimePaymentData_oneOf_1:
      properties:
        duit_now:
          type: object
      required:
      - duit_now
      type: object
    RealTimePaymentData_oneOf_2:
      properties:
        prompt_pay:
          type: object
      required:
      - prompt_pay
      type: object
    RealTimePaymentData_oneOf_3:
      properties:
        viet_qr:
          type: object
      required:
      - viet_qr
      type: object
    RecurringDetails_oneOf:
      properties:
        type:
          enum:
          - mandate_id
          type: string
        data:
          type: string
      required:
      - data
      - type
      type: object
    RecurringDetails_oneOf_1:
      properties:
        type:
          enum:
          - payment_method_id
          type: string
        data:
          type: string
      required:
      - data
      - type
      type: object
    RecurringDetails_oneOf_2:
      properties:
        type:
          enum:
          - processor_payment_token
          type: string
        data:
          $ref: '#/components/schemas/ProcessorPaymentToken'
      required:
      - data
      - type
      type: object
    RecurringDetails_oneOf_3:
      properties:
        type:
          enum:
          - network_transaction_id_and_card_details
          type: string
        data:
          $ref: '#/components/schemas/NetworkTransactionIdAndCardDetails'
      required:
      - data
      - type
      type: object
    RoutingAlgorithm_oneOf:
      example:
        data:
          merchant_connector_id: merchant_connector_id
          connector: adyenplatform
        type: single
      properties:
        type:
          enum:
          - single
          type: string
        data:
          $ref: '#/components/schemas/RoutableConnectorChoice'
      required:
      - data
      - type
      type: object
    RoutingAlgorithm_oneOf_1:
      properties:
        type:
          enum:
          - advanced
          type: string
        data:
          $ref: '#/components/schemas/ProgramConnectorSelection'
      required:
      - data
      - type
      type: object
    SessionToken_oneOf:
      allOf:
      - $ref: '#/components/schemas/GpaySessionTokenResponse'
      - properties:
          wallet_name:
            enum:
            - google_pay
            type: string
        required:
        - wallet_name
        type: object
      example:
        wallet_name: google_pay
    SessionToken_oneOf_1:
      allOf:
      - $ref: '#/components/schemas/SamsungPaySessionTokenResponse'
      - properties:
          wallet_name:
            enum:
            - samsung_pay
            type: string
        required:
        - wallet_name
        type: object
    SessionToken_oneOf_2:
      allOf:
      - $ref: '#/components/schemas/KlarnaSessionTokenResponse'
      - properties:
          wallet_name:
            enum:
            - klarna
            type: string
        required:
        - wallet_name
        type: object
    SessionToken_oneOf_3:
      allOf:
      - $ref: '#/components/schemas/PaypalSessionTokenResponse'
      - properties:
          wallet_name:
            enum:
            - paypal
            type: string
        required:
        - wallet_name
        type: object
    SessionToken_oneOf_4:
      allOf:
      - $ref: '#/components/schemas/ApplepaySessionTokenResponse'
      - properties:
          wallet_name:
            enum:
            - apple_pay
            type: string
        required:
        - wallet_name
        type: object
    SessionToken_oneOf_5:
      allOf:
      - $ref: '#/components/schemas/OpenBankingSessionToken'
      - properties:
          wallet_name:
            enum:
            - open_banking
            type: string
        required:
        - wallet_name
        type: object
    SessionToken_oneOf_6:
      allOf:
      - $ref: '#/components/schemas/PazeSessionTokenResponse'
      - properties:
          wallet_name:
            enum:
            - paze
            type: string
        required:
        - wallet_name
        type: object
    SessionToken_oneOf_7:
      properties:
        wallet_name:
          enum:
          - no_session_token_received
          type: string
      required:
      - wallet_name
      type: object
    Single:
      properties:
        type:
          enum:
          - single
          type: string
        data:
          $ref: '#/components/schemas/RoutableConnectorChoice'
      required:
      - data
      - type
      title: Single
      type: object
    Priority:
      properties:
        type:
          enum:
          - priority
          type: string
        data:
          items:
            $ref: '#/components/schemas/RoutableConnectorChoice'
          type: array
      required:
      - data
      - type
      title: Priority
      type: object
    VolumeSplit:
      properties:
        type:
          enum:
          - volume_split
          type: string
        data:
          items:
            $ref: '#/components/schemas/ConnectorVolumeSplit'
          type: array
      required:
      - data
      - type
      title: VolumeSplit
      type: object
    SurchargeResponse_oneOf:
      properties:
        type:
          enum:
          - fixed
          type: string
        value:
          description: This Unit struct represents MinorUnit in which core amount
            works
          format: int64
          type: integer
      required:
      - type
      - value
      type: object
    SurchargeResponse_oneOf_1:
      properties:
        type:
          enum:
          - rate
          type: string
        value:
          $ref: '#/components/schemas/SurchargePercentage'
      required:
      - type
      - value
      type: object
    ThreeDsMethodData_oneOf:
      properties:
        three_ds_method_data_submission:
          description: Whether ThreeDS method data submission is required
          type: boolean
        three_ds_method_data:
          description: ThreeDS method data
          nullable: true
          type: string
        three_ds_method_url:
          description: ThreeDS method url
          nullable: true
          type: string
        three_ds_method_key:
          enum:
          - threeDSMethodData
          type: string
      required:
      - three_ds_method_data_submission
      - three_ds_method_key
      type: object
    UpiAdditionalData_oneOf:
      properties:
        upi_collect:
          $ref: '#/components/schemas/UpiCollectAdditionalData'
      required:
      - upi_collect
      type: object
    UpiAdditionalData_oneOf_1:
      properties:
        upi_intent:
          type: object
      required:
      - upi_intent
      type: object
    UpiData_oneOf:
      properties:
        upi_collect:
          $ref: '#/components/schemas/UpiCollectData'
      required:
      - upi_collect
      type: object
    ValueType_oneOf:
      properties:
        type:
          enum:
          - number
          type: string
        value:
          description: This Unit struct represents MinorUnit in which core amount
            works
          format: int64
          type: integer
      required:
      - type
      - value
      type: object
    ValueType_oneOf_1:
      properties:
        type:
          enum:
          - enum_variant
          type: string
        value:
          description: Represents an enum variant
          type: string
      required:
      - type
      - value
      type: object
    ValueType_oneOf_2:
      properties:
        type:
          enum:
          - metadata_variant
          type: string
        value:
          $ref: '#/components/schemas/MetadataValue'
      required:
      - type
      - value
      type: object
    ValueType_oneOf_3:
      properties:
        type:
          enum:
          - str_value
          type: string
        value:
          description: Represents a arbitrary String value
          type: string
      required:
      - type
      - value
      type: object
    ValueType_oneOf_4:
      properties:
        type:
          enum:
          - number_array
          type: string
        value:
          description: |-
            Represents an array of numbers. This is basically used for
            "one of the given numbers" operations
            eg: payment.method.amount = (1, 2, 3)
          items:
            $ref: '#/components/schemas/MinorUnit'
          type: array
      required:
      - type
      - value
      type: object
    ValueType_oneOf_5:
      properties:
        type:
          enum:
          - enum_variant_array
          type: string
        value:
          description: |-
            Similar to NumberArray but for enum variants
            eg: payment.method.cardtype = (debit, credit)
          items:
            type: string
          type: array
      required:
      - type
      - value
      type: object
    ValueType_oneOf_6:
      properties:
        type:
          enum:
          - number_comparison_array
          type: string
        value:
          description: |-
            Like a number array but can include comparisons. Useful for
            conditions like "500 < amount < 1000"
            eg: payment.amount = (> 500, < 1000)
          items:
            $ref: '#/components/schemas/NumberComparison'
          type: array
      required:
      - type
      - value
      type: object
    VoucherData_oneOf:
      properties:
        boleto:
          $ref: '#/components/schemas/BoletoVoucherData'
      required:
      - boleto
      type: object
    VoucherData_oneOf_1:
      properties:
        alfamart:
          $ref: '#/components/schemas/AlfamartVoucherData'
      required:
      - alfamart
      type: object
    VoucherData_oneOf_2:
      properties:
        indomaret:
          $ref: '#/components/schemas/IndomaretVoucherData'
      required:
      - indomaret
      type: object
    VoucherData_oneOf_3:
      properties:
        seven_eleven:
          $ref: '#/components/schemas/JCSVoucherData'
      required:
      - seven_eleven
      type: object
    VoucherData_oneOf_4:
      properties:
        lawson:
          $ref: '#/components/schemas/JCSVoucherData'
      required:
      - lawson
      type: object
    VoucherData_oneOf_5:
      properties:
        mini_stop:
          $ref: '#/components/schemas/JCSVoucherData'
      required:
      - mini_stop
      type: object
    VoucherData_oneOf_6:
      properties:
        family_mart:
          $ref: '#/components/schemas/JCSVoucherData'
      required:
      - family_mart
      type: object
    VoucherData_oneOf_7:
      properties:
        seicomart:
          $ref: '#/components/schemas/JCSVoucherData'
      required:
      - seicomart
      type: object
    VoucherData_oneOf_8:
      properties:
        pay_easy:
          $ref: '#/components/schemas/JCSVoucherData'
      required:
      - pay_easy
      type: object
    Wallet_oneOf:
      properties:
        paypal:
          $ref: '#/components/schemas/Paypal'
      required:
      - paypal
      type: object
    Wallet_oneOf_1:
      properties:
        venmo:
          $ref: '#/components/schemas/Venmo'
      required:
      - venmo
      type: object
    WalletData_oneOf:
      properties:
        ali_pay_qr:
          type: object
      required:
      - ali_pay_qr
      type: object
    WalletData_oneOf_1:
      properties:
        ali_pay_redirect:
          type: object
      required:
      - ali_pay_redirect
      type: object
    WalletData_oneOf_2:
      properties:
        ali_pay_hk_redirect:
          type: object
      required:
      - ali_pay_hk_redirect
      type: object
    WalletData_oneOf_3:
      properties:
        momo_redirect:
          type: object
      required:
      - momo_redirect
      type: object
    WalletData_oneOf_4:
      properties:
        kakao_pay_redirect:
          type: object
      required:
      - kakao_pay_redirect
      type: object
    WalletData_oneOf_5:
      properties:
        go_pay_redirect:
          type: object
      required:
      - go_pay_redirect
      type: object
    WalletData_oneOf_6:
      properties:
        gcash_redirect:
          type: object
      required:
      - gcash_redirect
      type: object
    WalletData_oneOf_7:
      properties:
        apple_pay:
          $ref: '#/components/schemas/ApplePayWalletData'
      required:
      - apple_pay
      type: object
    WalletData_oneOf_8:
      properties:
        apple_pay_redirect:
          type: object
      required:
      - apple_pay_redirect
      type: object
    WalletData_oneOf_9:
      properties:
        apple_pay_third_party_sdk:
          type: object
      required:
      - apple_pay_third_party_sdk
      type: object
    WalletData_oneOf_10:
      properties:
        dana_redirect:
          description: Wallet data for DANA redirect flow
          type: object
      required:
      - dana_redirect
      type: object
    WalletData_oneOf_11:
      properties:
        google_pay:
          $ref: '#/components/schemas/GooglePayWalletData'
      required:
      - google_pay
      type: object
    WalletData_oneOf_12:
      properties:
        google_pay_redirect:
          type: object
      required:
      - google_pay_redirect
      type: object
    WalletData_oneOf_13:
      properties:
        google_pay_third_party_sdk:
          type: object
      required:
      - google_pay_third_party_sdk
      type: object
    WalletData_oneOf_14:
      properties:
        mb_way_redirect:
          $ref: '#/components/schemas/MbWayRedirection'
      required:
      - mb_way_redirect
      type: object
    WalletData_oneOf_15:
      properties:
        mobile_pay_redirect:
          type: object
      required:
      - mobile_pay_redirect
      type: object
    WalletData_oneOf_16:
      properties:
        paypal_redirect:
          $ref: '#/components/schemas/PaypalRedirection'
      required:
      - paypal_redirect
      type: object
    WalletData_oneOf_17:
      properties:
        paypal_sdk:
          $ref: '#/components/schemas/PayPalWalletData'
      required:
      - paypal_sdk
      type: object
    WalletData_oneOf_18:
      properties:
        paze:
          $ref: '#/components/schemas/PazeWalletData'
      required:
      - paze
      type: object
    WalletData_oneOf_19:
      properties:
        samsung_pay:
          $ref: '#/components/schemas/SamsungPayWalletData'
      required:
      - samsung_pay
      type: object
    WalletData_oneOf_20:
      properties:
        twint_redirect:
          description: Wallet data for Twint Redirection
          type: object
      required:
      - twint_redirect
      type: object
    WalletData_oneOf_21:
      properties:
        vipps_redirect:
          description: Wallet data for Vipps Redirection
          type: object
      required:
      - vipps_redirect
      type: object
    WalletData_oneOf_22:
      properties:
        touch_n_go_redirect:
          type: object
      required:
      - touch_n_go_redirect
      type: object
    WalletData_oneOf_23:
      properties:
        we_chat_pay_redirect:
          type: object
      required:
      - we_chat_pay_redirect
      type: object
    WalletData_oneOf_24:
      properties:
        we_chat_pay_qr:
          type: object
      required:
      - we_chat_pay_qr
      type: object
    WalletData_oneOf_25:
      properties:
        cashapp_qr:
          type: object
      required:
      - cashapp_qr
      type: object
    WalletData_oneOf_26:
      properties:
        swish_qr:
          type: object
      required:
      - swish_qr
      type: object
    WalletData_oneOf_27:
      properties:
        mifinity:
          $ref: '#/components/schemas/MifinityData'
      required:
      - mifinity
      type: object
    WalletResponseData_oneOf:
      properties:
        apple_pay:
          $ref: '#/components/schemas/WalletAdditionalDataForCard'
      required:
      - apple_pay
      type: object
    WalletResponseData_oneOf_1:
      properties:
        google_pay:
          $ref: '#/components/schemas/WalletAdditionalDataForCard'
      required:
      - google_pay
      type: object
  securitySchemes:
    admin_api_key:
      description: Admin API keys allow you to perform some privileged actions such
        as creating a merchant account and Connector account.
      in: header
      name: api-key
      type: apiKey
    api_key:
      description: Use the API key created under your merchant account from the HyperSwitch
        dashboard. API key is used to authenticate API requests from your merchant
        server only. Don't expose this key on a website or embed it in a mobile application.
      in: header
      name: api-key
      type: apiKey
    ephemeral_key:
      description: "Ephemeral keys provide temporary access to singular data, such\
        \ as access to a single customer object for a short period of time."
      in: header
      name: api-key
      type: apiKey
    publishable_key:
      description: Publishable keys are a type of keys that can be public and have
        limited scope of usage.
      in: header
      name: api-key
      type: apiKey

