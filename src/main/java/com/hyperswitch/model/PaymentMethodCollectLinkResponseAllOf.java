/*
 * Hyperswitch - API Documentation
 *  ## Get started  Hyperswitch provides a collection of APIs that enable you to process and manage payments. Our APIs accept and return JSON in the HTTP body, and return standard HTTP response codes.  You can consume the APIs directly using your favorite HTTP/REST library.  We have a testing environment referred to \"sandbox\", which you can setup to test API calls without affecting production data. Currently, our sandbox environment is live while our production environment is under development and will be available soon. You can sign up on our Dashboard to get API keys to access Hyperswitch API.  ### Environment  Use the following base URLs when making requests to the APIs:  | Environment   |  Base URL                          | |---------------|------------------------------------| | Sandbox       | <https://sandbox.hyperswitch.io>   | | Production    | <https://api.hyperswitch.io>       |  ## Authentication  When you sign up on our [dashboard](https://app.hyperswitch.io) and create a merchant account, you are given a secret key (also referred as api-key) and a publishable key. You may authenticate all API requests with Hyperswitch server by providing the appropriate key in the request Authorization header.  | Key             |  Description                                                                                  | |-----------------|-----------------------------------------------------------------------------------------------| | api-key         | Private key. Used to authenticate all API requests from your merchant server                  | | publishable key | Unique identifier for your account. Used to authenticate API requests from your app's client  |  Never share your secret api keys. Keep them guarded and secure. 
 *
 * The version of the OpenAPI document: 0.1.0
 * Contact: hyperswitch@juspay.in
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.hyperswitch.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.hyperswitch.model.EnabledPaymentMethod;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.List;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * PaymentMethodCollectLinkResponseAllOf
 */
@JsonPropertyOrder({
  PaymentMethodCollectLinkResponseAllOf.JSON_PROPERTY_PM_COLLECT_LINK_ID,
  PaymentMethodCollectLinkResponseAllOf.JSON_PROPERTY_CUSTOMER_ID,
  PaymentMethodCollectLinkResponseAllOf.JSON_PROPERTY_EXPIRY,
  PaymentMethodCollectLinkResponseAllOf.JSON_PROPERTY_LINK,
  PaymentMethodCollectLinkResponseAllOf.JSON_PROPERTY_RETURN_URL,
  PaymentMethodCollectLinkResponseAllOf.JSON_PROPERTY_ENABLED_PAYMENT_METHODS
})
@JsonTypeName("PaymentMethodCollectLinkResponse_allOf")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class PaymentMethodCollectLinkResponseAllOf {
  public static final String JSON_PROPERTY_PM_COLLECT_LINK_ID = "pm_collect_link_id";
  private String pmCollectLinkId;

  public static final String JSON_PROPERTY_CUSTOMER_ID = "customer_id";
  private String customerId;

  public static final String JSON_PROPERTY_EXPIRY = "expiry";
  private OffsetDateTime expiry;

  public static final String JSON_PROPERTY_LINK = "link";
  private String link;

  public static final String JSON_PROPERTY_RETURN_URL = "return_url";
  private JsonNullable<String> returnUrl = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ENABLED_PAYMENT_METHODS = "enabled_payment_methods";
  private JsonNullable<List<EnabledPaymentMethod>> enabledPaymentMethods = JsonNullable.<List<EnabledPaymentMethod>>undefined();

  public PaymentMethodCollectLinkResponseAllOf() {
  }

  public PaymentMethodCollectLinkResponseAllOf pmCollectLinkId(String pmCollectLinkId) {
    
    this.pmCollectLinkId = pmCollectLinkId;
    return this;
  }

   /**
   * The unique identifier for the collect link.
   * @return pmCollectLinkId
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_PM_COLLECT_LINK_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getPmCollectLinkId() {
    return pmCollectLinkId;
  }


  @JsonProperty(JSON_PROPERTY_PM_COLLECT_LINK_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setPmCollectLinkId(String pmCollectLinkId) {
    this.pmCollectLinkId = pmCollectLinkId;
  }


  public PaymentMethodCollectLinkResponseAllOf customerId(String customerId) {
    
    this.customerId = customerId;
    return this;
  }

   /**
   * The unique identifier of the customer.
   * @return customerId
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_CUSTOMER_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getCustomerId() {
    return customerId;
  }


  @JsonProperty(JSON_PROPERTY_CUSTOMER_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setCustomerId(String customerId) {
    this.customerId = customerId;
  }


  public PaymentMethodCollectLinkResponseAllOf expiry(OffsetDateTime expiry) {
    
    this.expiry = expiry;
    return this;
  }

   /**
   * Time when this link will be expired in ISO8601 format
   * @return expiry
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_EXPIRY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public OffsetDateTime getExpiry() {
    return expiry;
  }


  @JsonProperty(JSON_PROPERTY_EXPIRY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setExpiry(OffsetDateTime expiry) {
    this.expiry = expiry;
  }


  public PaymentMethodCollectLinkResponseAllOf link(String link) {
    
    this.link = link;
    return this;
  }

   /**
   * URL to the form&#39;s link generated for collecting payment method details.
   * @return link
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_LINK)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getLink() {
    return link;
  }


  @JsonProperty(JSON_PROPERTY_LINK)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setLink(String link) {
    this.link = link;
  }


  public PaymentMethodCollectLinkResponseAllOf returnUrl(String returnUrl) {
    this.returnUrl = JsonNullable.<String>of(returnUrl);
    
    return this;
  }

   /**
   * Redirect to this URL post completion
   * @return returnUrl
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public String getReturnUrl() {
        return returnUrl.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_RETURN_URL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getReturnUrl_JsonNullable() {
    return returnUrl;
  }
  
  @JsonProperty(JSON_PROPERTY_RETURN_URL)
  public void setReturnUrl_JsonNullable(JsonNullable<String> returnUrl) {
    this.returnUrl = returnUrl;
  }

  public void setReturnUrl(String returnUrl) {
    this.returnUrl = JsonNullable.<String>of(returnUrl);
  }


  public PaymentMethodCollectLinkResponseAllOf enabledPaymentMethods(List<EnabledPaymentMethod> enabledPaymentMethods) {
    this.enabledPaymentMethods = JsonNullable.<List<EnabledPaymentMethod>>of(enabledPaymentMethods);
    
    return this;
  }

  public PaymentMethodCollectLinkResponseAllOf addEnabledPaymentMethodsItem(EnabledPaymentMethod enabledPaymentMethodsItem) {
    if (this.enabledPaymentMethods == null || !this.enabledPaymentMethods.isPresent()) {
      this.enabledPaymentMethods = JsonNullable.<List<EnabledPaymentMethod>>of(new ArrayList<>());
    }
    try {
      this.enabledPaymentMethods.get().add(enabledPaymentMethodsItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * List of payment methods shown on collect UI
   * @return enabledPaymentMethods
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public List<EnabledPaymentMethod> getEnabledPaymentMethods() {
        return enabledPaymentMethods.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ENABLED_PAYMENT_METHODS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<EnabledPaymentMethod>> getEnabledPaymentMethods_JsonNullable() {
    return enabledPaymentMethods;
  }
  
  @JsonProperty(JSON_PROPERTY_ENABLED_PAYMENT_METHODS)
  public void setEnabledPaymentMethods_JsonNullable(JsonNullable<List<EnabledPaymentMethod>> enabledPaymentMethods) {
    this.enabledPaymentMethods = enabledPaymentMethods;
  }

  public void setEnabledPaymentMethods(List<EnabledPaymentMethod> enabledPaymentMethods) {
    this.enabledPaymentMethods = JsonNullable.<List<EnabledPaymentMethod>>of(enabledPaymentMethods);
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PaymentMethodCollectLinkResponseAllOf paymentMethodCollectLinkResponseAllOf = (PaymentMethodCollectLinkResponseAllOf) o;
    return Objects.equals(this.pmCollectLinkId, paymentMethodCollectLinkResponseAllOf.pmCollectLinkId) &&
        Objects.equals(this.customerId, paymentMethodCollectLinkResponseAllOf.customerId) &&
        Objects.equals(this.expiry, paymentMethodCollectLinkResponseAllOf.expiry) &&
        Objects.equals(this.link, paymentMethodCollectLinkResponseAllOf.link) &&
        equalsNullable(this.returnUrl, paymentMethodCollectLinkResponseAllOf.returnUrl) &&
        equalsNullable(this.enabledPaymentMethods, paymentMethodCollectLinkResponseAllOf.enabledPaymentMethods);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(pmCollectLinkId, customerId, expiry, link, hashCodeNullable(returnUrl), hashCodeNullable(enabledPaymentMethods));
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PaymentMethodCollectLinkResponseAllOf {\n");
    sb.append("    pmCollectLinkId: ").append(toIndentedString(pmCollectLinkId)).append("\n");
    sb.append("    customerId: ").append(toIndentedString(customerId)).append("\n");
    sb.append("    expiry: ").append(toIndentedString(expiry)).append("\n");
    sb.append("    link: ").append(toIndentedString(link)).append("\n");
    sb.append("    returnUrl: ").append(toIndentedString(returnUrl)).append("\n");
    sb.append("    enabledPaymentMethods: ").append(toIndentedString(enabledPaymentMethods)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

