openapi: 3.0.3
info:
  contact:
    email: hyperswitch@juspay.in
    name: Hyperswitch Support
    url: https://hyperswitch.io
  description: |2

    ## Get started

    Hyperswitch provides a collection of APIs that enable you to process and manage payments.
    Our APIs accept and return JSON in the HTTP body, and return standard HTTP response codes.

    You can consume the APIs directly using your favorite HTTP/REST library.

    We have a testing environment referred to "sandbox", which you can setup to test API calls without
    affecting production data.
    Currently, our sandbox environment is live while our production environment is under development
    and will be available soon.
    You can sign up on our Dashboard to get API keys to access Hyperswitch API.

    ### Environment

    Use the following base URLs when making requests to the APIs:

    | Environment   |  Base URL                          |
    |---------------|------------------------------------|
    | Sandbox       | <https://sandbox.hyperswitch.io>   |
    | Production    | <https://api.hyperswitch.io>       |

    ## Authentication

    When you sign up on our [dashboard](https://app.hyperswitch.io) and create a merchant
    account, you are given a secret key (also referred as api-key) and a publishable key.
    You may authenticate all API requests with Hyperswitch server by providing the appropriate key in
    the request Authorization header.

    | Key             |  Description                                                                                  |
    |-----------------|-----------------------------------------------------------------------------------------------|
    | api-key         | Private key. Used to authenticate all API requests from your merchant server                  |
    | publishable key | Unique identifier for your account. Used to authenticate API requests from your app's client  |

    Never share your secret api keys. Keep them guarded and secure.
  license:
    name: Apache-2.0
  title: Hyperswitch - API Documentation
  version: 0.2.0
servers:
- description: Sandbox Environment
  url: https://sandbox.hyperswitch.io
tags:
- description: Create and manage merchant accounts
  name: Merchant Account
- description: Create and manage merchant connector accounts
  name: Merchant Connector Account
- description: "Create and manage one-time payments, recurring payments and mandates"
  name: Payments
- description: Create and manage refunds for successful payments
  name: Refunds
- description: Manage mandates
  name: Mandates
- description: Create and manage customers
  name: Customers
- description: Create and manage payment methods of customers
  name: Payment Methods
- description: Manage disputes
  name: Disputes
- description: Create and manage payouts
  name: Payouts
- description: Create payment link
  name: payment link
paths:
  /account/payment_methods:
    get:
      description: |-
        List payment methods for a Merchant

        To filter and list the applicable payment methods for a particular Merchant ID
      operationId: List all Payment Methods for a Merchant
      parameters:
      - description: The unique identifier for the merchant account
        explode: false
        in: path
        name: account_id
        required: true
        schema:
          type: string
        style: simple
      - description: The two-letter ISO currency code
        explode: true
        in: query
        name: accepted_country
        required: true
        schema:
          items:
            type: string
          type: array
        style: form
      - description: The three-letter ISO currency code
        explode: false
        in: path
        name: accepted_currency
        required: true
        schema:
          items:
            $ref: '#/components/schemas/Currency'
          type: array
        style: simple
      - description: The minimum amount accepted for processing by the particular
          payment method.
        explode: true
        in: query
        name: minimum_amount
        required: true
        schema:
          format: int64
          type: integer
        style: form
      - description: The maximum amount amount accepted for processing by the particular
          payment method.
        explode: true
        in: query
        name: maximum_amount
        required: true
        schema:
          format: int64
          type: integer
        style: form
      - description: Indicates whether the payment method is eligible for recurring
          payments
        explode: true
        in: query
        name: recurring_payment_enabled
        required: true
        schema:
          type: boolean
        style: form
      - description: Indicates whether the payment method is eligible for installment
          payments
        explode: true
        in: query
        name: installment_payment_enabled
        required: true
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentMethodListResponse'
          description: Payment Methods retrieved
        "400":
          description: Invalid Data
        "404":
          description: Payment Methods does not exist in records
      security:
      - api_key: []
      - publishable_key: []
      summary: List payment methods for a Merchant
      tags:
      - Payment Methods
      x-accepts: application/json
  /accounts/{account_id}/connectors:
    get:
      description: |-
        Merchant Connector - List

        List Merchant Connector Details for the merchant
      operationId: List all Merchant Connectors
      parameters:
      - description: The unique identifier for the merchant account
        explode: false
        in: path
        name: account_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/MerchantConnectorResponse'
                type: array
          description: Merchant Connector list retrieved successfully
        "401":
          description: Unauthorized request
        "404":
          description: Merchant Connector does not exist in records
      security:
      - admin_api_key: []
      summary: Merchant Connector - List
      tags:
      - Merchant Connector Account
      x-accepts: application/json
    post:
      description: |-
        Merchant Connector - Create

        Create a new Merchant Connector for the merchant account. The connector could be a payment processor / facilitator / acquirer or specialized services like Fraud / Accounting etc."
      operationId: Create a Merchant Connector
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MerchantConnectorCreate'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MerchantConnectorResponse'
          description: Merchant Connector Created
        "400":
          description: Missing Mandatory fields
      security:
      - admin_api_key: []
      summary: Merchant Connector - Create
      tags:
      - Merchant Connector Account
      x-content-type: application/json
      x-accepts: application/json
  /accounts/{account_id}/connectors/{connector_id}:
    delete:
      description: |-
        Merchant Connector - Delete

        Delete or Detach a Merchant Connector from Merchant Account
      operationId: Delete a Merchant Connector
      parameters:
      - description: The unique identifier for the merchant account
        explode: false
        in: path
        name: account_id
        required: true
        schema:
          type: string
        style: simple
      - description: The unique identifier for the Merchant Connector
        explode: false
        in: path
        name: connector_id
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MerchantConnectorDeleteResponse'
          description: Merchant Connector Deleted
        "401":
          description: Unauthorized request
        "404":
          description: Merchant Connector does not exist in records
      security:
      - admin_api_key: []
      summary: Merchant Connector - Delete
      tags:
      - Merchant Connector Account
      x-accepts: application/json
    get:
      description: |-
        Merchant Connector - Retrieve

        Retrieve Merchant Connector Details
      operationId: Retrieve a Merchant Connector
      parameters:
      - description: The unique identifier for the merchant account
        explode: false
        in: path
        name: account_id
        required: true
        schema:
          type: string
        style: simple
      - description: The unique identifier for the Merchant Connector
        explode: false
        in: path
        name: connector_id
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MerchantConnectorResponse'
          description: Merchant Connector retrieved successfully
        "401":
          description: Unauthorized request
        "404":
          description: Merchant Connector does not exist in records
      security:
      - admin_api_key: []
      summary: Merchant Connector - Retrieve
      tags:
      - Merchant Connector Account
      x-accepts: application/json
    post:
      description: |-
        Merchant Connector - Update

        To update an existing Merchant Connector. Helpful in enabling / disabling different payment methods and other settings for the connector etc.
      operationId: Update a Merchant Connector
      parameters:
      - description: The unique identifier for the merchant account
        explode: false
        in: path
        name: account_id
        required: true
        schema:
          type: string
        style: simple
      - description: The unique identifier for the Merchant Connector
        explode: false
        in: path
        name: connector_id
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MerchantConnectorUpdate'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MerchantConnectorResponse'
          description: Merchant Connector Updated
        "401":
          description: Unauthorized request
        "404":
          description: Merchant Connector does not exist in records
      security:
      - admin_api_key: []
      summary: Merchant Connector - Update
      tags:
      - Merchant Connector Account
      x-content-type: application/json
      x-accepts: application/json
  /blocklist:
    delete:
      operationId: Unblock a Fingerprint
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BlocklistRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BlocklistResponse'
          description: Fingerprint Unblocked
        "400":
          description: Invalid Data
      security:
      - api_key: []
      tags:
      - Blocklist
      x-content-type: application/json
      x-accepts: application/json
    get:
      operationId: List Blocked fingerprints of a particular kind
      parameters:
      - description: Kind of the fingerprint list requested
        explode: true
        in: query
        name: data_kind
        required: true
        schema:
          $ref: '#/components/schemas/BlocklistDataKind'
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BlocklistResponse'
          description: Blocked Fingerprints
        "400":
          description: Invalid Data
      security:
      - api_key: []
      tags:
      - Blocklist
      x-accepts: application/json
    post:
      operationId: Block a Fingerprint
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BlocklistRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BlocklistResponse'
          description: Fingerprint Blocked
        "400":
          description: Invalid Data
      security:
      - api_key: []
      tags:
      - Blocklist
      x-content-type: application/json
      x-accepts: application/json
  /customers:
    post:
      description: |-
        Create Customer

        Create a customer object and store the customer details to be reused for future payments. Incase the customer already exists in the system, this API will respond with the customer details.
      operationId: Create a Customer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerResponse'
          description: Customer Created
        "400":
          description: Invalid data
      security:
      - api_key: []
      summary: Create Customer
      tags:
      - Customers
      x-content-type: application/json
      x-accepts: application/json
  /customers/list:
    post:
      description: |-
        List customers for a merchant

        To filter and list the customers for a particular merchant id
      operationId: List all Customers for a Merchant
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/CustomerResponse'
                type: array
          description: Customers retrieved
        "400":
          description: Invalid Data
      security:
      - api_key: []
      summary: List customers for a merchant
      tags:
      - Customers List
      x-accepts: application/json
  /customers/payment_methods:
    get:
      description: |-
        List payment methods for a Customer

        To filter and list the applicable payment methods for a particular Customer ID
      operationId: List all Payment Methods for a Customer
      parameters:
      - description: A secret known only to your application and the authorization
          server
        explode: false
        in: path
        name: client-secret
        required: true
        schema:
          type: string
        style: simple
      - description: The two-letter ISO currency code
        explode: true
        in: query
        name: accepted_country
        required: true
        schema:
          items:
            type: string
          type: array
        style: form
      - description: The three-letter ISO currency code
        explode: false
        in: path
        name: accepted_currency
        required: true
        schema:
          items:
            $ref: '#/components/schemas/Currency'
          type: array
        style: simple
      - description: The minimum amount accepted for processing by the particular
          payment method.
        explode: true
        in: query
        name: minimum_amount
        required: true
        schema:
          format: int64
          type: integer
        style: form
      - description: The maximum amount amount accepted for processing by the particular
          payment method.
        explode: true
        in: query
        name: maximum_amount
        required: true
        schema:
          format: int64
          type: integer
        style: form
      - description: Indicates whether the payment method is eligible for recurring
          payments
        explode: true
        in: query
        name: recurring_payment_enabled
        required: true
        schema:
          type: boolean
        style: form
      - description: Indicates whether the payment method is eligible for installment
          payments
        explode: true
        in: query
        name: installment_payment_enabled
        required: true
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerPaymentMethodsListResponse'
          description: Payment Methods retrieved for customer tied to its respective
            client-secret passed in the param
        "400":
          description: Invalid Data
        "404":
          description: Payment Methods does not exist in records
      security:
      - publishable_key: []
      summary: List payment methods for a Customer
      tags:
      - Payment Methods
      x-accepts: application/json
  /customers/{customer_id}:
    delete:
      description: |-
        Delete Customer

        Delete a customer record.
      operationId: Delete a Customer
      parameters:
      - description: The unique identifier for the Customer
        explode: false
        in: path
        name: customer_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerDeleteResponse'
          description: Customer was Deleted
        "404":
          description: Customer was not found
      security:
      - api_key: []
      summary: Delete Customer
      tags:
      - Customers
      x-accepts: application/json
    get:
      description: |-
        Retrieve Customer

        Retrieve a customer's details.
      operationId: Retrieve a Customer
      parameters:
      - description: The unique identifier for the Customer
        explode: false
        in: path
        name: customer_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerResponse'
          description: Customer Retrieved
        "404":
          description: Customer was not found
      security:
      - api_key: []
      - ephemeral_key: []
      summary: Retrieve Customer
      tags:
      - Customers
      x-accepts: application/json
    post:
      description: |-
        Update Customer

        Updates the customer's details in a customer object.
      operationId: Update a Customer
      parameters:
      - description: The unique identifier for the Customer
        explode: false
        in: path
        name: customer_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerResponse'
          description: Customer was Updated
        "404":
          description: Customer was not found
      security:
      - api_key: []
      summary: Update Customer
      tags:
      - Customers
      x-content-type: application/json
      x-accepts: application/json
  /customers/{customer_id}/payment_methods:
    get:
      description: |-
        List payment methods for a Customer

        To filter and list the applicable payment methods for a particular Customer ID
      operationId: List all Payment Methods for a Customer
      parameters:
      - description: The two-letter ISO currency code
        explode: true
        in: query
        name: accepted_country
        required: true
        schema:
          items:
            type: string
          type: array
        style: form
      - description: The three-letter ISO currency code
        explode: false
        in: path
        name: accepted_currency
        required: true
        schema:
          items:
            $ref: '#/components/schemas/Currency'
          type: array
        style: simple
      - description: The minimum amount accepted for processing by the particular
          payment method.
        explode: true
        in: query
        name: minimum_amount
        required: true
        schema:
          format: int64
          type: integer
        style: form
      - description: The maximum amount amount accepted for processing by the particular
          payment method.
        explode: true
        in: query
        name: maximum_amount
        required: true
        schema:
          format: int64
          type: integer
        style: form
      - description: Indicates whether the payment method is eligible for recurring
          payments
        explode: true
        in: query
        name: recurring_payment_enabled
        required: true
        schema:
          type: boolean
        style: form
      - description: Indicates whether the payment method is eligible for installment
          payments
        explode: true
        in: query
        name: installment_payment_enabled
        required: true
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerPaymentMethodsListResponse'
          description: Payment Methods retrieved
        "400":
          description: Invalid Data
        "404":
          description: Payment Methods does not exist in records
      security:
      - api_key: []
      summary: List payment methods for a Customer
      tags:
      - Payment Methods
      x-accepts: application/json
  /disputes/list:
    get:
      description: Disputes - List Disputes
      operationId: List Disputes
      parameters:
      - description: The maximum number of Dispute Objects to include in the response
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int64
          nullable: true
          type: integer
        style: form
      - description: The status of dispute
        explode: true
        in: query
        name: dispute_status
        required: false
        schema:
          allOf:
          - $ref: '#/components/schemas/DisputeStatus'
          nullable: true
        style: form
      - description: The stage of dispute
        explode: true
        in: query
        name: dispute_stage
        required: false
        schema:
          allOf:
          - $ref: '#/components/schemas/DisputeStage'
          nullable: true
        style: form
      - description: The reason for dispute
        explode: true
        in: query
        name: reason
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: The connector linked to dispute
        explode: true
        in: query
        name: connector
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: The time at which dispute is received
        explode: true
        in: query
        name: received_time
        required: false
        schema:
          format: date-time
          nullable: true
          type: string
        style: form
      - description: Time less than the dispute received time
        explode: true
        in: query
        name: received_time.lt
        required: false
        schema:
          format: date-time
          nullable: true
          type: string
        style: form
      - description: Time greater than the dispute received time
        explode: true
        in: query
        name: received_time.gt
        required: false
        schema:
          format: date-time
          nullable: true
          type: string
        style: form
      - description: Time less than or equals to the dispute received time
        explode: true
        in: query
        name: received_time.lte
        required: false
        schema:
          format: date-time
          nullable: true
          type: string
        style: form
      - description: Time greater than or equals to the dispute received time
        explode: true
        in: query
        name: received_time.gte
        required: false
        schema:
          format: date-time
          nullable: true
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/DisputeResponse'
                type: array
          description: The dispute list was retrieved successfully
        "401":
          description: Unauthorized request
      security:
      - api_key: []
      summary: Disputes - List Disputes
      tags:
      - Disputes
      x-accepts: application/json
  /disputes/{dispute_id}:
    get:
      description: Disputes - Retrieve Dispute
      operationId: Retrieve a Dispute
      parameters:
      - description: The identifier for dispute
        explode: false
        in: path
        name: dispute_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DisputeResponse'
          description: The dispute was retrieved successfully
        "404":
          description: Dispute does not exist in our records
      security:
      - api_key: []
      summary: Disputes - Retrieve Dispute
      tags:
      - Disputes
      x-accepts: application/json
  /gsm:
    post:
      description: |-
        Gsm - Create

        To create a Gsm Rule
      operationId: Create Gsm Rule
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GsmCreateRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GsmResponse'
          description: Gsm created
        "400":
          description: Missing Mandatory fields
      security:
      - admin_api_key: []
      summary: Gsm - Create
      tags:
      - Gsm
      x-content-type: application/json
      x-accepts: application/json
  /gsm/delete:
    post:
      description: |-
        Gsm - Delete

        To delete a Gsm Rule
      operationId: Delete Gsm Rule
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GsmDeleteRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GsmDeleteResponse'
          description: Gsm deleted
        "400":
          description: Missing Mandatory fields
      security:
      - admin_api_key: []
      summary: Gsm - Delete
      tags:
      - Gsm
      x-content-type: application/json
      x-accepts: application/json
  /gsm/get:
    post:
      description: |-
        Gsm - Get

        To get a Gsm Rule
      operationId: Retrieve Gsm Rule
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GsmRetrieveRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GsmResponse'
          description: Gsm retrieved
        "400":
          description: Missing Mandatory fields
      security:
      - admin_api_key: []
      summary: Gsm - Get
      tags:
      - Gsm
      x-content-type: application/json
      x-accepts: application/json
  /gsm/update:
    post:
      description: |-
        Gsm - Update

        To update a Gsm Rule
      operationId: Update Gsm Rule
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GsmUpdateRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GsmResponse'
          description: Gsm updated
        "400":
          description: Missing Mandatory fields
      security:
      - admin_api_key: []
      summary: Gsm - Update
      tags:
      - Gsm
      x-content-type: application/json
      x-accepts: application/json
  /mandates/revoke/{mandate_id}:
    post:
      description: |-
        Mandates - Revoke Mandate

        Revoke a mandate
      operationId: Revoke a Mandate
      parameters:
      - description: The identifier for mandate
        explode: false
        in: path
        name: mandate_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MandateRevokedResponse'
          description: The mandate was revoked successfully
        "400":
          description: Mandate does not exist in our records
      security:
      - api_key: []
      summary: Mandates - Revoke Mandate
      tags:
      - Mandates
      x-accepts: application/json
  /mandates/{mandate_id}:
    get:
      description: |-
        Mandates - Retrieve Mandate

        Retrieve a mandate
      operationId: Retrieve a Mandate
      parameters:
      - description: The identifier for mandate
        explode: false
        in: path
        name: mandate_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MandateResponse'
          description: The mandate was retrieved successfully
        "404":
          description: Mandate does not exist in our records
      security:
      - api_key: []
      summary: Mandates - Retrieve Mandate
      tags:
      - Mandates
      x-accepts: application/json
  /payment_link/{payment_link_id}:
    get:
      description: |-
        Payments Link - Retrieve

        To retrieve the properties of a Payment Link. This may be used to get the status of a previously initiated payment or next action for an ongoing payment
      operationId: Retrieve a Payment Link
      parameters:
      - description: The identifier for payment link
        explode: false
        in: path
        name: payment_link_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RetrievePaymentLinkRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetrievePaymentLinkResponse'
          description: Gets details regarding payment link
        "404":
          description: No payment link found
      security:
      - api_key: []
      - publishable_key: []
      summary: Payments Link - Retrieve
      tags:
      - Payments
      x-content-type: application/json
      x-accepts: application/json
  /payment_methods:
    post:
      description: |-
        PaymentMethods - Create

        To create a payment method against a customer object. In case of cards, this API could be used only by PCI compliant merchants
      operationId: Create a Payment Method
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentMethodCreate'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentMethodResponse'
          description: Payment Method Created
        "400":
          description: Invalid Data
      security:
      - api_key: []
      summary: PaymentMethods - Create
      tags:
      - Payment Methods
      x-content-type: application/json
      x-accepts: application/json
  /payment_methods/{method_id}:
    delete:
      description: |-
        Payment Method - Delete

        Delete payment method
      operationId: Delete a Payment method
      parameters:
      - description: The unique identifier for the Payment Method
        explode: false
        in: path
        name: method_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentMethodDeleteResponse'
          description: Payment Method deleted
        "404":
          description: Payment Method does not exist in records
      security:
      - api_key: []
      summary: Payment Method - Delete
      tags:
      - Payment Methods
      x-accepts: application/json
    get:
      description: |-
        Payment Method - Retrieve

        To retrieve a payment method
      operationId: Retrieve a Payment method
      parameters:
      - description: The unique identifier for the Payment Method
        explode: false
        in: path
        name: method_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentMethodResponse'
          description: Payment Method retrieved
        "404":
          description: Payment Method does not exist in records
      security:
      - api_key: []
      summary: Payment Method - Retrieve
      tags:
      - Payment Methods
      x-accepts: application/json
    post:
      description: |-
        Payment Method - Update

        To update an existing payment method attached to a customer object. This API is useful for use cases such as updating the card number for expired cards to prevent discontinuity in recurring payments
      operationId: Update a Payment method
      parameters:
      - description: The unique identifier for the Payment Method
        explode: false
        in: path
        name: method_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentMethodUpdate'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentMethodResponse'
          description: Payment Method updated
        "404":
          description: Payment Method does not exist in records
      security:
      - api_key: []
      summary: Payment Method - Update
      tags:
      - Payment Methods
      x-content-type: application/json
      x-accepts: application/json
  /payments:
    post:
      description: |-
        Payments - Create

        To process a payment you will have to create a payment, attach a payment method and confirm. Depending on the user journey you wish to achieve, you may opt to all the steps in a single request or in a sequence of API request using following APIs: (i) Payments - Update, (ii) Payments - Confirm, and (iii) Payments - Capture
      operationId: Create a Payment
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentsCreateRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentsResponse'
          description: Payment created
        "400":
          description: Missing Mandatory fields
      security:
      - api_key: []
      summary: Payments - Create
      tags:
      - Payments
      x-content-type: application/json
      x-accepts: application/json
  /payments/list:
    get:
      description: |-
        Payments - List

        To list the payments
      operationId: List all Payments
      parameters:
      - description: The identifier for the customer
        explode: true
        in: query
        name: customer_id
        required: true
        schema:
          type: string
        style: form
      - description: "A cursor for use in pagination, fetch the next list after some\
          \ object"
        explode: true
        in: query
        name: starting_after
        required: true
        schema:
          type: string
        style: form
      - description: "A cursor for use in pagination, fetch the previous list before\
          \ some object"
        explode: true
        in: query
        name: ending_before
        required: true
        schema:
          type: string
        style: form
      - description: Limit on the number of objects to return
        explode: true
        in: query
        name: limit
        required: true
        schema:
          format: int64
          type: integer
        style: form
      - description: The time at which payment is created
        explode: true
        in: query
        name: created
        required: true
        schema:
          format: date-time
          type: string
        style: form
      - description: Time less than the payment created time
        explode: true
        in: query
        name: created_lt
        required: true
        schema:
          format: date-time
          type: string
        style: form
      - description: Time greater than the payment created time
        explode: true
        in: query
        name: created_gt
        required: true
        schema:
          format: date-time
          type: string
        style: form
      - description: Time less than or equals to the payment created time
        explode: true
        in: query
        name: created_lte
        required: true
        schema:
          format: date-time
          type: string
        style: form
      - description: Time greater than or equals to the payment created time
        explode: true
        in: query
        name: created_gte
        required: true
        schema:
          format: date-time
          type: string
        style: form
      responses:
        "200":
          description: Received payment list
        "404":
          description: No payments found
      security:
      - api_key: []
      summary: Payments - List
      tags:
      - Payments
      x-accepts: application/json
  /payments/session_tokens:
    post:
      description: |-
        Payments - Session token

        To create the session object or to get session token for wallets
      operationId: Create Session tokens for a Payment
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentsSessionRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentsSessionResponse'
          description: Payment session object created or session token was retrieved
            from wallets
        "400":
          description: Missing mandatory fields
      security:
      - publishable_key: []
      summary: Payments - Session token
      tags:
      - Payments
      x-content-type: application/json
      x-accepts: application/json
  /payments/{payment_id}:
    get:
      description: |-
        Payments - Retrieve

        To retrieve the properties of a Payment. This may be used to get the status of a previously initiated payment or next action for an ongoing payment
      operationId: Retrieve a Payment
      parameters:
      - description: The identifier for payment
        explode: false
        in: path
        name: payment_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentRetrieveBody'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentsResponse'
          description: Gets the payment with final status
        "404":
          description: No payment found
      security:
      - api_key: []
      - publishable_key: []
      summary: Payments - Retrieve
      tags:
      - Payments
      x-content-type: application/json
      x-accepts: application/json
    post:
      description: |-
        Payments - Update

        To update the properties of a PaymentIntent object. This may include attaching a payment method, or attaching customer object or metadata fields after the Payment is created
      operationId: Update a Payment
      parameters:
      - description: The identifier for payment
        explode: false
        in: path
        name: payment_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentsRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentsResponse'
          description: Payment updated
        "400":
          description: Missing mandatory fields
      security:
      - api_key: []
      - publishable_key: []
      summary: Payments - Update
      tags:
      - Payments
      x-content-type: application/json
      x-accepts: application/json
  /payments/{payment_id}/cancel:
    post:
      description: |-
        Payments - Cancel

        A Payment could can be cancelled when it is in one of these statuses: requires_payment_method, requires_capture, requires_confirmation, requires_customer_action
      operationId: Cancel a Payment
      parameters:
      - description: The identifier for payment
        explode: false
        in: path
        name: payment_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentsCancelRequest'
        required: true
      responses:
        "200":
          description: Payment canceled
        "400":
          description: Missing mandatory fields
      security:
      - api_key: []
      summary: Payments - Cancel
      tags:
      - Payments
      x-content-type: application/json
      x-accepts: application/json
  /payments/{payment_id}/capture:
    post:
      description: |-
        Payments - Capture

        To capture the funds for an uncaptured payment
      operationId: Capture a Payment
      parameters:
      - description: The identifier for payment
        explode: false
        in: path
        name: payment_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentsCaptureRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentsResponse'
          description: Payment captured
        "400":
          description: Missing mandatory fields
      security:
      - api_key: []
      summary: Payments - Capture
      tags:
      - Payments
      x-content-type: application/json
      x-accepts: application/json
  /payments/{payment_id}/confirm:
    post:
      description: |-
        Payments - Confirm

        This API is to confirm the payment request and forward payment to the payment processor. This API provides more granular control upon when the API is forwarded to the payment processor. Alternatively you can confirm the payment within the Payments Create API
      operationId: Confirm a Payment
      parameters:
      - description: The identifier for payment
        explode: false
        in: path
        name: payment_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentsRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentsResponse'
          description: Payment confirmed
        "400":
          description: Missing mandatory fields
      security:
      - api_key: []
      - publishable_key: []
      summary: Payments - Confirm
      tags:
      - Payments
      x-content-type: application/json
      x-accepts: application/json
  /payouts/create:
    post:
      description: Payouts - Create
      operationId: Create a Payout
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PayoutCreateRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayoutCreateResponse'
          description: Payout created
        "400":
          description: Missing Mandatory fields
      security:
      - api_key: []
      summary: Payouts - Create
      tags:
      - Payouts
      x-content-type: application/json
      x-accepts: application/json
  /payouts/{payout_id}:
    get:
      description: Payouts - Retrieve
      operationId: Retrieve a Payout
      parameters:
      - description: "The identifier for payout]"
        explode: false
        in: path
        name: payout_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayoutCreateResponse'
          description: Payout retrieved
        "404":
          description: Payout does not exist in our records
      security:
      - api_key: []
      summary: Payouts - Retrieve
      tags:
      - Payouts
      x-accepts: application/json
    post:
      description: Payouts - Update
      operationId: Update a Payout
      parameters:
      - description: "The identifier for payout]"
        explode: false
        in: path
        name: payout_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PayoutCreateRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayoutCreateResponse'
          description: Payout updated
        "400":
          description: Missing Mandatory fields
      security:
      - api_key: []
      summary: Payouts - Update
      tags:
      - Payouts
      x-content-type: application/json
      x-accepts: application/json
  /payouts/{payout_id}/cancel:
    post:
      description: Payouts - Cancel
      operationId: Cancel a Payout
      parameters:
      - description: The identifier for payout
        explode: false
        in: path
        name: payout_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PayoutActionRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayoutCreateResponse'
          description: Payout cancelled
        "400":
          description: Missing Mandatory fields
      security:
      - api_key: []
      summary: Payouts - Cancel
      tags:
      - Payouts
      x-content-type: application/json
      x-accepts: application/json
  /payouts/{payout_id}/fulfill:
    post:
      description: Payouts - Fulfill
      operationId: Fulfill a Payout
      parameters:
      - description: The identifier for payout
        explode: false
        in: path
        name: payout_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PayoutActionRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayoutCreateResponse'
          description: Payout fulfilled
        "400":
          description: Missing Mandatory fields
      security:
      - api_key: []
      summary: Payouts - Fulfill
      tags:
      - Payouts
      x-content-type: application/json
      x-accepts: application/json
  /refunds:
    post:
      description: |-
        Refunds - Create

        To create a refund against an already processed payment
      operationId: Create a Refund
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RefundRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RefundResponse'
          description: Refund created
        "400":
          description: Missing Mandatory fields
      security:
      - api_key: []
      summary: Refunds - Create
      tags:
      - Refunds
      x-content-type: application/json
      x-accepts: application/json
  /refunds/list:
    post:
      description: |-
        Refunds - List

        To list the refunds associated with a payment_id or with the merchant, if payment_id is not provided
      operationId: List all Refunds
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RefundListRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RefundListResponse'
          description: List of refunds
      security:
      - api_key: []
      summary: Refunds - List
      tags:
      - Refunds
      x-content-type: application/json
      x-accepts: application/json
  /refunds/{refund_id}:
    get:
      description: |-
        Refunds - Retrieve (GET)

        To retrieve the properties of a Refund. This may be used to get the status of a previously initiated payment or next action for an ongoing payment
      operationId: Retrieve a Refund
      parameters:
      - description: The identifier for refund
        explode: false
        in: path
        name: refund_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RefundResponse'
          description: Refund retrieved
        "404":
          description: Refund does not exist in our records
      security:
      - api_key: []
      summary: Refunds - Retrieve (GET)
      tags:
      - Refunds
      x-accepts: application/json
    post:
      description: |-
        Refunds - Update

        To update the properties of a Refund object. This may include attaching a reason for the refund or metadata fields
      operationId: Update a Refund
      parameters:
      - description: The identifier for refund
        explode: false
        in: path
        name: refund_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RefundUpdateRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RefundResponse'
          description: Refund updated
        "400":
          description: Missing Mandatory fields
      security:
      - api_key: []
      summary: Refunds - Update
      tags:
      - Refunds
      x-content-type: application/json
      x-accepts: application/json
components:
  schemas:
    AcceptanceType:
      enum:
      - online
      - offline
      type: string
    AcceptedCountries:
      discriminator:
        propertyName: type
      oneOf:
      - $ref: '#/components/schemas/AcceptedCountries_oneOf'
      - $ref: '#/components/schemas/AcceptedCountries_oneOf_1'
      - $ref: '#/components/schemas/AcceptedCountries_oneOf_2'
    AcceptedCurrencies:
      discriminator:
        propertyName: type
      oneOf:
      - $ref: '#/components/schemas/AcceptedCurrencies_oneOf'
      - $ref: '#/components/schemas/AcceptedCurrencies_oneOf_1'
      - $ref: '#/components/schemas/AcceptedCountries_oneOf_2'
    AchBankTransfer:
      properties:
        bank_name:
          description: Bank name
          example: Deutsche Bank
          nullable: true
          type: string
        bank_country_code:
          allOf:
          - $ref: '#/components/schemas/CountryAlpha2'
          nullable: true
        bank_city:
          description: Bank city
          example: California
          nullable: true
          type: string
        bank_account_number:
          description: Bank account number is an unique identifier assigned by a bank
            to a customer.
          example: "000123456"
          type: string
        bank_routing_number:
          description: "[9 digits] Routing number - used in USA for identifying a\
            \ specific bank."
          example: "110000000"
          type: string
      required:
      - bank_account_number
      - bank_routing_number
      type: object
    AchBillingDetails:
      properties:
        email:
          description: The Email ID for ACH billing
          example: example@me.com
          type: string
      required:
      - email
      type: object
    AchTransfer:
      properties:
        account_number:
          example: "122385736258"
          type: string
        bank_name:
          type: string
        routing_number:
          example: "012"
          type: string
        swift_code:
          example: "234"
          type: string
      required:
      - account_number
      - bank_name
      - routing_number
      - swift_code
      type: object
    Address:
      properties:
        address:
          allOf:
          - $ref: '#/components/schemas/AddressDetails'
          nullable: true
        phone:
          allOf:
          - $ref: '#/components/schemas/PhoneDetails'
          nullable: true
      type: object
    AddressDetails:
      properties:
        city:
          description: The address city
          example: New York
          maxLength: 50
          nullable: true
          type: string
        country:
          allOf:
          - $ref: '#/components/schemas/CountryAlpha2'
          nullable: true
        line1:
          description: The first line of the address
          example: "123, King Street"
          maxLength: 200
          nullable: true
          type: string
        line2:
          description: The second line of the address
          example: Powelson Avenue
          maxLength: 50
          nullable: true
          type: string
        line3:
          description: The third line of the address
          example: Bridgewater
          maxLength: 50
          nullable: true
          type: string
        zip:
          description: The zip/postal code for the address
          example: "08807"
          maxLength: 50
          nullable: true
          type: string
        state:
          description: The address state
          example: New York
          nullable: true
          type: string
        first_name:
          description: The first name for the address
          example: John
          maxLength: 255
          nullable: true
          type: string
        last_name:
          description: The last name for the address
          example: Doe
          maxLength: 255
          nullable: true
          type: string
      type: object
    AirwallexData:
      properties:
        payload:
          description: payload required by airwallex
          nullable: true
          type: string
      type: object
    AlfamartVoucherData:
      properties:
        first_name:
          description: The billing first name for Alfamart
          example: Jane
          type: string
        last_name:
          description: The billing second name for Alfamart
          example: Doe
          type: string
        email:
          description: The Email ID for Alfamart
          example: example@me.com
          type: string
      required:
      - email
      - first_name
      - last_name
      type: object
    AliPayHkRedirection:
      type: object
    AliPayQr:
      type: object
    AliPayRedirection:
      type: object
    AmountInfo:
      properties:
        label:
          description: The label must be the name of the merchant.
          type: string
        type:
          description: "A value that indicates whether the line item(Ex: total, tax,\
            \ discount, or grand total) is final or pending."
          nullable: true
          type: string
        amount:
          description: The total amount for the payment
          type: string
      required:
      - amount
      - label
      type: object
    ApiKeyExpiration:
      oneOf:
      - enum:
        - never
        type: string
      - format: date-time
        type: string
    ApplePayPaymentRequest:
      properties:
        country_code:
          $ref: '#/components/schemas/CountryAlpha2'
        currency_code:
          $ref: '#/components/schemas/Currency'
        total:
          $ref: '#/components/schemas/AmountInfo'
        merchant_capabilities:
          description: "The list of merchant capabilities(ex: whether capable of 3ds\
            \ or no-3ds)"
          items:
            type: string
          nullable: true
          type: array
        supported_networks:
          description: The list of supported networks
          items:
            type: string
          nullable: true
          type: array
        merchant_identifier:
          nullable: true
          type: string
      required:
      - country_code
      - currency_code
      - total
      type: object
    ApplePayRedirectData:
      type: object
    ApplePaySessionResponse:
      oneOf:
      - $ref: '#/components/schemas/ThirdPartySdkSessionResponse'
      - $ref: '#/components/schemas/NoThirdPartySdkSessionResponse'
      - nullable: true
        type: object
    ApplePayThirdPartySdkData:
      type: object
    ApplePayWalletData:
      properties:
        payment_data:
          description: The payment data of Apple pay
          type: string
        payment_method:
          $ref: '#/components/schemas/ApplepayPaymentMethod'
        transaction_identifier:
          description: The unique identifier for the transaction
          type: string
      required:
      - payment_data
      - payment_method
      - transaction_identifier
      type: object
    ApplepayConnectorMetadataRequest:
      properties:
        session_token_data:
          allOf:
          - $ref: '#/components/schemas/SessionTokenInfo'
          nullable: true
      type: object
    ApplepayPaymentMethod:
      properties:
        display_name:
          description: The name to be displayed on Apple Pay button
          type: string
        network:
          description: The network of the Apple pay payment method
          type: string
        type:
          description: The type of the payment method
          type: string
      required:
      - display_name
      - network
      - type
      type: object
    ApplepaySessionTokenResponse:
      properties:
        session_token_data:
          $ref: '#/components/schemas/ApplePaySessionResponse'
        payment_request_data:
          allOf:
          - $ref: '#/components/schemas/ApplePayPaymentRequest'
          nullable: true
        connector:
          description: The session token is w.r.t this connector
          type: string
        delayed_session_token:
          description: Identifier for the delayed session response
          type: boolean
        sdk_next_action:
          $ref: '#/components/schemas/SdkNextAction'
        connector_reference_id:
          description: The connector transaction id
          nullable: true
          type: string
        connector_sdk_public_key:
          description: The public key id is to invoke third party sdk
          nullable: true
          type: string
        connector_merchant_id:
          description: The connector merchant id
          nullable: true
          type: string
      required:
      - connector
      - delayed_session_token
      - sdk_next_action
      - session_token_data
      type: object
    AttemptStatus:
      enum:
      - started
      - authentication_failed
      - router_declined
      - authentication_pending
      - authentication_successful
      - authorized
      - authorization_failed
      - charged
      - authorizing
      - cod_initiated
      - voided
      - void_initiated
      - capture_initiated
      - capture_failed
      - void_failed
      - auto_refunded
      - partial_charged
      - partial_charged_and_chargeable
      - unresolved
      - pending
      - failure
      - payment_method_awaited
      - confirmation_awaited
      - device_data_collection_pending
      type: string
    AuthenticationType:
      enum:
      - three_ds
      - no_three_ds
      type: string
    AuthorizationStatus:
      enum:
      - success
      - failure
      - processing
      - unresolved
      type: string
    BacsBankTransfer:
      properties:
        bank_name:
          description: Bank name
          example: Deutsche Bank
          nullable: true
          type: string
        bank_country_code:
          allOf:
          - $ref: '#/components/schemas/CountryAlpha2'
          nullable: true
        bank_city:
          description: Bank city
          example: California
          nullable: true
          type: string
        bank_account_number:
          description: Bank account number is an unique identifier assigned by a bank
            to a customer.
          example: "000123456"
          type: string
        bank_sort_code:
          description: "[6 digits] Sort Code - used in UK and Ireland for identifying\
            \ a bank and it's branches."
          example: 98-76-54
          type: string
      required:
      - bank_account_number
      - bank_sort_code
      type: object
    BacsBankTransferInstructions:
      properties:
        account_holder_name:
          example: Jane Doe
          type: string
        account_number:
          example: "10244123908"
          type: string
        sort_code:
          example: "012"
          type: string
      required:
      - account_holder_name
      - account_number
      - sort_code
      type: object
    Bank:
      oneOf:
      - $ref: '#/components/schemas/AchBankTransfer'
      - $ref: '#/components/schemas/BacsBankTransfer'
      - $ref: '#/components/schemas/SepaBankTransfer'
    BankDebitBilling:
      properties:
        name:
          description: The billing name for bank debits
          example: John Doe
          type: string
        email:
          description: The billing email for bank debits
          example: example@example.com
          type: string
        address:
          allOf:
          - $ref: '#/components/schemas/AddressDetails'
          nullable: true
      required:
      - email
      - name
      type: object
    BankDebitData:
      oneOf:
      - $ref: '#/components/schemas/BankDebitData_oneOf'
      - $ref: '#/components/schemas/BankDebitData_oneOf_1'
      - $ref: '#/components/schemas/BankDebitData_oneOf_2'
      - $ref: '#/components/schemas/BankDebitData_oneOf_3'
    BankNames:
      description: Name of banks supported by Hyperswitch
      enum:
      - american_express
      - affin_bank
      - agro_bank
      - alliance_bank
      - am_bank
      - bank_of_america
      - bank_islam
      - bank_muamalat
      - bank_rakyat
      - bank_simpanan_nasional
      - barclays
      - blik_p_s_p
      - capital_one
      - chase
      - citi
      - cimb_bank
      - discover
      - navy_federal_credit_union
      - pentagon_federal_credit_union
      - synchrony_bank
      - wells_fargo
      - abn_amro
      - asn_bank
      - bunq
      - handelsbanken
      - hong_leong_bank
      - hsbc_bank
      - ing
      - knab
      - kuwait_finance_house
      - moneyou
      - rabobank
      - regiobank
      - revolut
      - sns_bank
      - triodos_bank
      - van_lanschot
      - arzte_und_apotheker_bank
      - austrian_anadi_bank_ag
      - bank_austria
      - bank99_ag
      - bankhaus_carl_spangler
      - bankhaus_schelhammer_und_schattera_ag
      - bank_millennium
      - bank_p_e_k_a_o_s_a
      - bawag_psk_ag
      - bks_bank_ag
      - brull_kallmus_bank_ag
      - btv_vier_lander_bank
      - capital_bank_grawe_gruppe_ag
      - ceska_sporitelna
      - dolomitenbank
      - easybank_ag
      - e_platby_v_u_b
      - erste_bank_und_sparkassen
      - friesland_bank
      - hypo_alpeadriabank_international_ag
      - hypo_noe_lb_fur_niederosterreich_u_wien
      - hypo_oberosterreich_salzburg_steiermark
      - hypo_tirol_bank_ag
      - hypo_vorarlberg_bank_ag
      - hypo_bank_burgenland_aktiengesellschaft
      - komercni_banka
      - m_bank
      - marchfelder_bank
      - maybank
      - oberbank_ag
      - osterreichische_arzte_und_apothekerbank
      - ocbc_bank
      - pay_with_i_n_g
      - place_z_i_p_k_o
      - platnosc_online_karta_platnicza
      - posojilnica_bank_e_gen
      - postova_banka
      - public_bank
      - raiffeisen_bankengruppe_osterreich
      - rhb_bank
      - schelhammer_capital_bank_ag
      - standard_chartered_bank
      - schoellerbank_ag
      - sparda_bank_wien
      - sporo_pay
      - santander_przelew24
      - tatra_pay
      - viamo
      - volksbank_gruppe
      - volkskreditbank_ag
      - vr_bank_braunau
      - uob_bank
      - pay_with_alior_bank
      - banki_spoldzielcze
      - pay_with_inteligo
      - b_n_p_paribas_poland
      - bank_nowy_s_a
      - credit_agricole
      - pay_with_b_o_s
      - pay_with_citi_handlowy
      - pay_with_plus_bank
      - toyota_bank
      - velo_bank
      - e_transfer_pocztowy24
      - plus_bank
      - etransfer_pocztowy24
      - banki_spbdzielcze
      - bank_nowy_bfg_sa
      - getin_bank
      - blik
      - noble_pay
      - idea_bank
      - envelo_bank
      - nest_przelew
      - mbank_mtransfer
      - inteligo
      - pbac_z_ipko
      - bnp_paribas
      - bank_pekao_sa
      - volkswagen_bank
      - alior_bank
      - boz
      - bangkok_bank
      - krungsri_bank
      - krung_thai_bank
      - the_siam_commercial_bank
      - kasikorn_bank
      - open_bank_success
      - open_bank_failure
      - open_bank_cancelled
      - aib
      - bank_of_scotland
      - danske_bank
      - first_direct
      - first_trust
      - halifax
      - lloyds
      - monzo
      - nat_west
      - nationwide_bank
      - royal_bank_of_scotland
      - starling
      - tsb_bank
      - tesco_bank
      - ulster_bank
      type: string
    BankRedirectBilling:
      properties:
        billing_name:
          description: The name for which billing is issued
          example: John Doe
          type: string
        email:
          description: The billing email for bank redirect
          example: example@example.com
          type: string
      required:
      - billing_name
      - email
      type: object
    BankRedirectData:
      oneOf:
      - $ref: '#/components/schemas/BankRedirectData_oneOf'
      - $ref: '#/components/schemas/BankRedirectData_oneOf_1'
      - $ref: '#/components/schemas/BankRedirectData_oneOf_2'
      - $ref: '#/components/schemas/BankRedirectData_oneOf_3'
      - $ref: '#/components/schemas/BankRedirectData_oneOf_4'
      - $ref: '#/components/schemas/BankRedirectData_oneOf_5'
      - $ref: '#/components/schemas/BankRedirectData_oneOf_6'
      - $ref: '#/components/schemas/BankRedirectData_oneOf_7'
      - $ref: '#/components/schemas/BankRedirectData_oneOf_8'
      - $ref: '#/components/schemas/BankRedirectData_oneOf_9'
      - $ref: '#/components/schemas/BankRedirectData_oneOf_10'
      - $ref: '#/components/schemas/BankRedirectData_oneOf_11'
      - $ref: '#/components/schemas/BankRedirectData_oneOf_12'
      - $ref: '#/components/schemas/BankRedirectData_oneOf_13'
      - $ref: '#/components/schemas/BankRedirectData_oneOf_14'
      - $ref: '#/components/schemas/BankRedirectData_oneOf_15'
      - $ref: '#/components/schemas/BankRedirectData_oneOf_16'
    BankTransferData:
      oneOf:
      - $ref: '#/components/schemas/BankTransferData_oneOf'
      - $ref: '#/components/schemas/BankTransferData_oneOf_1'
      - $ref: '#/components/schemas/BankTransferData_oneOf_2'
      - $ref: '#/components/schemas/BankTransferData_oneOf_3'
      - $ref: '#/components/schemas/BankTransferData_oneOf_4'
      - $ref: '#/components/schemas/BankTransferData_oneOf_5'
      - $ref: '#/components/schemas/BankTransferData_oneOf_6'
      - $ref: '#/components/schemas/BankTransferData_oneOf_7'
      - $ref: '#/components/schemas/BankTransferData_oneOf_8'
      - $ref: '#/components/schemas/BankTransferData_oneOf_9'
      - $ref: '#/components/schemas/BankTransferData_oneOf_10'
      - $ref: '#/components/schemas/BankTransferData_oneOf_11'
      - $ref: '#/components/schemas/BankTransferData_oneOf_12'
    BankTransferInstructions:
      oneOf:
      - $ref: '#/components/schemas/BankTransferInstructions_oneOf'
      - $ref: '#/components/schemas/BankTransferInstructions_oneOf_1'
      - $ref: '#/components/schemas/BankTransferInstructions_oneOf_2'
      - $ref: '#/components/schemas/BankTransferInstructions_oneOf_3'
      - $ref: '#/components/schemas/BankTransferInstructions_oneOf_4'
    BankTransferNextStepsData:
      allOf:
      - $ref: '#/components/schemas/BankTransferInstructions'
      - properties:
          receiver:
            allOf:
            - $ref: '#/components/schemas/ReceiverDetails'
            nullable: true
        type: object
    BlocklistDataKind:
      enum:
      - payment_method
      - card_bin
      - extended_card_bin
      type: string
    BlocklistRequest:
      discriminator:
        propertyName: type
      oneOf:
      - $ref: '#/components/schemas/BlocklistRequest_oneOf'
      - $ref: '#/components/schemas/BlocklistRequest_oneOf_1'
      - $ref: '#/components/schemas/BlocklistRequest_oneOf_2'
    BlocklistResponse:
      example:
        fingerprint_id: fingerprint_id
        created_at: 2000-01-23T04:56:07.000+00:00
        data_kind: null
      properties:
        fingerprint_id:
          type: string
        data_kind:
          $ref: '#/components/schemas/BlocklistDataKind'
        created_at:
          format: date-time
          type: string
      required:
      - created_at
      - data_kind
      - fingerprint_id
      type: object
    BoletoVoucherData:
      properties:
        social_security_number:
          description: The shopper's social security number
          nullable: true
          type: string
      type: object
    BusinessPaymentLinkConfig:
      allOf:
      - $ref: '#/components/schemas/PaymentLinkConfigRequest'
      - properties:
          domain_name:
            nullable: true
            type: string
        type: object
    CaptureMethod:
      enum:
      - automatic
      - manual
      - manual_multiple
      - scheduled
      type: string
    CaptureResponse:
      example:
        capture_sequence: 5
        error_message: error_message
        amount: 1
        error_reason: error_reason
        connector: connector
        reference_id: reference_id
        authorized_attempt_id: authorized_attempt_id
        currency: ""
        error_code: error_code
        capture_id: capture_id
        connector_capture_id: connector_capture_id
        status: null
      properties:
        capture_id:
          description: unique identifier for the capture
          type: string
        status:
          $ref: '#/components/schemas/CaptureStatus'
        amount:
          description: "The capture amount. Amount for the payment in lowest denomination\
            \ of the currency. (i.e) in cents for USD denomination, in paisa for INR\
            \ denomination etc.,"
          format: int64
          type: integer
        currency:
          allOf:
          - $ref: '#/components/schemas/Currency'
          nullable: true
        connector:
          description: The connector used for the payment
          type: string
        authorized_attempt_id:
          description: unique identifier for the parent attempt on which this capture
            is made
          type: string
        connector_capture_id:
          description: A unique identifier for a capture provided by the connector
          nullable: true
          type: string
        capture_sequence:
          description: sequence number of this capture
          format: int32
          type: integer
        error_message:
          description: If there was an error while calling the connector the error
            message is received here
          nullable: true
          type: string
        error_code:
          description: If there was an error while calling the connectors the code
            is received here
          nullable: true
          type: string
        error_reason:
          description: If there was an error while calling the connectors the reason
            is received here
          nullable: true
          type: string
        reference_id:
          description: reference to the capture at connector side
          nullable: true
          type: string
      required:
      - amount
      - authorized_attempt_id
      - capture_id
      - capture_sequence
      - connector
      - status
      type: object
    CaptureStatus:
      enum:
      - started
      - charged
      - pending
      - failed
      type: string
    Card:
      properties:
        card_number:
          description: The card number
          example: "4242424242424242"
          type: string
        expiry_month:
          description: The card's expiry month
          type: string
        expiry_year:
          description: The card's expiry year
          type: string
        card_holder_name:
          description: The card holder's name
          example: John Doe
          type: string
      required:
      - card_holder_name
      - card_number
      - expiry_month
      - expiry_year
      type: object
    CardDetail:
      properties:
        card_number:
          description: Card Number
          example: "4111111145551142"
          type: string
        card_exp_month:
          description: Card Expiry Month
          example: "10"
          type: string
        card_exp_year:
          description: Card Expiry Year
          example: "25"
          type: string
        card_holder_name:
          description: Card Holder Name
          example: John Doe
          type: string
        nick_name:
          description: Card Holder's Nick Name
          example: John Doe
          nullable: true
          type: string
        card_issuing_country:
          description: Card Issuing Country
          nullable: true
          type: string
        card_network:
          allOf:
          - $ref: '#/components/schemas/CardNetwork'
          nullable: true
        card_issuer:
          description: Issuer Bank for Card
          nullable: true
          type: string
        card_type:
          description: Card Type
          nullable: true
          type: string
      required:
      - card_exp_month
      - card_exp_year
      - card_holder_name
      - card_number
      type: object
    CardDetailFromLocker:
      properties:
        scheme:
          nullable: true
          type: string
        issuer_country:
          nullable: true
          type: string
        last4_digits:
          nullable: true
          type: string
        expiry_month:
          nullable: true
          type: string
        expiry_year:
          nullable: true
          type: string
        card_token:
          nullable: true
          type: string
        card_holder_name:
          nullable: true
          type: string
        card_fingerprint:
          nullable: true
          type: string
        nick_name:
          nullable: true
          type: string
        card_network:
          allOf:
          - $ref: '#/components/schemas/CardNetwork'
          nullable: true
        card_isin:
          nullable: true
          type: string
        card_issuer:
          nullable: true
          type: string
        card_type:
          nullable: true
          type: string
        saved_to_locker:
          type: boolean
      required:
      - saved_to_locker
      type: object
    CardNetwork:
      enum:
      - Visa
      - Mastercard
      - AmericanExpress
      - JCB
      - DinersClub
      - Discover
      - CartesBancaires
      - UnionPay
      - Interac
      - RuPay
      - Maestro
      type: string
    CardRedirectData:
      oneOf:
      - $ref: '#/components/schemas/CardRedirectData_oneOf'
      - $ref: '#/components/schemas/CardRedirectData_oneOf_1'
      - $ref: '#/components/schemas/CardRedirectData_oneOf_2'
      - $ref: '#/components/schemas/CardRedirectData_oneOf_3'
    CardToken:
      properties:
        card_holder_name:
          description: The card holder's name
          example: John Test
          type: string
        card_cvc:
          description: The CVC number for the card
          nullable: true
          type: string
      required:
      - card_holder_name
      type: object
    CashappQr:
      type: object
    Connector:
      enum:
      - phonypay
      - fauxpay
      - pretendpay
      - stripe_test
      - adyen_test
      - checkout_test
      - paypal_test
      - aci
      - adyen
      - airwallex
      - authorizedotnet
      - bambora
      - bankofamerica
      - bitpay
      - bluesnap
      - boku
      - braintree
      - cashtocode
      - checkout
      - coinbase
      - cryptopay
      - cybersource
      - dlocal
      - fiserv
      - forte
      - globalpay
      - globepay
      - gocardless
      - helcim
      - iatapay
      - klarna
      - mollie
      - multisafepay
      - nexinets
      - nmi
      - noon
      - nuvei
      - opennode
      - payme
      - paypal
      - payu
      - placetopay
      - powertranz
      - prophetpay
      - rapyd
      - shift4
      - square
      - stax
      - stripe
      - trustpay
      - tsys
      - volt
      - wise
      - worldline
      - worldpay
      - zen
      - signifyd
      - plaid
      - riskified
      type: string
    ConnectorMetadata:
      properties:
        apple_pay:
          allOf:
          - $ref: '#/components/schemas/ApplepayConnectorMetadataRequest'
          nullable: true
        airwallex:
          allOf:
          - $ref: '#/components/schemas/AirwallexData'
          nullable: true
        noon:
          allOf:
          - $ref: '#/components/schemas/NoonData'
          nullable: true
      type: object
    ConnectorStatus:
      enum:
      - inactive
      - active
      type: string
    ConnectorType:
      enum:
      - payment_processor
      - payment_vas
      - fin_operations
      - fiz_operations
      - networks
      - banking_entities
      - non_banking_finance
      - payout_processor
      - payment_method_auth
      type: string
    CountryAlpha2:
      enum:
      - AF
      - AX
      - AL
      - DZ
      - AS
      - AD
      - AO
      - AI
      - AQ
      - AG
      - AR
      - AM
      - AW
      - AU
      - AT
      - AZ
      - BS
      - BH
      - BD
      - BB
      - BY
      - BE
      - BZ
      - BJ
      - BM
      - BT
      - BO
      - BQ
      - BA
      - BW
      - BV
      - BR
      - IO
      - BN
      - BG
      - BF
      - BI
      - KH
      - CM
      - CA
      - CV
      - KY
      - CF
      - TD
      - CL
      - CN
      - CX
      - CC
      - CO
      - KM
      - CG
      - CD
      - CK
      - CR
      - CI
      - HR
      - CU
      - CW
      - CY
      - CZ
      - DK
      - DJ
      - DM
      - DO
      - EC
      - EG
      - SV
      - GQ
      - ER
      - EE
      - ET
      - FK
      - FO
      - FJ
      - FI
      - FR
      - GF
      - PF
      - TF
      - GA
      - GM
      - GE
      - DE
      - GH
      - GI
      - GR
      - GL
      - GD
      - GP
      - GU
      - GT
      - GG
      - GN
      - GW
      - GY
      - HT
      - HM
      - VA
      - HN
      - HK
      - HU
      - IS
      - IN
      - ID
      - IR
      - IQ
      - IE
      - IM
      - IL
      - IT
      - JM
      - JP
      - JE
      - JO
      - KZ
      - KE
      - KI
      - KP
      - KR
      - KW
      - KG
      - LA
      - LV
      - LB
      - LS
      - LR
      - LY
      - LI
      - LT
      - LU
      - MO
      - MK
      - MG
      - MW
      - MY
      - MV
      - ML
      - MT
      - MH
      - MQ
      - MR
      - MU
      - YT
      - MX
      - FM
      - MD
      - MC
      - MN
      - ME
      - MS
      - MA
      - MZ
      - MM
      - NA
      - NR
      - NP
      - NL
      - NC
      - NZ
      - NI
      - NE
      - NG
      - NU
      - NF
      - MP
      - "NO"
      - OM
      - PK
      - PW
      - PS
      - PA
      - PG
      - PY
      - PE
      - PH
      - PN
      - PL
      - PT
      - PR
      - QA
      - RE
      - RO
      - RU
      - RW
      - BL
      - SH
      - KN
      - LC
      - MF
      - PM
      - VC
      - WS
      - SM
      - ST
      - SA
      - SN
      - RS
      - SC
      - SL
      - SG
      - SX
      - SK
      - SI
      - SB
      - SO
      - ZA
      - GS
      - SS
      - ES
      - LK
      - SD
      - SR
      - SJ
      - SZ
      - SE
      - CH
      - SY
      - TW
      - TJ
      - TZ
      - TH
      - TL
      - TG
      - TK
      - TO
      - TT
      - TN
      - TR
      - TM
      - TC
      - TV
      - UG
      - UA
      - AE
      - GB
      - UM
      - UY
      - UZ
      - VU
      - VE
      - VN
      - VG
      - VI
      - WF
      - EH
      - YE
      - ZM
      - ZW
      - US
      type: string
    CreateApiKeyRequest:
      description: The request body for creating an API Key.
      properties:
        name:
          description: A unique name for the API Key to help you identify it.
          example: Sandbox integration key
          maxLength: 64
          type: string
        description:
          description: A description to provide more context about the API Key.
          example: Key used by our developers to integrate with the sandbox environment
          maxLength: 256
          nullable: true
          type: string
        expiration:
          $ref: '#/components/schemas/ApiKeyExpiration'
      required:
      - expiration
      - name
      type: object
    CreateApiKeyResponse:
      description: The response body for creating an API Key.
      properties:
        key_id:
          description: The identifier for the API Key.
          example: 5hEEqkgJUyuxgSKGArHA4mWSnX
          maxLength: 64
          type: string
        merchant_id:
          description: The identifier for the Merchant Account.
          example: y3oqhf46pyzuxjbcn2giaqnb44
          maxLength: 64
          type: string
        name:
          description: The unique name for the API Key to help you identify it.
          example: Sandbox integration key
          maxLength: 64
          type: string
        description:
          description: The description to provide more context about the API Key.
          example: Key used by our developers to integrate with the sandbox environment
          maxLength: 256
          nullable: true
          type: string
        api_key:
          description: |-
            The plaintext API Key used for server-side API access. Ensure you store the API Key
            securely as you will not be able to see it again.
          maxLength: 128
          type: string
        created:
          description: The time at which the API Key was created.
          example: 2022-09-10T10:11:12Z
          format: date-time
          type: string
        expiration:
          $ref: '#/components/schemas/ApiKeyExpiration'
      required:
      - api_key
      - created
      - expiration
      - key_id
      - merchant_id
      - name
      type: object
    CryptoData:
      properties:
        pay_currency:
          nullable: true
          type: string
      type: object
    Currency:
      enum:
      - AED
      - ALL
      - AMD
      - ANG
      - ARS
      - AUD
      - AWG
      - AZN
      - BBD
      - BDT
      - BHD
      - BIF
      - BMD
      - BND
      - BOB
      - BRL
      - BSD
      - BWP
      - BZD
      - CAD
      - CHF
      - CLP
      - CNY
      - COP
      - CRC
      - CUP
      - CZK
      - DJF
      - DKK
      - DOP
      - DZD
      - EGP
      - ETB
      - EUR
      - FJD
      - GBP
      - GHS
      - GIP
      - GMD
      - GNF
      - GTQ
      - GYD
      - HKD
      - HNL
      - HRK
      - HTG
      - HUF
      - IDR
      - ILS
      - INR
      - JMD
      - JOD
      - JPY
      - KES
      - KGS
      - KHR
      - KMF
      - KRW
      - KWD
      - KYD
      - KZT
      - LAK
      - LBP
      - LKR
      - LRD
      - LSL
      - MAD
      - MDL
      - MGA
      - MKD
      - MMK
      - MNT
      - MOP
      - MUR
      - MVR
      - MWK
      - MXN
      - MYR
      - NAD
      - NGN
      - NIO
      - NOK
      - NPR
      - NZD
      - OMR
      - PEN
      - PGK
      - PHP
      - PKR
      - PLN
      - PYG
      - QAR
      - RON
      - RUB
      - RWF
      - SAR
      - SCR
      - SEK
      - SGD
      - SLL
      - SOS
      - SSP
      - SVC
      - SZL
      - THB
      - TRY
      - TTD
      - TWD
      - TZS
      - UGX
      - USD
      - UYU
      - UZS
      - VND
      - VUV
      - XAF
      - XOF
      - XPF
      - YER
      - ZAR
      type: string
    CustomerAcceptance:
      properties:
        acceptance_type:
          $ref: '#/components/schemas/AcceptanceType'
        accepted_at:
          description: Specifying when the customer acceptance was provided
          example: 2022-09-10T10:11:12Z
          format: date-time
          nullable: true
          type: string
        online:
          allOf:
          - $ref: '#/components/schemas/OnlineMandate'
          nullable: true
      required:
      - acceptance_type
      type: object
    CustomerDeleteResponse:
      example:
        customer_id: cus_y3oqhf46pyzuxjbcn2giaqnb44
        customer_deleted: false
        address_deleted: false
        payment_methods_deleted: false
      properties:
        customer_id:
          description: The identifier for the customer object
          example: cus_y3oqhf46pyzuxjbcn2giaqnb44
          maxLength: 255
          type: string
        customer_deleted:
          description: Whether customer was deleted or not
          example: false
          type: boolean
        address_deleted:
          description: Whether address was deleted or not
          example: false
          type: boolean
        payment_methods_deleted:
          description: Whether payment methods deleted or not
          example: false
          type: boolean
      required:
      - address_deleted
      - customer_deleted
      - customer_id
      - payment_methods_deleted
      type: object
    CustomerDetails:
      properties:
        id:
          description: The identifier for the customer.
          type: string
        name:
          description: The customer's name
          example: John Doe
          maxLength: 255
          nullable: true
          type: string
        email:
          description: The customer's email address
          example: johntest@test.com
          maxLength: 255
          nullable: true
          type: string
        phone:
          description: The customer's phone number
          example: "3141592653"
          maxLength: 10
          nullable: true
          type: string
        phone_country_code:
          description: The country code for the customer's phone number
          example: "+1"
          maxLength: 2
          nullable: true
          type: string
      required:
      - id
      type: object
    CustomerPaymentMethod:
      example:
        payment_method_type: ""
        metadata: "{}"
        bank_transfer: ""
        created: 2023-01-18T11:04:09.922Z
        payment_token: 7ebf443f-a050-4067-84e5-e6f6d4800aef
        payment_method_issuer_code: ""
        surcharge_details: ""
        payment_method_issuer: Citibank
        bank: ""
        installment_payment_enabled: true
        requires_cvv: true
        customer_id: cus_meowerunwiuwiwqw
        payment_experience:
        - redirect_to_url
        payment_method: null
        card: ""
        recurring_enabled: true
      properties:
        payment_token:
          description: Token for payment method in temporary card locker which gets
            refreshed often
          example: 7ebf443f-a050-4067-84e5-e6f6d4800aef
          type: string
        customer_id:
          description: The unique identifier of the customer.
          example: cus_meowerunwiuwiwqw
          type: string
        payment_method:
          $ref: '#/components/schemas/PaymentMethodType'
        payment_method_type:
          allOf:
          - $ref: '#/components/schemas/PaymentMethodType'
          nullable: true
        payment_method_issuer:
          description: The name of the bank/ provider issuing the payment method to
            the end user
          example: Citibank
          nullable: true
          type: string
        payment_method_issuer_code:
          allOf:
          - $ref: '#/components/schemas/PaymentMethodIssuerCode'
          nullable: true
        recurring_enabled:
          description: Indicates whether the payment method is eligible for recurring
            payments
          example: true
          type: boolean
        installment_payment_enabled:
          description: Indicates whether the payment method is eligible for installment
            payments
          example: true
          type: boolean
        payment_experience:
          description: Type of payment experience enabled with the connector
          example:
          - redirect_to_url
          items:
            $ref: '#/components/schemas/PaymentExperience'
          nullable: true
          type: array
        card:
          allOf:
          - $ref: '#/components/schemas/CardDetailFromLocker'
          nullable: true
        metadata:
          description: "You can specify up to 50 keys, with key names up to 40 characters\
            \ long and values up to 500 characters long. Metadata is useful for storing\
            \ additional, structured information on an object."
          nullable: true
          type: object
        created:
          description: A timestamp (ISO 8601 code) that determines when the customer
            was created
          example: 2023-01-18T11:04:09.922Z
          format: date-time
          nullable: true
          type: string
        bank_transfer:
          allOf:
          - $ref: '#/components/schemas/Bank'
          nullable: true
        bank:
          allOf:
          - $ref: '#/components/schemas/MaskedBankDetails'
          nullable: true
        surcharge_details:
          allOf:
          - $ref: '#/components/schemas/SurchargeDetailsResponse'
          nullable: true
        requires_cvv:
          description: Whether this payment method requires CVV to be collected
          example: true
          type: boolean
      required:
      - customer_id
      - installment_payment_enabled
      - payment_method
      - payment_token
      - recurring_enabled
      - requires_cvv
      type: object
    CustomerPaymentMethodsListResponse:
      example:
        customer_payment_methods:
        - payment_method_type: ""
          metadata: "{}"
          bank_transfer: ""
          created: 2023-01-18T11:04:09.922Z
          payment_token: 7ebf443f-a050-4067-84e5-e6f6d4800aef
          payment_method_issuer_code: ""
          surcharge_details: ""
          payment_method_issuer: Citibank
          bank: ""
          installment_payment_enabled: true
          requires_cvv: true
          customer_id: cus_meowerunwiuwiwqw
          payment_experience:
          - redirect_to_url
          payment_method: null
          card: ""
          recurring_enabled: true
        - payment_method_type: ""
          metadata: "{}"
          bank_transfer: ""
          created: 2023-01-18T11:04:09.922Z
          payment_token: 7ebf443f-a050-4067-84e5-e6f6d4800aef
          payment_method_issuer_code: ""
          surcharge_details: ""
          payment_method_issuer: Citibank
          bank: ""
          installment_payment_enabled: true
          requires_cvv: true
          customer_id: cus_meowerunwiuwiwqw
          payment_experience:
          - redirect_to_url
          payment_method: null
          card: ""
          recurring_enabled: true
      properties:
        customer_payment_methods:
          description: List of payment methods for customer
          items:
            $ref: '#/components/schemas/CustomerPaymentMethod'
          type: array
      required:
      - customer_payment_methods
      type: object
    CustomerRequest:
      description: The customer details
      example:
        metadata: "{}"
        address: ""
        phone_country_code: "+65"
        phone: "9999999999"
        name: Jon Test
        description: First Customer
        customer_id: cus_y3oqhf46pyzuxjbcn2giaqnb44
        email: JonTest@test.com
      properties:
        customer_id:
          description: The identifier for the customer object. If not provided the
            customer ID will be autogenerated.
          example: cus_y3oqhf46pyzuxjbcn2giaqnb44
          maxLength: 255
          type: string
        name:
          description: The customer's name
          example: Jon Test
          maxLength: 255
          nullable: true
          type: string
        email:
          description: The customer's email address
          example: JonTest@test.com
          maxLength: 255
          nullable: true
          type: string
        phone:
          description: The customer's phone number
          example: "9999999999"
          maxLength: 255
          nullable: true
          type: string
        description:
          description: An arbitrary string that you can attach to a customer object.
          example: First Customer
          maxLength: 255
          nullable: true
          type: string
        phone_country_code:
          description: The country code for the customer phone number
          example: "+65"
          maxLength: 255
          nullable: true
          type: string
        address:
          allOf:
          - $ref: '#/components/schemas/AddressDetails'
          nullable: true
        metadata:
          description: |-
            You can specify up to 50 keys, with key names up to 40 characters long and values up to 500
            characters long. Metadata is useful for storing additional, structured information on an
            object.
          nullable: true
          type: object
      type: object
    CustomerResponse:
      example:
        metadata: "{}"
        address: ""
        phone_country_code: "+65"
        phone: "9999999999"
        name: Jon Test
        description: First Customer
        created_at: 2023-01-18T11:04:09.922Z
        customer_id: cus_y3oqhf46pyzuxjbcn2giaqnb44
        email: JonTest@test.com
      properties:
        customer_id:
          description: The identifier for the customer object. If not provided the
            customer ID will be autogenerated.
          example: cus_y3oqhf46pyzuxjbcn2giaqnb44
          maxLength: 255
          type: string
        name:
          description: The customer's name
          example: Jon Test
          maxLength: 255
          nullable: true
          type: string
        email:
          description: The customer's email address
          example: JonTest@test.com
          maxLength: 255
          nullable: true
          type: string
        phone:
          description: The customer's phone number
          example: "9999999999"
          maxLength: 255
          nullable: true
          type: string
        phone_country_code:
          description: The country code for the customer phone number
          example: "+65"
          maxLength: 255
          nullable: true
          type: string
        description:
          description: An arbitrary string that you can attach to a customer object.
          example: First Customer
          maxLength: 255
          nullable: true
          type: string
        address:
          allOf:
          - $ref: '#/components/schemas/AddressDetails'
          nullable: true
        created_at:
          description: A timestamp (ISO 8601 code) that determines when the customer
            was created
          example: 2023-01-18T11:04:09.922Z
          format: date-time
          type: string
        metadata:
          description: |-
            You can specify up to 50 keys, with key names up to 40 characters long and values up to 500
            characters long. Metadata is useful for storing additional, structured information on an
            object.
          nullable: true
          type: object
      required:
      - created_at
      - customer_id
      type: object
    DisputeResponse:
      example:
        amount: amount
        connector_dispute_id: connector_dispute_id
        challenge_required_by: 2000-01-23T04:56:07.000+00:00
        connector_status: connector_status
        created_at: 2000-01-23T04:56:07.000+00:00
        connector_created_at: 2000-01-23T04:56:07.000+00:00
        dispute_id: dispute_id
        connector_reason: connector_reason
        dispute_status: null
        connector_reason_code: connector_reason_code
        connector: connector
        payment_id: payment_id
        dispute_stage: null
        attempt_id: attempt_id
        currency: currency
        connector_updated_at: 2000-01-23T04:56:07.000+00:00
      properties:
        dispute_id:
          description: The identifier for dispute
          type: string
        payment_id:
          description: The identifier for payment_intent
          type: string
        attempt_id:
          description: The identifier for payment_attempt
          type: string
        amount:
          description: The dispute amount
          type: string
        currency:
          description: The three-letter ISO currency code
          type: string
        dispute_stage:
          $ref: '#/components/schemas/DisputeStage'
        dispute_status:
          $ref: '#/components/schemas/DisputeStatus'
        connector:
          description: connector to which dispute is associated with
          type: string
        connector_status:
          description: Status of the dispute sent by connector
          type: string
        connector_dispute_id:
          description: Dispute id sent by connector
          type: string
        connector_reason:
          description: Reason of dispute sent by connector
          nullable: true
          type: string
        connector_reason_code:
          description: Reason code of dispute sent by connector
          nullable: true
          type: string
        challenge_required_by:
          description: Evidence deadline of dispute sent by connector
          format: date-time
          nullable: true
          type: string
        connector_created_at:
          description: Dispute created time sent by connector
          format: date-time
          nullable: true
          type: string
        connector_updated_at:
          description: Dispute updated time sent by connector
          format: date-time
          nullable: true
          type: string
        created_at:
          description: Time at which dispute is received
          format: date-time
          type: string
      required:
      - amount
      - attempt_id
      - connector
      - connector_dispute_id
      - connector_status
      - created_at
      - currency
      - dispute_id
      - dispute_stage
      - dispute_status
      - payment_id
      type: object
    DisputeResponsePaymentsRetrieve:
      example:
        connector_dispute_id: connector_dispute_id
        challenge_required_by: 2000-01-23T04:56:07.000+00:00
        dispute_stage: null
        connector_status: connector_status
        created_at: 2000-01-23T04:56:07.000+00:00
        connector_created_at: 2000-01-23T04:56:07.000+00:00
        dispute_id: dispute_id
        connector_reason: connector_reason
        dispute_status: null
        connector_reason_code: connector_reason_code
        connector_updated_at: 2000-01-23T04:56:07.000+00:00
      properties:
        dispute_id:
          description: The identifier for dispute
          type: string
        dispute_stage:
          $ref: '#/components/schemas/DisputeStage'
        dispute_status:
          $ref: '#/components/schemas/DisputeStatus'
        connector_status:
          description: Status of the dispute sent by connector
          type: string
        connector_dispute_id:
          description: Dispute id sent by connector
          type: string
        connector_reason:
          description: Reason of dispute sent by connector
          nullable: true
          type: string
        connector_reason_code:
          description: Reason code of dispute sent by connector
          nullable: true
          type: string
        challenge_required_by:
          description: Evidence deadline of dispute sent by connector
          format: date-time
          nullable: true
          type: string
        connector_created_at:
          description: Dispute created time sent by connector
          format: date-time
          nullable: true
          type: string
        connector_updated_at:
          description: Dispute updated time sent by connector
          format: date-time
          nullable: true
          type: string
        created_at:
          description: Time at which dispute is received
          format: date-time
          type: string
      required:
      - connector_dispute_id
      - connector_status
      - created_at
      - dispute_id
      - dispute_stage
      - dispute_status
      type: object
    DisputeStage:
      enum:
      - pre_dispute
      - dispute
      - pre_arbitration
      type: string
    DisputeStatus:
      enum:
      - dispute_opened
      - dispute_expired
      - dispute_accepted
      - dispute_cancelled
      - dispute_challenged
      - dispute_won
      - dispute_lost
      type: string
    DokuBankTransferInstructions:
      properties:
        expires_at:
          example: 2023-07-26T17:33:00-07-21
          type: string
        reference:
          example: "122385736258"
          type: string
        instructions_url:
          type: string
      required:
      - expires_at
      - instructions_url
      - reference
      type: object
    DokuBillingDetails:
      properties:
        first_name:
          description: The billing first name for Doku
          example: Jane
          type: string
        last_name:
          description: The billing second name for Doku
          example: Doe
          type: string
        email:
          description: The Email ID for Doku billing
          example: example@me.com
          type: string
      required:
      - email
      - first_name
      - last_name
      type: object
    EphemeralKeyCreateResponse:
      properties:
        customer_id:
          description: customer_id to which this ephemeral key belongs to
          type: string
        created_at:
          description: time at which this ephemeral key was created
          format: int64
          type: integer
        expires:
          description: time at which this ephemeral key would expire
          format: int64
          type: integer
        secret:
          description: ephemeral key
          type: string
      required:
      - created_at
      - customer_id
      - expires
      - secret
      type: object
    EventType:
      enum:
      - payment_succeeded
      - payment_failed
      - payment_processing
      - payment_cancelled
      - payment_authorized
      - payment_captured
      - action_required
      - refund_succeeded
      - refund_failed
      - dispute_opened
      - dispute_expired
      - dispute_accepted
      - dispute_cancelled
      - dispute_challenged
      - dispute_won
      - dispute_lost
      - mandate_active
      - mandate_revoked
      type: string
    FeatureMetadata:
      properties:
        redirect_response:
          allOf:
          - $ref: '#/components/schemas/RedirectResponse'
          nullable: true
      type: object
    FieldType:
      description: Possible field type of required fields in payment_method_data
      oneOf:
      - enum:
        - user_card_number
        type: string
      - enum:
        - user_card_expiry_month
        type: string
      - enum:
        - user_card_expiry_year
        type: string
      - enum:
        - user_card_cvc
        type: string
      - enum:
        - user_full_name
        type: string
      - enum:
        - user_email_address
        type: string
      - enum:
        - user_phone_number
        type: string
      - enum:
        - user_country_code
        type: string
      - $ref: '#/components/schemas/FieldType_oneOf'
      - $ref: '#/components/schemas/FieldType_oneOf_1'
      - enum:
        - user_billing_name
        type: string
      - enum:
        - user_address_line1
        type: string
      - enum:
        - user_address_line2
        type: string
      - enum:
        - user_address_city
        type: string
      - enum:
        - user_address_pincode
        type: string
      - enum:
        - user_address_state
        type: string
      - $ref: '#/components/schemas/FieldType_oneOf_2'
      - enum:
        - user_blik_code
        type: string
      - enum:
        - user_bank
        type: string
      - enum:
        - text
        type: string
      - $ref: '#/components/schemas/FieldType_oneOf_3'
    FrmAction:
      enum:
      - cancel_txn
      - auto_refund
      - manual_review
      type: string
    FrmConfigs:
      description: "Details of FrmConfigs are mentioned here... it should be passed\
        \ in payment connector create api call, and stored in merchant_connector_table"
      properties:
        gateway:
          $ref: '#/components/schemas/ConnectorType'
        payment_methods:
          description: payment methods that can be used in the payment
          items:
            $ref: '#/components/schemas/FrmPaymentMethod'
          type: array
      required:
      - gateway
      - payment_methods
      type: object
    FrmMessage:
      description: "frm message is an object sent inside the payments response...when\
        \ frm is invoked, its value is Some(...), else its None"
      properties:
        frm_name:
          type: string
        frm_transaction_id:
          nullable: true
          type: string
        frm_transaction_type:
          nullable: true
          type: string
        frm_status:
          nullable: true
          type: string
        frm_score:
          format: int32
          nullable: true
          type: integer
        frm_reason:
          nullable: true
        frm_error:
          nullable: true
          type: string
      required:
      - frm_name
      type: object
    FrmPaymentMethod:
      description: "Details of FrmPaymentMethod are mentioned here... it should be\
        \ passed in payment connector create api call, and stored in merchant_connector_table"
      properties:
        payment_method:
          $ref: '#/components/schemas/PaymentMethod'
        payment_method_types:
          description: "payment method types(credit, debit) that can be used in the\
            \ payment"
          items:
            $ref: '#/components/schemas/FrmPaymentMethodType'
          type: array
      required:
      - payment_method
      - payment_method_types
      type: object
    FrmPaymentMethodType:
      description: "Details of FrmPaymentMethodType are mentioned here... it should\
        \ be passed in payment connector create api call, and stored in merchant_connector_table"
      properties:
        payment_method_type:
          $ref: '#/components/schemas/PaymentMethodType'
        card_networks:
          $ref: '#/components/schemas/CardNetwork'
        flow:
          $ref: '#/components/schemas/FrmPreferredFlowTypes'
        action:
          $ref: '#/components/schemas/FrmAction'
      required:
      - action
      - card_networks
      - flow
      - payment_method_type
      type: object
    FrmPreferredFlowTypes:
      enum:
      - pre
      - post
      type: string
    FutureUsage:
      enum:
      - off_session
      - on_session
      type: string
    GcashRedirection:
      type: object
    GiftCardData:
      oneOf:
      - $ref: '#/components/schemas/GiftCardData_oneOf'
      - $ref: '#/components/schemas/GiftCardData_oneOf_1'
    GiftCardDetails:
      properties:
        number:
          description: The gift card number
          type: string
        cvc:
          description: The card verification code.
          type: string
      required:
      - cvc
      - number
      type: object
    GoPayRedirection:
      type: object
    GooglePayPaymentMethodInfo:
      properties:
        card_network:
          description: The name of the card network
          type: string
        card_details:
          description: The details of the card
          type: string
      required:
      - card_details
      - card_network
      type: object
    GooglePayRedirectData:
      type: object
    GooglePaySessionResponse:
      properties:
        merchant_info:
          $ref: '#/components/schemas/GpayMerchantInfo'
        allowed_payment_methods:
          description: List of the allowed payment meythods
          items:
            $ref: '#/components/schemas/GpayAllowedPaymentMethods'
          type: array
        transaction_info:
          $ref: '#/components/schemas/GpayTransactionInfo'
        delayed_session_token:
          description: Identifier for the delayed session response
          type: boolean
        connector:
          description: The name of the connector
          type: string
        sdk_next_action:
          $ref: '#/components/schemas/SdkNextAction'
        secrets:
          allOf:
          - $ref: '#/components/schemas/SecretInfoToInitiateSdk'
          nullable: true
      required:
      - allowed_payment_methods
      - connector
      - delayed_session_token
      - merchant_info
      - sdk_next_action
      - transaction_info
      type: object
    GooglePayThirdPartySdk:
      properties:
        delayed_session_token:
          description: Identifier for the delayed session response
          type: boolean
        connector:
          description: The name of the connector
          type: string
        sdk_next_action:
          $ref: '#/components/schemas/SdkNextAction'
      required:
      - connector
      - delayed_session_token
      - sdk_next_action
      type: object
    GooglePayThirdPartySdkData:
      type: object
    GooglePayWalletData:
      properties:
        type:
          description: The type of payment method
          type: string
        description:
          description: User-facing message to describe the payment method that funds
            this transaction.
          type: string
        info:
          $ref: '#/components/schemas/GooglePayPaymentMethodInfo'
        tokenization_data:
          $ref: '#/components/schemas/GpayTokenizationData'
      required:
      - description
      - info
      - tokenization_data
      - type
      type: object
    GpayAllowedMethodsParameters:
      properties:
        allowed_auth_methods:
          description: "The list of allowed auth methods (ex: 3DS, No3DS, PAN_ONLY\
            \ etc)"
          items:
            type: string
          type: array
        allowed_card_networks:
          description: "The list of allowed card networks (ex: AMEX,JCB etc)"
          items:
            type: string
          type: array
      required:
      - allowed_auth_methods
      - allowed_card_networks
      type: object
    GpayAllowedPaymentMethods:
      properties:
        type:
          description: The type of payment method
          type: string
        parameters:
          $ref: '#/components/schemas/GpayAllowedMethodsParameters'
        tokenization_specification:
          $ref: '#/components/schemas/GpayTokenizationSpecification'
      required:
      - parameters
      - tokenization_specification
      - type
      type: object
    GpayMerchantInfo:
      properties:
        merchant_id:
          description: The merchant Identifier that needs to be passed while invoking
            Gpay SDK
          nullable: true
          type: string
        merchant_name:
          description: The name of the merchant that needs to be displayed on Gpay
            PopUp
          type: string
      required:
      - merchant_name
      type: object
    GpaySessionTokenResponse:
      oneOf:
      - $ref: '#/components/schemas/GooglePayThirdPartySdk'
      - $ref: '#/components/schemas/GooglePaySessionResponse'
    GpayTokenParameters:
      properties:
        gateway:
          description: The name of the connector
          type: string
        gateway_merchant_id:
          description: The merchant ID registered in the connector associated
          nullable: true
          type: string
        stripe:version:
          nullable: true
          type: string
        stripe:publishableKey:
          nullable: true
          type: string
      required:
      - gateway
      type: object
    GpayTokenizationData:
      properties:
        type:
          description: The type of the token
          type: string
        token:
          description: Token generated for the wallet
          type: string
      required:
      - token
      - type
      type: object
    GpayTokenizationSpecification:
      properties:
        type:
          description: "The token specification type(ex: PAYMENT_GATEWAY)"
          type: string
        parameters:
          $ref: '#/components/schemas/GpayTokenParameters'
      required:
      - parameters
      - type
      type: object
    GpayTransactionInfo:
      properties:
        country_code:
          $ref: '#/components/schemas/CountryAlpha2'
        currency_code:
          $ref: '#/components/schemas/Currency'
        total_price_status:
          description: "The total price status (ex: 'FINAL')"
          type: string
        total_price:
          description: The total price
          type: string
      required:
      - country_code
      - currency_code
      - total_price
      - total_price_status
      type: object
    GsmCreateRequest:
      example:
        code: code
        connector: null
        router_error: router_error
        decision: null
        sub_flow: sub_flow
        step_up_possible: true
        message: message
        unified_message: unified_message
        unified_code: unified_code
        flow: flow
        status: status
      properties:
        connector:
          $ref: '#/components/schemas/Connector'
        flow:
          type: string
        sub_flow:
          type: string
        code:
          type: string
        message:
          type: string
        status:
          type: string
        router_error:
          nullable: true
          type: string
        decision:
          $ref: '#/components/schemas/GsmDecision'
        step_up_possible:
          type: boolean
        unified_code:
          nullable: true
          type: string
        unified_message:
          nullable: true
          type: string
      required:
      - code
      - connector
      - decision
      - flow
      - message
      - status
      - step_up_possible
      - sub_flow
      type: object
    GsmDecision:
      enum:
      - retry
      - requeue
      - do_default
      type: string
    GsmDeleteRequest:
      example:
        code: code
        connector: connector
        sub_flow: sub_flow
        message: message
        flow: flow
      properties:
        connector:
          type: string
        flow:
          type: string
        sub_flow:
          type: string
        code:
          type: string
        message:
          type: string
      required:
      - code
      - connector
      - flow
      - message
      - sub_flow
      type: object
    GsmDeleteResponse:
      example:
        gsm_rule_delete: true
        code: code
        connector: connector
        sub_flow: sub_flow
        flow: flow
      properties:
        gsm_rule_delete:
          type: boolean
        connector:
          type: string
        flow:
          type: string
        sub_flow:
          type: string
        code:
          type: string
      required:
      - code
      - connector
      - flow
      - gsm_rule_delete
      - sub_flow
      type: object
    GsmResponse:
      example:
        code: code
        connector: connector
        router_error: router_error
        decision: decision
        sub_flow: sub_flow
        step_up_possible: true
        message: message
        unified_message: unified_message
        unified_code: unified_code
        flow: flow
        status: status
      properties:
        connector:
          type: string
        flow:
          type: string
        sub_flow:
          type: string
        code:
          type: string
        message:
          type: string
        status:
          type: string
        router_error:
          nullable: true
          type: string
        decision:
          type: string
        step_up_possible:
          type: boolean
        unified_code:
          nullable: true
          type: string
        unified_message:
          nullable: true
          type: string
      required:
      - code
      - connector
      - decision
      - flow
      - message
      - status
      - step_up_possible
      - sub_flow
      type: object
    GsmRetrieveRequest:
      example:
        code: code
        connector: null
        sub_flow: sub_flow
        message: message
        flow: flow
      properties:
        connector:
          $ref: '#/components/schemas/Connector'
        flow:
          type: string
        sub_flow:
          type: string
        code:
          type: string
        message:
          type: string
      required:
      - code
      - connector
      - flow
      - message
      - sub_flow
      type: object
    GsmUpdateRequest:
      example:
        code: code
        connector: connector
        router_error: router_error
        decision: ""
        sub_flow: sub_flow
        step_up_possible: true
        message: message
        unified_message: unified_message
        unified_code: unified_code
        flow: flow
        status: status
      properties:
        connector:
          type: string
        flow:
          type: string
        sub_flow:
          type: string
        code:
          type: string
        message:
          type: string
        status:
          nullable: true
          type: string
        router_error:
          nullable: true
          type: string
        decision:
          allOf:
          - $ref: '#/components/schemas/GsmDecision'
          nullable: true
        step_up_possible:
          nullable: true
          type: boolean
        unified_code:
          nullable: true
          type: string
        unified_message:
          nullable: true
          type: string
      required:
      - code
      - connector
      - flow
      - message
      - sub_flow
      type: object
    IncrementalAuthorizationResponse:
      example:
        error_message: error_message
        amount: 7
        authorization_id: authorization_id
        error_code: error_code
        previously_authorized_amount: 9
        status: null
      properties:
        authorization_id:
          description: The unique identifier of authorization
          type: string
        amount:
          description: Amount the authorization has been made for
          format: int64
          type: integer
        status:
          $ref: '#/components/schemas/AuthorizationStatus'
        error_code:
          description: Error code sent by the connector for authorization
          nullable: true
          type: string
        error_message:
          description: Error message sent by the connector for authorization
          nullable: true
          type: string
        previously_authorized_amount:
          description: Previously authorized amount for the payment
          format: int64
          type: integer
      required:
      - amount
      - authorization_id
      - previously_authorized_amount
      - status
      type: object
    IndomaretVoucherData:
      properties:
        first_name:
          description: The billing first name for Alfamart
          example: Jane
          type: string
        last_name:
          description: The billing second name for Alfamart
          example: Doe
          type: string
        email:
          description: The Email ID for Alfamart
          example: example@me.com
          type: string
      required:
      - email
      - first_name
      - last_name
      type: object
    IntentStatus:
      enum:
      - succeeded
      - failed
      - cancelled
      - processing
      - requires_customer_action
      - requires_merchant_action
      - requires_payment_method
      - requires_confirmation
      - requires_capture
      - partially_captured
      - partially_captured_and_capturable
      type: string
    JCSVoucherData:
      properties:
        first_name:
          description: The billing first name for Japanese convenience stores
          example: Jane
          type: string
        last_name:
          description: The billing second name Japanese convenience stores
          example: Doe
          type: string
        email:
          description: The Email ID for Japanese convenience stores
          example: example@me.com
          type: string
        phone_number:
          description: The telephone number for Japanese convenience stores
          example: "9999999999"
          type: string
      required:
      - email
      - first_name
      - last_name
      - phone_number
      type: object
    KakaoPayRedirection:
      type: object
    KlarnaSessionTokenResponse:
      properties:
        session_token:
          description: The session token for Klarna
          type: string
        session_id:
          description: The identifier for the session
          type: string
      required:
      - session_id
      - session_token
      type: object
    ListBlocklistQuery:
      properties:
        data_kind:
          $ref: '#/components/schemas/BlocklistDataKind'
        limit:
          format: int32
          minimum: 0
          type: integer
        offset:
          format: int32
          minimum: 0
          type: integer
      required:
      - data_kind
      type: object
    MandateAmountData:
      example:
        end_date: 2023-09-10T23:59:59Z
        amount: 6540
        metadata: "{}"
        currency: null
        start_date: 2022-09-10T00:00:00Z
      properties:
        amount:
          description: The maximum amount to be debited for the mandate transaction
          example: 6540
          format: int64
          type: integer
        currency:
          $ref: '#/components/schemas/Currency'
        start_date:
          description: Specifying start date of the mandate
          example: 2022-09-10T00:00:00Z
          format: date-time
          nullable: true
          type: string
        end_date:
          description: Specifying end date of the mandate
          example: 2023-09-10T23:59:59Z
          format: date-time
          nullable: true
          type: string
        metadata:
          description: Additional details required by mandate
          nullable: true
          type: object
      required:
      - amount
      - currency
      type: object
    MandateCardDetails:
      properties:
        last4_digits:
          description: The last 4 digits of card
          nullable: true
          type: string
        card_exp_month:
          description: The expiry month of card
          nullable: true
          type: string
        card_exp_year:
          description: The expiry year of card
          nullable: true
          type: string
        card_holder_name:
          description: The card holder name
          nullable: true
          type: string
        card_token:
          description: The token from card locker
          nullable: true
          type: string
        scheme:
          description: The card scheme network for the particular card
          nullable: true
          type: string
        issuer_country:
          description: The country code in in which the card was issued
          nullable: true
          type: string
        card_fingerprint:
          description: A unique identifier alias to identify a particular card
          nullable: true
          type: string
        card_isin:
          description: The first 6 digits of card
          nullable: true
          type: string
        card_issuer:
          description: The bank that issued the card
          nullable: true
          type: string
        card_network:
          allOf:
          - $ref: '#/components/schemas/CardNetwork'
          nullable: true
        card_type:
          description: The type of the payment card
          nullable: true
          type: string
      type: object
    MandateData:
      properties:
        customer_acceptance:
          allOf:
          - $ref: '#/components/schemas/CustomerAcceptance'
          nullable: true
        mandate_type:
          allOf:
          - $ref: '#/components/schemas/MandateType'
          nullable: true
      type: object
    MandateResponse:
      example:
        payment_method_type: payment_method_type
        customer_acceptance: ""
        payment_method_id: payment_method_id
        mandate_id: mandate_id
        payment_method: payment_method
        card: ""
        status: null
      properties:
        mandate_id:
          description: The identifier for mandate
          type: string
        status:
          $ref: '#/components/schemas/MandateStatus'
        payment_method_id:
          description: The identifier for payment method
          type: string
        payment_method:
          description: The payment method
          type: string
        payment_method_type:
          description: The payment method type
          nullable: true
          type: string
        card:
          allOf:
          - $ref: '#/components/schemas/MandateCardDetails'
          nullable: true
        customer_acceptance:
          allOf:
          - $ref: '#/components/schemas/CustomerAcceptance'
          nullable: true
      required:
      - mandate_id
      - payment_method
      - payment_method_id
      - status
      type: object
    MandateRevokedResponse:
      example:
        error_message: Failed while verifying the card
        mandate_id: mandate_id
        error_code: E0001
        status: null
      properties:
        mandate_id:
          description: The identifier for mandate
          type: string
        status:
          $ref: '#/components/schemas/MandateStatus'
        error_code:
          description: If there was an error while calling the connectors the code
            is received here
          example: E0001
          nullable: true
          type: string
        error_message:
          description: If there was an error while calling the connector the error
            message is received here
          example: Failed while verifying the card
          nullable: true
          type: string
      required:
      - mandate_id
      - status
      type: object
    MandateStatus:
      description: "The status of the mandate, which indicates whether it can be used\
        \ to initiate a payment"
      enum:
      - active
      - inactive
      - pending
      - revoked
      type: string
    MandateType:
      oneOf:
      - $ref: '#/components/schemas/MandateType_oneOf'
      - $ref: '#/components/schemas/MandateType_oneOf_1'
    MaskedBankDetails:
      properties:
        mask:
          type: string
      required:
      - mask
      type: object
    MbWayRedirection:
      properties:
        telephone_number:
          description: Telephone number of the shopper. Should be Portuguese phone
            number.
          type: string
      required:
      - telephone_number
      type: object
    MerchantAccountCreate:
      properties:
        merchant_id:
          description: The identifier for the Merchant Account
          example: y3oqhf46pyzuxjbcn2giaqnb44
          maxLength: 255
          type: string
        merchant_name:
          description: Name of the Merchant Account
          example: NewAge Retailer
          nullable: true
          type: string
        merchant_details:
          allOf:
          - $ref: '#/components/schemas/MerchantDetails'
          nullable: true
        return_url:
          description: The URL to redirect after the completion of the operation
          example: https://www.example.com/success
          maxLength: 255
          nullable: true
          type: string
        webhook_details:
          allOf:
          - $ref: '#/components/schemas/WebhookDetails'
          nullable: true
        routing_algorithm:
          description: The routing algorithm to be used for routing payments to desired
            connectors
          nullable: true
          type: object
        payout_routing_algorithm:
          allOf:
          - $ref: '#/components/schemas/RoutingAlgorithm'
          nullable: true
        sub_merchants_enabled:
          default: false
          description: "A boolean value to indicate if the merchant is a sub-merchant\
            \ under a master or a parent merchant. By default, its value is false."
          example: false
          nullable: true
          type: boolean
        parent_merchant_id:
          description: Refers to the Parent Merchant ID if the merchant being created
            is a sub-merchant
          example: xkkdf909012sdjki2dkh5sdf
          maxLength: 255
          nullable: true
          type: string
        enable_payment_response_hash:
          default: false
          description: A boolean value to indicate if payment response hash needs
            to be enabled
          example: true
          nullable: true
          type: boolean
        payment_response_hash_key:
          description: |-
            Refers to the hash key used for calculating the signature for webhooks and redirect response
            If the value is not provided, a default value is used
          nullable: true
          type: string
        redirect_to_merchant_with_http_post:
          default: false
          description: A boolean value to indicate if redirect to merchant with http
            post needs to be enabled
          example: true
          nullable: true
          type: boolean
        metadata:
          description: "You can specify up to 50 keys, with key names up to 40 characters\
            \ long and values up to 500 characters long. Metadata is useful for storing\
            \ additional, structured information on an object."
          nullable: true
          type: object
        publishable_key:
          description: API key that will be used for server side API access
          example: AH3423bkjbkjdsfbkj
          nullable: true
          type: string
        locker_id:
          description: An identifier for the vault used to store payment method information.
          example: locker_abc123
          nullable: true
          type: string
        primary_business_details:
          allOf:
          - $ref: '#/components/schemas/PrimaryBusinessDetails'
          nullable: true
        frm_routing_algorithm:
          description: The frm routing algorithm to be used for routing payments to
            desired FRM's
          nullable: true
          type: object
        organization_id:
          description: The id of the organization to which the merchant belongs to
          nullable: true
          type: string
      required:
      - merchant_id
      type: object
    MerchantAccountDeleteResponse:
      properties:
        merchant_id:
          description: The identifier for the Merchant Account
          example: y3oqhf46pyzuxjbcn2giaqnb44
          maxLength: 255
          type: string
        deleted:
          description: If the connector is deleted or not
          example: false
          type: boolean
      required:
      - deleted
      - merchant_id
      type: object
    MerchantAccountResponse:
      properties:
        merchant_id:
          description: The identifier for the Merchant Account
          example: y3oqhf46pyzuxjbcn2giaqnb44
          maxLength: 255
          type: string
        merchant_name:
          description: Name of the Merchant Account
          example: NewAge Retailer
          nullable: true
          type: string
        return_url:
          description: The URL to redirect after the completion of the operation
          example: https://www.example.com/success
          maxLength: 255
          nullable: true
          type: string
        enable_payment_response_hash:
          default: false
          description: A boolean value to indicate if payment response hash needs
            to be enabled
          example: true
          type: boolean
        payment_response_hash_key:
          description: Refers to the Parent Merchant ID if the merchant being created
            is a sub-merchant
          example: xkkdf909012sdjki2dkh5sdf
          maxLength: 255
          nullable: true
          type: string
        redirect_to_merchant_with_http_post:
          default: false
          description: A boolean value to indicate if redirect to merchant with http
            post needs to be enabled
          example: true
          type: boolean
        merchant_details:
          allOf:
          - $ref: '#/components/schemas/MerchantDetails'
          nullable: true
        webhook_details:
          allOf:
          - $ref: '#/components/schemas/WebhookDetails'
          nullable: true
        routing_algorithm:
          allOf:
          - $ref: '#/components/schemas/RoutingAlgorithm'
          nullable: true
        payout_routing_algorithm:
          allOf:
          - $ref: '#/components/schemas/RoutingAlgorithm'
          nullable: true
        sub_merchants_enabled:
          default: false
          description: "A boolean value to indicate if the merchant is a sub-merchant\
            \ under a master or a parent merchant. By default, its value is false."
          example: false
          nullable: true
          type: boolean
        parent_merchant_id:
          description: Refers to the Parent Merchant ID if the merchant being created
            is a sub-merchant
          example: xkkdf909012sdjki2dkh5sdf
          maxLength: 255
          nullable: true
          type: string
        publishable_key:
          description: API key that will be used for server side API access
          example: AH3423bkjbkjdsfbkj
          nullable: true
          type: string
        metadata:
          description: "You can specify up to 50 keys, with key names up to 40 characters\
            \ long and values up to 500 characters long. Metadata is useful for storing\
            \ additional, structured information on an object."
          nullable: true
          type: object
        locker_id:
          description: An identifier for the vault used to store payment method information.
          example: locker_abc123
          nullable: true
          type: string
        primary_business_details:
          description: Default business details for connector routing
          items:
            $ref: '#/components/schemas/PrimaryBusinessDetails'
          type: array
        frm_routing_algorithm:
          allOf:
          - $ref: '#/components/schemas/RoutingAlgorithm'
          nullable: true
        intent_fulfillment_time:
          description: |-
            Will be used to expire client secret after certain amount of time to be supplied in seconds
            (900) for 15 mins
          format: int64
          nullable: true
          type: integer
        organization_id:
          description: The organization id merchant is associated with
          type: string
        is_recon_enabled:
          description: "A boolean value to indicate if the merchant has recon service\
            \ is enabled or not, by default value is false"
          type: boolean
        default_profile:
          description: The default business profile that must be used for creating
            merchant accounts and payments
          maxLength: 64
          nullable: true
          type: string
        recon_status:
          $ref: '#/components/schemas/ReconStatus'
      required:
      - enable_payment_response_hash
      - is_recon_enabled
      - merchant_id
      - organization_id
      - primary_business_details
      - recon_status
      - redirect_to_merchant_with_http_post
      type: object
    MerchantAccountUpdate:
      properties:
        merchant_id:
          description: The identifier for the Merchant Account
          example: y3oqhf46pyzuxjbcn2giaqnb44
          maxLength: 255
          type: string
        merchant_name:
          description: Name of the Merchant Account
          example: NewAge Retailer
          nullable: true
          type: string
        merchant_details:
          allOf:
          - $ref: '#/components/schemas/MerchantDetails'
          nullable: true
        return_url:
          description: The URL to redirect after the completion of the operation
          example: https://www.example.com/success
          maxLength: 255
          nullable: true
          type: string
        webhook_details:
          allOf:
          - $ref: '#/components/schemas/WebhookDetails'
          nullable: true
        routing_algorithm:
          description: The routing algorithm to be used for routing payments to desired
            connectors
          nullable: true
          type: object
        payout_routing_algorithm:
          allOf:
          - $ref: '#/components/schemas/RoutingAlgorithm'
          nullable: true
        sub_merchants_enabled:
          default: false
          description: "A boolean value to indicate if the merchant is a sub-merchant\
            \ under a master or a parent merchant. By default, its value is false."
          example: false
          nullable: true
          type: boolean
        parent_merchant_id:
          description: Refers to the Parent Merchant ID if the merchant being created
            is a sub-merchant
          example: xkkdf909012sdjki2dkh5sdf
          maxLength: 255
          nullable: true
          type: string
        enable_payment_response_hash:
          default: false
          description: A boolean value to indicate if payment response hash needs
            to be enabled
          example: true
          nullable: true
          type: boolean
        payment_response_hash_key:
          description: Refers to the hash key used for payment response
          nullable: true
          type: string
        redirect_to_merchant_with_http_post:
          default: false
          description: A boolean value to indicate if redirect to merchant with http
            post needs to be enabled
          example: true
          nullable: true
          type: boolean
        metadata:
          description: "You can specify up to 50 keys, with key names up to 40 characters\
            \ long and values up to 500 characters long. Metadata is useful for storing\
            \ additional, structured information on an object."
          nullable: true
          type: object
        publishable_key:
          description: API key that will be used for server side API access
          example: AH3423bkjbkjdsfbkj
          nullable: true
          type: string
        locker_id:
          description: An identifier for the vault used to store payment method information.
          example: locker_abc123
          nullable: true
          type: string
        primary_business_details:
          description: Default business details for connector routing
          items:
            $ref: '#/components/schemas/PrimaryBusinessDetails'
          nullable: true
          type: array
        frm_routing_algorithm:
          description: The frm routing algorithm to be used for routing payments to
            desired FRM's
          nullable: true
          type: object
        default_profile:
          description: |-
            The default business profile that must be used for creating merchant accounts and payments
            To unset this field, pass an empty string
          maxLength: 64
          nullable: true
          type: string
      required:
      - merchant_id
      type: object
    MerchantConnectorCreate:
      description: Create a new Merchant Connector for the merchant account. The connector
        could be a payment processor / facilitator / acquirer or specialized services
        like Fraud / Accounting etc."
      example:
        metadata: "{}"
        merchant_connector_id: mca_5apGeP94tMts6rg3U3kR
        frm_configs: |2

          [{"gateway":"stripe","payment_methods":[{"payment_method":"card","payment_method_types":[{"payment_method_type":"credit","card_networks":["Visa"],"flow":"pre","action":"cancel_txn"},{"payment_method_type":"debit","card_networks":["Visa"],"flow":"pre"}]}]}]
        connector_webhook_details: ""
        connector_name: null
        connector_label: stripe_US_travel
        business_label: business_label
        test_mode: false
        pm_auth_config: ""
        profile_id: profile_id
        connector_type: null
        business_country: ""
        business_sub_label: chase
        payment_methods_enabled:
        - payment_method: wallet
          payment_method_types:
          - upi_collect
          - upi_intent
          payment_method_issuers:
          - labore magna ipsum
          - aute
          payment_schemes:
          - Discover
          - Discover
          accepted_currencies:
            type: enable_only
            list:
            - USD
            - EUR
          accepted_countries:
            type: disable_only
            list:
            - FR
            - DE
            - IN
          minimum_amount: 1
          maximum_amount: 68607706
          recurring_enabled: true
          installment_payment_enabled: true
        connector_account_details: "{}"
        disabled: false
        status: null
      properties:
        connector_type:
          $ref: '#/components/schemas/ConnectorType'
        connector_name:
          $ref: '#/components/schemas/Connector'
        connector_label:
          description: "Connector label for a connector, this can serve as a field\
            \ to identify the connector as per business details"
          example: stripe_US_travel
          nullable: true
          type: string
        merchant_connector_id:
          description: Unique ID of the connector
          example: mca_5apGeP94tMts6rg3U3kR
          nullable: true
          type: string
        connector_account_details:
          description: "Account details of the Connector. You can specify up to 50\
            \ keys, with key names up to 40 characters long and values up to 500 characters\
            \ long. Useful for storing additional, structured information on an object."
          nullable: true
          type: object
        test_mode:
          default: false
          description: "A boolean value to indicate if the connector is in Test mode.\
            \ By default, its value is false."
          example: false
          nullable: true
          type: boolean
        disabled:
          default: false
          description: "A boolean value to indicate if the connector is disabled.\
            \ By default, its value is false."
          example: false
          nullable: true
          type: boolean
        payment_methods_enabled:
          description: Refers to the Parent Merchant ID if the merchant being created
            is a sub-merchant
          example:
          - payment_method: wallet
            payment_method_types:
            - upi_collect
            - upi_intent
            payment_method_issuers:
            - labore magna ipsum
            - aute
            payment_schemes:
            - Discover
            - Discover
            accepted_currencies:
              type: enable_only
              list:
              - USD
              - EUR
            accepted_countries:
              type: disable_only
              list:
              - FR
              - DE
              - IN
            minimum_amount: 1
            maximum_amount: 68607706
            recurring_enabled: true
            installment_payment_enabled: true
          items:
            $ref: '#/components/schemas/PaymentMethodsEnabled'
          nullable: true
          type: array
        metadata:
          description: "You can specify up to 50 keys, with key names up to 40 characters\
            \ long and values up to 500 characters long. Metadata is useful for storing\
            \ additional, structured information on an object."
          nullable: true
          type: object
        frm_configs:
          description: contains the frm configs for the merchant connector
          example: |2

            [{"gateway":"stripe","payment_methods":[{"payment_method":"card","payment_method_types":[{"payment_method_type":"credit","card_networks":["Visa"],"flow":"pre","action":"cancel_txn"},{"payment_method_type":"debit","card_networks":["Visa"],"flow":"pre"}]}]}]
          items:
            $ref: '#/components/schemas/FrmConfigs'
          nullable: true
          type: array
        business_country:
          allOf:
          - $ref: '#/components/schemas/CountryAlpha2'
          nullable: true
        business_label:
          nullable: true
          type: string
        business_sub_label:
          description: Business Sub label of the merchant
          example: chase
          nullable: true
          type: string
        connector_webhook_details:
          allOf:
          - $ref: '#/components/schemas/MerchantConnectorWebhookDetails'
          nullable: true
        profile_id:
          description: "Identifier for the business profile, if not provided default\
            \ will be chosen from merchant account"
          nullable: true
          type: string
        pm_auth_config:
          nullable: true
        status:
          $ref: '#/components/schemas/ConnectorStatus'
      required:
      - connector_name
      - connector_type
      - status
      type: object
    MerchantConnectorDeleteResponse:
      example:
        merchant_connector_id: mca_5apGeP94tMts6rg3U3kR
        deleted: false
        merchant_id: y3oqhf46pyzuxjbcn2giaqnb44
      properties:
        merchant_id:
          description: The identifier for the Merchant Account
          example: y3oqhf46pyzuxjbcn2giaqnb44
          maxLength: 255
          type: string
        merchant_connector_id:
          description: Unique ID of the connector
          example: mca_5apGeP94tMts6rg3U3kR
          type: string
        deleted:
          description: If the connector is deleted or not
          example: false
          type: boolean
      required:
      - deleted
      - merchant_connector_id
      - merchant_id
      type: object
    MerchantConnectorDetails:
      properties:
        connector_account_details:
          description: "Account details of the Connector. You can specify up to 50\
            \ keys, with key names up to 40 characters long and values up to 500 characters\
            \ long. Useful for storing additional, structured information on an object."
          nullable: true
          type: object
        metadata:
          description: "You can specify up to 50 keys, with key names up to 40 characters\
            \ long and values up to 500 characters long. Metadata is useful for storing\
            \ additional, structured information on an object."
          nullable: true
          type: object
      type: object
    MerchantConnectorDetailsWrap:
      example:
        creds_identifier: creds_identifier
        encoded_data: ""
      properties:
        creds_identifier:
          description: Creds Identifier is to uniquely identify the credentials. Do
            not send any sensitive info in this field. And do not send the string
            "null".
          type: string
        encoded_data:
          allOf:
          - $ref: '#/components/schemas/MerchantConnectorDetails'
          nullable: true
      required:
      - creds_identifier
      type: object
    MerchantConnectorId:
      properties:
        merchant_id:
          type: string
        merchant_connector_id:
          type: string
      required:
      - merchant_connector_id
      - merchant_id
      type: object
    MerchantConnectorResponse:
      description: Response of creating a new Merchant Connector for the merchant
        account."
      example:
        metadata: "{}"
        merchant_connector_id: mca_5apGeP94tMts6rg3U3kR
        frm_configs: |2

          [{"gateway":"stripe","payment_methods":[{"payment_method":"card","payment_method_types":[{"payment_method_type":"credit","card_networks":["Visa"],"flow":"pre","action":"cancel_txn"},{"payment_method_type":"debit","card_networks":["Visa"],"flow":"pre"}]}]}]
        connector_webhook_details: ""
        connector_name: stripe
        connector_label: stripe_US_travel
        applepay_verified_domains:
        - applepay_verified_domains
        - applepay_verified_domains
        business_label: travel
        test_mode: false
        pm_auth_config: ""
        profile_id: profile_id
        connector_type: null
        business_country: ""
        business_sub_label: chase
        payment_methods_enabled:
        - payment_method: wallet
          payment_method_types:
          - upi_collect
          - upi_intent
          payment_method_issuers:
          - labore magna ipsum
          - aute
          payment_schemes:
          - Discover
          - Discover
          accepted_currencies:
            type: enable_only
            list:
            - USD
            - EUR
          accepted_countries:
            type: disable_only
            list:
            - FR
            - DE
            - IN
          minimum_amount: 1
          maximum_amount: 68607706
          recurring_enabled: true
          installment_payment_enabled: true
        connector_account_details: "{}"
        disabled: false
        status: null
      properties:
        connector_type:
          $ref: '#/components/schemas/ConnectorType'
        connector_name:
          description: Name of the Connector
          example: stripe
          type: string
        connector_label:
          description: "Connector label for a connector, this can serve as a field\
            \ to identify the connector as per business details"
          example: stripe_US_travel
          nullable: true
          type: string
        merchant_connector_id:
          description: Unique ID of the connector
          example: mca_5apGeP94tMts6rg3U3kR
          type: string
        connector_account_details:
          description: "Account details of the Connector. You can specify up to 50\
            \ keys, with key names up to 40 characters long and values up to 500 characters\
            \ long. Useful for storing additional, structured information on an object."
          nullable: true
          type: object
        test_mode:
          default: false
          description: "A boolean value to indicate if the connector is in Test mode.\
            \ By default, its value is false."
          example: false
          nullable: true
          type: boolean
        disabled:
          default: false
          description: "A boolean value to indicate if the connector is disabled.\
            \ By default, its value is false."
          example: false
          nullable: true
          type: boolean
        payment_methods_enabled:
          description: Refers to the Parent Merchant ID if the merchant being created
            is a sub-merchant
          example:
          - payment_method: wallet
            payment_method_types:
            - upi_collect
            - upi_intent
            payment_method_issuers:
            - labore magna ipsum
            - aute
            payment_schemes:
            - Discover
            - Discover
            accepted_currencies:
              type: enable_only
              list:
              - USD
              - EUR
            accepted_countries:
              type: disable_only
              list:
              - FR
              - DE
              - IN
            minimum_amount: 1
            maximum_amount: 68607706
            recurring_enabled: true
            installment_payment_enabled: true
          items:
            $ref: '#/components/schemas/PaymentMethodsEnabled'
          nullable: true
          type: array
        metadata:
          description: "You can specify up to 50 keys, with key names up to 40 characters\
            \ long and values up to 500 characters long. Metadata is useful for storing\
            \ additional, structured information on an object."
          nullable: true
          type: object
        business_country:
          allOf:
          - $ref: '#/components/schemas/CountryAlpha2'
          nullable: true
        business_label:
          description: Business Type of the merchant
          example: travel
          nullable: true
          type: string
        business_sub_label:
          description: Business Sub label of the merchant
          example: chase
          nullable: true
          type: string
        frm_configs:
          description: contains the frm configs for the merchant connector
          example: |2

            [{"gateway":"stripe","payment_methods":[{"payment_method":"card","payment_method_types":[{"payment_method_type":"credit","card_networks":["Visa"],"flow":"pre","action":"cancel_txn"},{"payment_method_type":"debit","card_networks":["Visa"],"flow":"pre"}]}]}]
          items:
            $ref: '#/components/schemas/FrmConfigs'
          nullable: true
          type: array
        connector_webhook_details:
          allOf:
          - $ref: '#/components/schemas/MerchantConnectorWebhookDetails'
          nullable: true
        profile_id:
          description: |-
            The business profile this connector must be created in
            default value from merchant account is taken if not passed
          maxLength: 64
          nullable: true
          type: string
        applepay_verified_domains:
          description: identifier for the verified domains of a particular connector
            account
          items:
            type: string
          nullable: true
          type: array
        pm_auth_config:
          nullable: true
        status:
          $ref: '#/components/schemas/ConnectorStatus'
      required:
      - connector_name
      - connector_type
      - merchant_connector_id
      - status
      type: object
    MerchantConnectorUpdate:
      description: Create a new Merchant Connector for the merchant account. The connector
        could be a payment processor / facilitator / acquirer or specialized services
        like Fraud / Accounting etc."
      example:
        metadata: "{}"
        frm_configs: |2

          [{"gateway":"stripe","payment_methods":[{"payment_method":"card","payment_method_types":[{"payment_method_type":"credit","card_networks":["Visa"],"flow":"pre","action":"cancel_txn"},{"payment_method_type":"debit","card_networks":["Visa"],"flow":"pre"}]}]}]
        test_mode: false
        pm_auth_config: ""
        connector_type: null
        payment_methods_enabled:
        - payment_method: wallet
          payment_method_types:
          - upi_collect
          - upi_intent
          payment_method_issuers:
          - labore magna ipsum
          - aute
          payment_schemes:
          - Discover
          - Discover
          accepted_currencies:
            type: enable_only
            list:
            - USD
            - EUR
          accepted_countries:
            type: disable_only
            list:
            - FR
            - DE
            - IN
          minimum_amount: 1
          maximum_amount: 68607706
          recurring_enabled: true
          installment_payment_enabled: true
        connector_account_details: "{}"
        disabled: false
        connector_webhook_details: ""
        connector_label: connector_label
        status: null
      properties:
        connector_type:
          $ref: '#/components/schemas/ConnectorType'
        connector_label:
          description: "Connector label for a connector, this can serve as a field\
            \ to identify the connector as per business details"
          nullable: true
          type: string
        connector_account_details:
          description: "Account details of the Connector. You can specify up to 50\
            \ keys, with key names up to 40 characters long and values up to 500 characters\
            \ long. Useful for storing additional, structured information on an object."
          nullable: true
          type: object
        test_mode:
          default: false
          description: "A boolean value to indicate if the connector is in Test mode.\
            \ By default, its value is false."
          example: false
          nullable: true
          type: boolean
        disabled:
          default: false
          description: "A boolean value to indicate if the connector is disabled.\
            \ By default, its value is false."
          example: false
          nullable: true
          type: boolean
        payment_methods_enabled:
          description: Refers to the Parent Merchant ID if the merchant being created
            is a sub-merchant
          example:
          - payment_method: wallet
            payment_method_types:
            - upi_collect
            - upi_intent
            payment_method_issuers:
            - labore magna ipsum
            - aute
            payment_schemes:
            - Discover
            - Discover
            accepted_currencies:
              type: enable_only
              list:
              - USD
              - EUR
            accepted_countries:
              type: disable_only
              list:
              - FR
              - DE
              - IN
            minimum_amount: 1
            maximum_amount: 68607706
            recurring_enabled: true
            installment_payment_enabled: true
          items:
            $ref: '#/components/schemas/PaymentMethodsEnabled'
          nullable: true
          type: array
        metadata:
          description: "You can specify up to 50 keys, with key names up to 40 characters\
            \ long and values up to 500 characters long. Metadata is useful for storing\
            \ additional, structured information on an object."
          nullable: true
          type: object
        frm_configs:
          description: contains the frm configs for the merchant connector
          example: |2

            [{"gateway":"stripe","payment_methods":[{"payment_method":"card","payment_method_types":[{"payment_method_type":"credit","card_networks":["Visa"],"flow":"pre","action":"cancel_txn"},{"payment_method_type":"debit","card_networks":["Visa"],"flow":"pre"}]}]}]
          items:
            $ref: '#/components/schemas/FrmConfigs'
          nullable: true
          type: array
        connector_webhook_details:
          allOf:
          - $ref: '#/components/schemas/MerchantConnectorWebhookDetails'
          nullable: true
        pm_auth_config:
          nullable: true
        status:
          $ref: '#/components/schemas/ConnectorStatus'
      required:
      - connector_type
      - status
      type: object
    MerchantConnectorWebhookDetails:
      properties:
        merchant_secret:
          example: "12345678900987654321"
          type: string
        additional_secret:
          example: "12345678900987654321"
          type: string
      required:
      - additional_secret
      - merchant_secret
      type: object
    MerchantDetails:
      properties:
        primary_contact_person:
          description: The merchant's primary contact name
          example: John Doe
          maxLength: 255
          nullable: true
          type: string
        primary_phone:
          description: The merchant's primary phone number
          example: "999999999"
          maxLength: 255
          nullable: true
          type: string
        primary_email:
          description: The merchant's primary email address
          example: johndoe@test.com
          maxLength: 255
          nullable: true
          type: string
        secondary_contact_person:
          description: The merchant's secondary contact name
          example: John Doe2
          maxLength: 255
          nullable: true
          type: string
        secondary_phone:
          description: The merchant's secondary phone number
          example: "999999988"
          maxLength: 255
          nullable: true
          type: string
        secondary_email:
          description: The merchant's secondary email address
          example: johndoe2@test.com
          maxLength: 255
          nullable: true
          type: string
        website:
          description: The business website of the merchant
          example: www.example.com
          maxLength: 255
          nullable: true
          type: string
        about_business:
          description: A brief description about merchant's business
          example: Online Retail with a wide selection of organic products for North
            America
          maxLength: 255
          nullable: true
          type: string
        address:
          allOf:
          - $ref: '#/components/schemas/AddressDetails'
          nullable: true
      type: object
    MobilePayRedirection:
      type: object
    MomoRedirection:
      type: object
    MultibancoBillingDetails:
      properties:
        email:
          example: example@me.com
          type: string
      required:
      - email
      type: object
    MultibancoTransferInstructions:
      properties:
        reference:
          example: "122385736258"
          type: string
        entity:
          example: "12345"
          type: string
      required:
      - entity
      - reference
      type: object
    NextActionCall:
      enum:
      - confirm
      - sync
      type: string
    NextActionData:
      discriminator:
        propertyName: type
      oneOf:
      - $ref: '#/components/schemas/NextActionData_oneOf'
      - $ref: '#/components/schemas/NextActionData_oneOf_1'
      - $ref: '#/components/schemas/NextActionData_oneOf_2'
      - $ref: '#/components/schemas/NextActionData_oneOf_3'
      - $ref: '#/components/schemas/NextActionData_oneOf_4'
      - $ref: '#/components/schemas/NextActionData_oneOf_5'
    NextActionType:
      enum:
      - redirect_to_url
      - display_qr_code
      - invoke_sdk_client
      - trigger_api
      - display_bank_transfer_information
      - display_wait_screen
      type: string
    NoThirdPartySdkSessionResponse:
      properties:
        epoch_timestamp:
          description: Timestamp at which session is requested
          format: int64
          minimum: 0
          type: integer
        expires_at:
          description: Timestamp at which session expires
          format: int64
          minimum: 0
          type: integer
        merchant_session_identifier:
          description: The identifier for the merchant session
          type: string
        nonce:
          description: Apple pay generated unique ID (UUID) value
          type: string
        merchant_identifier:
          description: The identifier for the merchant
          type: string
        domain_name:
          description: The domain name of the merchant which is registered in Apple
            Pay
          type: string
        display_name:
          description: The name to be displayed on Apple Pay button
          type: string
        signature:
          description: A string which represents the properties of a payment
          type: string
        operational_analytics_identifier:
          description: The identifier for the operational analytics
          type: string
        retries:
          description: The number of retries to get the session response
          format: int32
          minimum: 0
          type: integer
        psp_id:
          description: The identifier for the connector transaction
          type: string
      required:
      - display_name
      - domain_name
      - epoch_timestamp
      - expires_at
      - merchant_identifier
      - merchant_session_identifier
      - nonce
      - operational_analytics_identifier
      - psp_id
      - retries
      - signature
      type: object
    NoonData:
      properties:
        order_category:
          description: "Information about the order category that merchant wants to\
            \ specify at connector level. (e.g. In Noon Payments it can take values\
            \ like \"pay\", \"food\", or any other custom string set by the merchant\
            \ in Noon's Dashboard)"
          nullable: true
          type: string
      type: object
    OnlineMandate:
      properties:
        ip_address:
          description: Ip address of the customer machine from which the mandate was
            created
          example: 123.32.25.123
          type: string
        user_agent:
          description: The user-agent of the customer's browser
          type: string
      required:
      - ip_address
      - user_agent
      type: object
    OrderDetails:
      properties:
        product_name:
          description: Name of the product that is being purchased
          example: shirt
          maxLength: 255
          type: string
        quantity:
          description: The quantity of the product to be purchased
          example: 1
          format: int32
          minimum: 0
          type: integer
        requires_shipping:
          nullable: true
          type: boolean
        product_img_link:
          description: The image URL of the product
          nullable: true
          type: string
        product_id:
          description: ID of the product that is being purchased
          nullable: true
          type: string
        category:
          description: Category of the product that is being purchased
          nullable: true
          type: string
        brand:
          description: Brand of the product that is being purchased
          nullable: true
          type: string
        product_type:
          allOf:
          - $ref: '#/components/schemas/ProductType'
          nullable: true
      required:
      - product_name
      - quantity
      type: object
    OrderDetailsWithAmount:
      properties:
        product_name:
          description: Name of the product that is being purchased
          example: shirt
          maxLength: 255
          type: string
        quantity:
          description: The quantity of the product to be purchased
          example: 1
          format: int32
          minimum: 0
          type: integer
        amount:
          description: the amount per quantity of product
          format: int64
          type: integer
        requires_shipping:
          nullable: true
          type: boolean
        product_img_link:
          description: The image URL of the product
          nullable: true
          type: string
        product_id:
          description: ID of the product that is being purchased
          nullable: true
          type: string
        category:
          description: Category of the product that is being purchased
          nullable: true
          type: string
        brand:
          description: Brand of the product that is being purchased
          nullable: true
          type: string
        product_type:
          allOf:
          - $ref: '#/components/schemas/ProductType'
          nullable: true
      required:
      - amount
      - product_name
      - quantity
      type: object
    OutgoingWebhook:
      properties:
        merchant_id:
          description: The merchant id of the merchant
          type: string
        event_id:
          description: The unique event id for each webhook
          type: string
        event_type:
          $ref: '#/components/schemas/EventType'
        content:
          $ref: '#/components/schemas/OutgoingWebhookContent'
        timestamp:
          description: The time at which webhook was sent
          format: date-time
          type: string
      required:
      - content
      - event_id
      - event_type
      - merchant_id
      type: object
    OutgoingWebhookContent:
      discriminator:
        propertyName: type
      oneOf:
      - $ref: '#/components/schemas/OutgoingWebhookContent_oneOf'
      - $ref: '#/components/schemas/OutgoingWebhookContent_oneOf_1'
      - $ref: '#/components/schemas/OutgoingWebhookContent_oneOf_2'
      - $ref: '#/components/schemas/OutgoingWebhookContent_oneOf_3'
    PayLaterData:
      oneOf:
      - $ref: '#/components/schemas/PayLaterData_oneOf'
      - $ref: '#/components/schemas/PayLaterData_oneOf_1'
      - $ref: '#/components/schemas/PayLaterData_oneOf_2'
      - $ref: '#/components/schemas/PayLaterData_oneOf_3'
      - $ref: '#/components/schemas/PayLaterData_oneOf_4'
      - $ref: '#/components/schemas/PayLaterData_oneOf_5'
      - $ref: '#/components/schemas/PayLaterData_oneOf_6'
      - $ref: '#/components/schemas/PayLaterData_oneOf_7'
    PayPalWalletData:
      properties:
        token:
          description: Token generated for the Apple pay
          type: string
      required:
      - token
      type: object
    PaymentAttemptResponse:
      example:
        error_message: error_message
        capture_method: ""
        payment_method_type: ""
        amount: 6
        connector_metadata: ""
        reference_id: 993672945374576J
        connector_transaction_id: connector_transaction_id
        payment_token: payment_token
        mandate_id: mandate_id
        cancellation_reason: cancellation_reason
        unified_message: unified_message
        authentication_type: ""
        unified_code: unified_code
        connector: connector
        attempt_id: attempt_id
        currency: ""
        error_code: error_code
        payment_experience: ""
        payment_method: ""
        status: null
      properties:
        attempt_id:
          description: Unique identifier for the attempt
          type: string
        status:
          $ref: '#/components/schemas/AttemptStatus'
        amount:
          description: "The payment attempt amount. Amount for the payment in lowest\
            \ denomination of the currency. (i.e) in cents for USD denomination, in\
            \ paisa for INR denomination etc.,"
          format: int64
          type: integer
        currency:
          allOf:
          - $ref: '#/components/schemas/Currency'
          nullable: true
        connector:
          description: The connector used for the payment
          nullable: true
          type: string
        error_message:
          description: If there was an error while calling the connector the error
            message is received here
          nullable: true
          type: string
        payment_method:
          allOf:
          - $ref: '#/components/schemas/PaymentMethod'
          nullable: true
        connector_transaction_id:
          description: A unique identifier for a payment provided by the connector
          nullable: true
          type: string
        capture_method:
          allOf:
          - $ref: '#/components/schemas/CaptureMethod'
          nullable: true
        authentication_type:
          allOf:
          - $ref: '#/components/schemas/AuthenticationType'
          default: three_ds
          nullable: true
        cancellation_reason:
          description: If the payment was cancelled the reason provided here
          nullable: true
          type: string
        mandate_id:
          description: "A unique identifier to link the payment to a mandate, can\
            \ be use instead of payment_method_data"
          nullable: true
          type: string
        error_code:
          description: If there was an error while calling the connectors the code
            is received here
          nullable: true
          type: string
        payment_token:
          description: Provide a reference to a stored payment method
          nullable: true
          type: string
        connector_metadata:
          description: additional data related to some connectors
          nullable: true
        payment_experience:
          allOf:
          - $ref: '#/components/schemas/PaymentExperience'
          nullable: true
        payment_method_type:
          allOf:
          - $ref: '#/components/schemas/PaymentMethodType'
          nullable: true
        reference_id:
          description: reference to the payment at connector side
          example: 993672945374576J
          nullable: true
          type: string
        unified_code:
          description: error code unified across the connectors is received here if
            there was an error while calling connector
          nullable: true
          type: string
        unified_message:
          description: error message unified across the connectors is received here
            if there was an error while calling connector
          nullable: true
          type: string
      required:
      - amount
      - attempt_id
      - status
      type: object
    PaymentCreatePaymentLinkConfig:
      allOf:
      - allOf:
        - $ref: '#/components/schemas/PaymentLinkConfigRequest'
        nullable: true
      - type: object
    PaymentExperience:
      enum:
      - redirect_to_url
      - invoke_sdk_client
      - display_qr_code
      - one_click
      - link_wallet
      - invoke_payment_app
      - display_wait_screen
      type: string
    PaymentIdType:
      oneOf:
      - $ref: '#/components/schemas/PaymentIdType_oneOf'
      - $ref: '#/components/schemas/PaymentIdType_oneOf_1'
      - $ref: '#/components/schemas/PaymentIdType_oneOf_2'
      - $ref: '#/components/schemas/PaymentIdType_oneOf_3'
    PaymentLinkConfig:
      properties:
        theme:
          description: custom theme for the payment link
          type: string
        logo:
          description: merchant display logo
          type: string
        seller_name:
          description: Custom merchant name for payment link
          type: string
        sdk_layout:
          description: Custom layout for sdk
          type: string
      required:
      - logo
      - sdk_layout
      - seller_name
      - theme
      type: object
    PaymentLinkConfigRequest:
      properties:
        theme:
          description: custom theme for the payment link
          example: '#4E6ADD'
          maxLength: 255
          nullable: true
          type: string
        logo:
          description: merchant display logo
          example: https://i.pinimg.com/736x/4d/83/5c/4d835ca8aafbbb15f84d07d926fda473.jpg
          maxLength: 255
          nullable: true
          type: string
        seller_name:
          description: Custom merchant name for payment link
          example: hyperswitch
          maxLength: 255
          nullable: true
          type: string
        sdk_layout:
          description: Custom layout for sdk
          example: accordion
          maxLength: 255
          nullable: true
          type: string
      type: object
    PaymentLinkInitiateRequest:
      properties:
        merchant_id:
          type: string
        payment_id:
          type: string
      required:
      - merchant_id
      - payment_id
      type: object
    PaymentLinkResponse:
      properties:
        link:
          type: string
        payment_link_id:
          type: string
      required:
      - link
      - payment_link_id
      type: object
    PaymentLinkStatus:
      enum:
      - active
      - expired
      type: string
    PaymentListConstraints:
      properties:
        customer_id:
          description: The identifier for customer
          example: cus_meowuwunwiuwiwqw
          nullable: true
          type: string
        starting_after:
          description: "A cursor for use in pagination, fetch the next list after\
            \ some object"
          example: pay_fafa124123
          nullable: true
          type: string
        ending_before:
          description: "A cursor for use in pagination, fetch the previous list before\
            \ some object"
          example: pay_fafa124123
          nullable: true
          type: string
        limit:
          default: 10
          description: limit on the number of objects to return
          format: int32
          maximum: 100
          minimum: 0
          type: integer
        created:
          description: The time at which payment is created
          example: 2022-09-10T10:11:12Z
          format: date-time
          nullable: true
          type: string
        created.lt:
          description: Time less than the payment created time
          example: 2022-09-10T10:11:12Z
          format: date-time
          nullable: true
          type: string
        created.gt:
          description: Time greater than the payment created time
          example: 2022-09-10T10:11:12Z
          format: date-time
          nullable: true
          type: string
        created.lte:
          description: Time less than or equals to the payment created time
          example: 2022-09-10T10:11:12Z
          format: date-time
          nullable: true
          type: string
        created.gte:
          description: Time greater than or equals to the payment created time
          example: 2022-09-10T10:11:12Z
          format: date-time
          nullable: true
          type: string
      type: object
    PaymentListResponse:
      properties:
        size:
          description: The number of payments included in the list
          minimum: 0
          type: integer
        data:
          items:
            $ref: '#/components/schemas/PaymentsResponse'
          type: array
      required:
      - data
      - size
      type: object
    PaymentMethod:
      enum:
      - card
      - card_redirect
      - pay_later
      - wallet
      - bank_redirect
      - bank_transfer
      - crypto
      - bank_debit
      - reward
      - upi
      - voucher
      - gift_card
      type: string
    PaymentMethodCreate:
      example:
        payment_method_type: ""
        payment_method_issuer: Citibank
        metadata: "{}"
        bank_transfer: ""
        card_network: Visa
        payment_method_issuer_code: ""
        customer_id: cus_meowerunwiuwiwqw
        payment_method: null
        card: ""
      properties:
        payment_method:
          $ref: '#/components/schemas/PaymentMethodType'
        payment_method_type:
          allOf:
          - $ref: '#/components/schemas/PaymentMethodType'
          nullable: true
        payment_method_issuer:
          description: The name of the bank/ provider issuing the payment method to
            the end user
          example: Citibank
          nullable: true
          type: string
        payment_method_issuer_code:
          allOf:
          - $ref: '#/components/schemas/PaymentMethodIssuerCode'
          nullable: true
        card:
          allOf:
          - $ref: '#/components/schemas/CardDetail'
          nullable: true
        metadata:
          description: "You can specify up to 50 keys, with key names up to 40 characters\
            \ long and values up to 500 characters long. Metadata is useful for storing\
            \ additional, structured information on an object."
          nullable: true
          type: object
        customer_id:
          description: The unique identifier of the customer.
          example: cus_meowerunwiuwiwqw
          nullable: true
          type: string
        card_network:
          description: The card network
          example: Visa
          nullable: true
          type: string
        bank_transfer:
          allOf:
          - $ref: '#/components/schemas/Bank'
          nullable: true
      required:
      - payment_method
      type: object
    PaymentMethodData:
      oneOf:
      - $ref: '#/components/schemas/PaymentMethodData_oneOf'
      - $ref: '#/components/schemas/PaymentMethodData_oneOf_1'
      - $ref: '#/components/schemas/PaymentMethodData_oneOf_2'
      - $ref: '#/components/schemas/PaymentMethodData_oneOf_3'
      - $ref: '#/components/schemas/PaymentMethodData_oneOf_4'
      - $ref: '#/components/schemas/PaymentMethodData_oneOf_5'
      - $ref: '#/components/schemas/PaymentMethodData_oneOf_6'
      - $ref: '#/components/schemas/PaymentMethodData_oneOf_7'
      - enum:
        - mandate_payment
        type: string
      - enum:
        - reward
        type: string
      - $ref: '#/components/schemas/PaymentMethodData_oneOf_8'
      - $ref: '#/components/schemas/PaymentMethodData_oneOf_9'
      - $ref: '#/components/schemas/PaymentMethodData_oneOf_10'
      - $ref: '#/components/schemas/PaymentMethodData_oneOf_11'
    PaymentMethodDeleteResponse:
      example:
        payment_method_id: card_rGK4Vi5iSW70MY7J2mIy
        deleted: true
      properties:
        payment_method_id:
          description: The unique identifier of the Payment method
          example: card_rGK4Vi5iSW70MY7J2mIy
          type: string
        deleted:
          description: Whether payment method was deleted or not
          example: true
          type: boolean
      required:
      - deleted
      - payment_method_id
      type: object
    PaymentMethodIssuerCode:
      enum:
      - jp_hdfc
      - jp_icici
      - jp_googlepay
      - jp_applepay
      - jp_phonepay
      - jp_wechat
      - jp_sofort
      - jp_giropay
      - jp_sepa
      - jp_bacs
      type: string
    PaymentMethodList:
      properties:
        payment_method:
          $ref: '#/components/schemas/PaymentMethod'
        payment_method_types:
          description: This is a sub-category of payment method.
          example:
          - credit
          items:
            $ref: '#/components/schemas/PaymentMethodType'
          nullable: true
          type: array
      required:
      - payment_method
      type: object
    PaymentMethodListResponse:
      example:
        payment_methods:
        - payment_method: wallet
          payment_experience: null
          payment_method_issuers:
          - labore magna ipsum
          - aute
        show_surcharge_breakup_screen: true
        payment_type: ""
        merchant_name: merchant_name
        redirect_url: https://www.google.com
        mandate_payment:
          single_use:
            end_date: 2023-09-10T23:59:59Z
            amount: 6540
            metadata: "{}"
            currency: null
            start_date: 2022-09-10T00:00:00Z
      properties:
        redirect_url:
          description: Redirect URL of the merchant
          example: https://www.google.com
          nullable: true
          type: string
        payment_methods:
          description: Information about the payment method
          example:
          - payment_method: wallet
            payment_experience: null
            payment_method_issuers:
            - labore magna ipsum
            - aute
          items:
            $ref: '#/components/schemas/PaymentMethodList'
          type: array
        mandate_payment:
          $ref: '#/components/schemas/MandateType'
        merchant_name:
          nullable: true
          type: string
        show_surcharge_breakup_screen:
          description: flag to indicate if surcharge and tax breakup screen should
            be shown or not
          type: boolean
        payment_type:
          allOf:
          - $ref: '#/components/schemas/PaymentType'
          nullable: true
      required:
      - mandate_payment
      - payment_methods
      - show_surcharge_breakup_screen
      type: object
    PaymentMethodResponse:
      example:
        payment_method_type: ""
        payment_method_id: card_rGK4Vi5iSW70MY7J2mIy
        metadata: "{}"
        bank_transfer: ""
        installment_payment_enabled: true
        created: 2023-01-18T11:04:09.922Z
        merchant_id: merchant_1671528864
        customer_id: cus_meowerunwiuwiwqw
        payment_experience:
        - redirect_to_url
        payment_method: null
        card: ""
        recurring_enabled: true
      properties:
        merchant_id:
          description: Unique identifier for a merchant
          example: merchant_1671528864
          type: string
        customer_id:
          description: The unique identifier of the customer.
          example: cus_meowerunwiuwiwqw
          nullable: true
          type: string
        payment_method_id:
          description: The unique identifier of the Payment method
          example: card_rGK4Vi5iSW70MY7J2mIy
          type: string
        payment_method:
          $ref: '#/components/schemas/PaymentMethodType'
        payment_method_type:
          allOf:
          - $ref: '#/components/schemas/PaymentMethodType'
          nullable: true
        card:
          allOf:
          - $ref: '#/components/schemas/CardDetailFromLocker'
          nullable: true
        recurring_enabled:
          description: Indicates whether the payment method is eligible for recurring
            payments
          example: true
          type: boolean
        installment_payment_enabled:
          description: Indicates whether the payment method is eligible for installment
            payments
          example: true
          type: boolean
        payment_experience:
          description: Type of payment experience enabled with the connector
          example:
          - redirect_to_url
          items:
            $ref: '#/components/schemas/PaymentExperience'
          nullable: true
          type: array
        metadata:
          description: "You can specify up to 50 keys, with key names up to 40 characters\
            \ long and values up to 500 characters long. Metadata is useful for storing\
            \ additional, structured information on an object."
          nullable: true
          type: object
        created:
          description: A timestamp (ISO 8601 code) that determines when the customer
            was created
          example: 2023-01-18T11:04:09.922Z
          format: date-time
          nullable: true
          type: string
        bank_transfer:
          allOf:
          - $ref: '#/components/schemas/Bank'
          nullable: true
      required:
      - installment_payment_enabled
      - merchant_id
      - payment_method
      - payment_method_id
      - recurring_enabled
      type: object
    PaymentMethodType:
      enum:
      - ach
      - affirm
      - afterpay_clearpay
      - alfamart
      - ali_pay
      - ali_pay_hk
      - alma
      - apple_pay
      - atome
      - bacs
      - bancontact_card
      - becs
      - benefit
      - bizum
      - blik
      - boleto
      - bca_bank_transfer
      - bni_va
      - bri_va
      - card_redirect
      - cimb_va
      - classic
      - credit
      - crypto_currency
      - cashapp
      - dana
      - danamon_va
      - debit
      - efecty
      - eps
      - evoucher
      - giropay
      - givex
      - google_pay
      - go_pay
      - gcash
      - ideal
      - interac
      - indomaret
      - klarna
      - kakao_pay
      - mandiri_va
      - knet
      - mb_way
      - mobile_pay
      - momo
      - momo_atm
      - multibanco
      - online_banking_thailand
      - online_banking_czech_republic
      - online_banking_finland
      - online_banking_fpx
      - online_banking_poland
      - online_banking_slovakia
      - oxxo
      - pago_efectivo
      - permata_bank_transfer
      - open_banking_uk
      - pay_bright
      - paypal
      - pix
      - pay_safe_card
      - przelewy24
      - pse
      - red_compra
      - red_pagos
      - samsung_pay
      - sepa
      - sofort
      - swish
      - touch_n_go
      - trustly
      - twint
      - upi_collect
      - vipps
      - walley
      - we_chat_pay
      - seven_eleven
      - lawson
      - mini_stop
      - family_mart
      - seicomart
      - pay_easy
      type: string
    RecurringDetails:
      properties:
        type:
          type: string
        data:
          type: string
      type: object
    PaymentMethodUpdate:
      example:
        metadata: "{}"
        bank_transfer: ""
        card_network: ""
        card: ""
      properties:
        card:
          allOf:
          - $ref: '#/components/schemas/CardDetail'
          nullable: true
        card_network:
          allOf:
          - $ref: '#/components/schemas/CardNetwork'
          nullable: true
        bank_transfer:
          allOf:
          - $ref: '#/components/schemas/Bank'
          nullable: true
        metadata:
          description: "You can specify up to 50 keys, with key names up to 40 characters\
            \ long and values up to 500 characters long. Metadata is useful for storing\
            \ additional, structured information on an object."
          nullable: true
          type: object
      type: object
    PaymentMethodsEnabled:
      description: Details of all the payment methods enabled for the connector for
        the given merchant account
      properties:
        payment_method:
          $ref: '#/components/schemas/PaymentMethod'
        payment_method_types:
          description: Subtype of payment method
          example:
          - credit
          items:
            $ref: '#/components/schemas/RequestPaymentMethodTypes'
          nullable: true
          type: array
      required:
      - payment_method
      type: object
    PaymentRetrieveBody:
      example:
        expand_attempts: true
        force_sync: true
        merchant_id: merchant_id
        client_secret: client_secret
        expand_captures: true
      properties:
        merchant_id:
          description: The identifier for the Merchant Account.
          nullable: true
          type: string
        force_sync:
          description: Decider to enable or disable the connector call for retrieve
            request
          nullable: true
          type: boolean
        client_secret:
          description: "This is a token which expires after 15 minutes, used from\
            \ the client to authenticate and create sessions from the SDK"
          nullable: true
          type: string
        expand_captures:
          description: If enabled provides list of captures linked to latest attempt
          nullable: true
          type: boolean
        expand_attempts:
          description: If enabled provides list of attempts linked to payment intent
          nullable: true
          type: boolean
      type: object
    PaymentType:
      enum:
      - normal
      - new_mandate
      - setup_mandate
      - recurring_mandate
      type: string
    PaymentsCancelRequest:
      example:
        cancellation_reason: cancellation_reason
        merchant_connector_details:
          creds_identifier: creds_identifier
          encoded_data: ""
      properties:
        cancellation_reason:
          description: The reason for the payment cancel
          nullable: true
          type: string
        merchant_connector_details:
          $ref: '#/components/schemas/MerchantConnectorDetailsWrap'
      required:
      - merchant_connector_details
      type: object
    PaymentsCaptureRequest:
      example:
        statement_descriptor_prefix: statement_descriptor_prefix
        refund_uncaptured_amount: true
        merchant_id: merchant_id
        statement_descriptor_suffix: statement_descriptor_suffix
        amount_to_capture: 0
        merchant_connector_details: ""
      properties:
        merchant_id:
          description: The unique identifier for the merchant
          nullable: true
          type: string
        amount_to_capture:
          description: The Amount to be captured/ debited from the user's payment
            method.
          format: int64
          nullable: true
          type: integer
        refund_uncaptured_amount:
          description: Decider to refund the uncaptured amount
          nullable: true
          type: boolean
        statement_descriptor_suffix:
          description: Provides information about a card payment that customers see
            on their statements.
          nullable: true
          type: string
        statement_descriptor_prefix:
          description: Concatenated with the statement descriptor suffix that’s set
            on the account to form the complete statement descriptor.
          nullable: true
          type: string
        merchant_connector_details:
          allOf:
          - $ref: '#/components/schemas/MerchantConnectorDetailsWrap'
          nullable: true
      type: object
    PaymentsCreateRequest:
      example:
        payment_method_type: ""
        metadata: "{}"
        statement_descriptor_name: Hyperswitch Router
        retry_action: ""
        authentication_type: ""
        billing: ""
        shipping: ""
        browser_info: "{}"
        payment_method_data: ""
        client_secret: pay_U42c409qyHwOkWo3vK60_secret_el9ksDkiB8hi6j9N78yo
        payment_method: ""
        capture_method: ""
        card_cvc: card_cvc
        capture_on: 2022-09-10T10:11:12Z
        payment_type: ""
        connector:
        - stripe
        - adyen
        phone: "3141592653"
        profile_id: profile_id
        name: John Test
        business_sub_label: business_sub_label
        payment_link_config: ""
        connector_metadata: ""
        payment_token: 187282ab-40ef-47a9-9206-5099ba31e432
        description: It's my first payment request
        mandate_id: mandate_iwer89rnjef349dni3
        merchant_id: merchant_1668273825
        order_details: |-
          [{
                  "product_name": "gillete creme",
                  "quantity": 15,
                  "amount" : 900
                  "product_img_link" : "https://dummy-img-link.com"
              }]
        surcharge_details: ""
        allowed_payment_method_types:
        - null
        - null
        payment_link: true
        routing: ""
        payment_id: pay_mbabizu24mvu3mela5njyhpit4
        off_session: true
        return_url: https://hyperswitch.io
        currency: ""
        amount_to_capture: 6540
        payment_experience: ""
        request_incremental_authorization: true
        email: johntest@test.com
        amount: 6540
        phone_country_code: "+1"
        setup_future_usage: ""
        confirm: true
        business_label: food
        feature_metadata: ""
        business_country: ""
        frm_metadata: ""
        statement_descriptor_suffix: Payment for shoes purchase
        customer_id: cus_y3oqhf46pyzuxjbcn2giaqnb44
        mandate_data: ""
        merchant_connector_details: ""
        session_expiry: 900
        customer: ""
      properties:
        payment_id:
          description: |-
            Unique identifier for the payment. This ensures idempotency for multiple payments
            that have been done by a single merchant. This field is auto generated and is returned in the API response.
          example: pay_mbabizu24mvu3mela5njyhpit4
          maxLength: 30
          minLength: 30
          nullable: true
          type: string
        merchant_id:
          description: |-
            This is an identifier for the merchant account. This is inferred from the API key
            provided during the request
          example: merchant_1668273825
          maxLength: 255
          nullable: true
          type: string
        amount:
          description: "The payment amount. Amount for the payment in lowest denomination\
            \ of the currency. (i.e) in cents for USD denomination, in paisa for INR\
            \ denomination etc.,"
          example: 6540
          format: int64
          minimum: 0
          nullable: true
          type: integer
        routing:
          allOf:
          - $ref: '#/components/schemas/RoutingAlgorithm'
          nullable: true
        connector:
          description: This allows the merchant to manually select a connector with
            which the payment can go through
          example:
          - stripe
          - adyen
          items:
            $ref: '#/components/schemas/Connector'
          nullable: true
          type: array
        currency:
          allOf:
          - $ref: '#/components/schemas/Currency'
          nullable: true
        capture_method:
          allOf:
          - $ref: '#/components/schemas/CaptureMethod'
          nullable: true
        amount_to_capture:
          description: |-
            The Amount to be captured/ debited from the users payment method. It shall be in lowest denomination of the currency. (i.e) in cents for USD denomination, in paisa for INR denomination etc.,
            If not provided, the default amount_to_capture will be the payment amount.
          example: 6540
          format: int64
          nullable: true
          type: integer
        capture_on:
          description: |-
            A timestamp (ISO 8601 code) that determines when the payment should be captured.
            Providing this field will automatically set `capture` to true
          example: 2022-09-10T10:11:12Z
          format: date-time
          nullable: true
          type: string
        confirm:
          default: false
          description: Whether to confirm the payment (if applicable)
          example: true
          nullable: true
          type: boolean
        customer:
          allOf:
          - $ref: '#/components/schemas/CustomerDetails'
          nullable: true
        customer_id:
          description: |-
            The identifier for the customer object.
            This field will be deprecated soon, use the customer object instead
          example: cus_y3oqhf46pyzuxjbcn2giaqnb44
          maxLength: 255
          nullable: true
          type: string
        email:
          description: |-
            The customer's email address
            This field will be deprecated soon, use the customer object instead
          example: johntest@test.com
          maxLength: 255
          nullable: true
          type: string
        name:
          description: |-
            description: The customer's name
            This field will be deprecated soon, use the customer object instead
          example: John Test
          maxLength: 255
          nullable: true
          type: string
        phone:
          description: |-
            The customer's phone number
            This field will be deprecated soon, use the customer object instead
          example: "3141592653"
          maxLength: 255
          nullable: true
          type: string
        phone_country_code:
          description: |-
            The country code for the customer phone number
            This field will be deprecated soon, use the customer object instead
          example: "+1"
          maxLength: 255
          nullable: true
          type: string
        off_session:
          description: "Set to true to indicate that the customer is not in your checkout\
            \ flow during this payment, and therefore is unable to authenticate. This\
            \ parameter is intended for scenarios where you collect card details and\
            \ charge them later. This parameter can only be used with `confirm: true`."
          example: true
          nullable: true
          type: boolean
        description:
          description: A description of the payment
          example: It's my first payment request
          nullable: true
          type: string
        return_url:
          description: The URL to redirect after the completion of the operation
          example: https://hyperswitch.io
          nullable: true
          type: string
        setup_future_usage:
          allOf:
          - $ref: '#/components/schemas/FutureUsage'
          nullable: true
        authentication_type:
          allOf:
          - $ref: '#/components/schemas/AuthenticationType'
          default: three_ds
          nullable: true
        payment_method_data:
          allOf:
          - $ref: '#/components/schemas/PaymentMethodData'
          nullable: true
        payment_method:
          allOf:
          - $ref: '#/components/schemas/PaymentMethod'
          nullable: true
        payment_token:
          description: Provide a reference to a stored payment method
          example: 187282ab-40ef-47a9-9206-5099ba31e432
          nullable: true
          type: string
        recurring_details:
            allOf:
                - $ref: '#/components/schemas/RecurringDetails'
            nullable: true
        card_cvc:
          deprecated: true
          description: |-
            This is used when payment is to be confirmed and the card is not saved.
            This field will be deprecated soon, use the CardToken object instead
          nullable: true
          type: string
        shipping:
          allOf:
          - $ref: '#/components/schemas/Address'
          nullable: true
        billing:
          allOf:
          - $ref: '#/components/schemas/Address'
          nullable: true
        statement_descriptor_name:
          description: "For non-card charges, you can use this value as the complete\
            \ description that appears on your customers’ statements. Must contain\
            \ at least one letter, maximum 22 characters."
          example: Hyperswitch Router
          maxLength: 255
          nullable: true
          type: string
        statement_descriptor_suffix:
          description: Provides information about a card payment that customers see
            on their statements. Concatenated with the prefix (shortened descriptor)
            or statement descriptor that’s set on the account to form the complete
            statement descriptor. Maximum 22 characters for the concatenated descriptor.
          example: Payment for shoes purchase
          maxLength: 255
          nullable: true
          type: string
        order_details:
          description: "Information about the product , quantity and amount for connectors.\
            \ (e.g. Klarna)"
          example: |-
            [{
                    "product_name": "gillete creme",
                    "quantity": 15,
                    "amount" : 900
                    "product_img_link" : "https://dummy-img-link.com"
                }]
          items:
            $ref: '#/components/schemas/OrderDetailsWithAmount'
          nullable: true
          type: array
        client_secret:
          description: It's a token used for client side verification.
          example: pay_U42c409qyHwOkWo3vK60_secret_el9ksDkiB8hi6j9N78yo
          nullable: true
          type: string
        mandate_data:
          allOf:
          - $ref: '#/components/schemas/MandateData'
          nullable: true
        mandate_id:
          description: "A unique identifier to link the payment to a mandate, can\
            \ be use instead of payment_method_data"
          example: mandate_iwer89rnjef349dni3
          maxLength: 255
          nullable: true
          type: string
        browser_info:
          description: Additional details required by 3DS 2.0
          nullable: true
          type: object
        payment_experience:
          allOf:
          - $ref: '#/components/schemas/PaymentExperience'
          nullable: true
        payment_method_type:
          allOf:
          - $ref: '#/components/schemas/PaymentMethodType'
          nullable: true
        business_country:
          allOf:
          - $ref: '#/components/schemas/CountryAlpha2'
          nullable: true
        business_label:
          description: Business label of the merchant for this payment
          example: food
          nullable: true
          type: string
        merchant_connector_details:
          allOf:
          - $ref: '#/components/schemas/MerchantConnectorDetailsWrap'
          nullable: true
        allowed_payment_method_types:
          description: Allowed Payment Method Types for a given PaymentIntent
          items:
            $ref: '#/components/schemas/PaymentMethodType'
          nullable: true
          type: array
        business_sub_label:
          description: Business sub label for the payment
          nullable: true
          type: string
        retry_action:
          allOf:
          - $ref: '#/components/schemas/RetryAction'
          nullable: true
        metadata:
          description: "You can specify up to 50 keys, with key names up to 40 characters\
            \ long and values up to 500 characters long. Metadata is useful for storing\
            \ additional, structured information on an object."
          nullable: true
          type: object
        connector_metadata:
          allOf:
          - $ref: '#/components/schemas/ConnectorMetadata'
          nullable: true
        feature_metadata:
          allOf:
          - $ref: '#/components/schemas/FeatureMetadata'
          nullable: true
        payment_link:
          default: false
          description: Whether to get the payment link (if applicable)
          example: true
          nullable: true
          type: boolean
        payment_link_config:
          allOf:
          - $ref: '#/components/schemas/PaymentCreatePaymentLinkConfig'
          nullable: true
        profile_id:
          description: |-
            The business profile to use for this payment, if not passed the default business profile
            associated with the merchant account will be used.
          nullable: true
          type: string
        surcharge_details:
          allOf:
          - $ref: '#/components/schemas/RequestSurchargeDetails'
          nullable: true
        payment_type:
          allOf:
          - $ref: '#/components/schemas/PaymentType'
          nullable: true
        request_incremental_authorization:
          description: Request for an incremental authorization
          nullable: true
          type: boolean
        session_expiry:
          description: |-
            Will be used to expire client secret after certain amount of time to be supplied in seconds
            (900) for 15 mins
          example: 900
          format: int32
          minimum: 0
          nullable: true
          type: integer
        frm_metadata:
          description: additional data related to some frm connectors
          nullable: true
      required:
      - amount
      - currency
      type: object
    PaymentsRequest:
      example:
        payment_method_type: ""
        metadata: "{}"
        statement_descriptor_name: Hyperswitch Router
        retry_action: ""
        authentication_type: ""
        billing: ""
        shipping: ""
        browser_info: "{}"
        payment_method_data: ""
        client_secret: pay_U42c409qyHwOkWo3vK60_secret_el9ksDkiB8hi6j9N78yo
        payment_method: ""
        capture_method: ""
        card_cvc: card_cvc
        capture_on: 2022-09-10T10:11:12Z
        payment_type: ""
        connector:
        - stripe
        - adyen
        phone: "3141592653"
        profile_id: profile_id
        name: John Test
        business_sub_label: business_sub_label
        payment_link_config: ""
        connector_metadata: ""
        payment_token: 187282ab-40ef-47a9-9206-5099ba31e432
        description: It's my first payment request
        mandate_id: mandate_iwer89rnjef349dni3
        merchant_id: merchant_1668273825
        order_details: |-
          [{
                  "product_name": "gillete creme",
                  "quantity": 15,
                  "amount" : 900
                  "product_img_link" : "https://dummy-img-link.com"
              }]
        surcharge_details: ""
        allowed_payment_method_types:
        - null
        - null
        payment_link: true
        routing: ""
        payment_id: pay_mbabizu24mvu3mela5njyhpit4
        off_session: true
        return_url: https://hyperswitch.io
        currency: ""
        amount_to_capture: 6540
        payment_experience: ""
        request_incremental_authorization: true
        email: johntest@test.com
        amount: 6540
        phone_country_code: "+1"
        setup_future_usage: ""
        confirm: true
        business_label: food
        feature_metadata: ""
        business_country: ""
        frm_metadata: ""
        statement_descriptor_suffix: Payment for shoes purchase
        customer_id: cus_y3oqhf46pyzuxjbcn2giaqnb44
        mandate_data: ""
        merchant_connector_details: ""
        session_expiry: 900
        customer: ""
      properties:
        payment_id:
          description: |-
            Unique identifier for the payment. This ensures idempotency for multiple payments
            that have been done by a single merchant. This field is auto generated and is returned in the API response.
          example: pay_mbabizu24mvu3mela5njyhpit4
          maxLength: 30
          minLength: 30
          nullable: true
          type: string
        merchant_id:
          description: |-
            This is an identifier for the merchant account. This is inferred from the API key
            provided during the request
          example: merchant_1668273825
          maxLength: 255
          nullable: true
          type: string
        amount:
          description: "The payment amount. Amount for the payment in lowest denomination\
            \ of the currency. (i.e) in cents for USD denomination, in paisa for INR\
            \ denomination etc.,"
          example: 6540
          format: int64
          minimum: 0
          nullable: true
          type: integer
        routing:
          allOf:
          - $ref: '#/components/schemas/RoutingAlgorithm'
          nullable: true
        connector:
          description: This allows the merchant to manually select a connector with
            which the payment can go through
          example:
          - stripe
          - adyen
          items:
            $ref: '#/components/schemas/Connector'
          nullable: true
          type: array
        currency:
          allOf:
          - $ref: '#/components/schemas/Currency'
          nullable: true
        capture_method:
          allOf:
          - $ref: '#/components/schemas/CaptureMethod'
          nullable: true
        amount_to_capture:
          description: |-
            The Amount to be captured/ debited from the users payment method. It shall be in lowest denomination of the currency. (i.e) in cents for USD denomination, in paisa for INR denomination etc.,
            If not provided, the default amount_to_capture will be the payment amount.
          example: 6540
          format: int64
          nullable: true
          type: integer
        capture_on:
          description: |-
            A timestamp (ISO 8601 code) that determines when the payment should be captured.
            Providing this field will automatically set `capture` to true
          example: 2022-09-10T10:11:12Z
          format: date-time
          nullable: true
          type: string
        confirm:
          default: false
          description: Whether to confirm the payment (if applicable)
          example: true
          nullable: true
          type: boolean
        customer:
          allOf:
          - $ref: '#/components/schemas/CustomerDetails'
          nullable: true
        customer_id:
          description: |-
            The identifier for the customer object.
            This field will be deprecated soon, use the customer object instead
          example: cus_y3oqhf46pyzuxjbcn2giaqnb44
          maxLength: 255
          nullable: true
          type: string
        email:
          description: |-
            The customer's email address
            This field will be deprecated soon, use the customer object instead
          example: johntest@test.com
          maxLength: 255
          nullable: true
          type: string
        name:
          description: |-
            description: The customer's name
            This field will be deprecated soon, use the customer object instead
          example: John Test
          maxLength: 255
          nullable: true
          type: string
        phone:
          description: |-
            The customer's phone number
            This field will be deprecated soon, use the customer object instead
          example: "3141592653"
          maxLength: 255
          nullable: true
          type: string
        phone_country_code:
          description: |-
            The country code for the customer phone number
            This field will be deprecated soon, use the customer object instead
          example: "+1"
          maxLength: 255
          nullable: true
          type: string
        off_session:
          description: "Set to true to indicate that the customer is not in your checkout\
            \ flow during this payment, and therefore is unable to authenticate. This\
            \ parameter is intended for scenarios where you collect card details and\
            \ charge them later. This parameter can only be used with `confirm: true`."
          example: true
          nullable: true
          type: boolean
        description:
          description: A description of the payment
          example: It's my first payment request
          nullable: true
          type: string
        return_url:
          description: The URL to redirect after the completion of the operation
          example: https://hyperswitch.io
          nullable: true
          type: string
        setup_future_usage:
          allOf:
          - $ref: '#/components/schemas/FutureUsage'
          nullable: true
        authentication_type:
          allOf:
          - $ref: '#/components/schemas/AuthenticationType'
          default: three_ds
          nullable: true
        payment_method_data:
          allOf:
          - $ref: '#/components/schemas/PaymentMethodData'
          nullable: true
        payment_method:
          allOf:
          - $ref: '#/components/schemas/PaymentMethod'
          nullable: true
        payment_token:
          description: Provide a reference to a stored payment method
          example: 187282ab-40ef-47a9-9206-5099ba31e432
          nullable: true
          type: string
        card_cvc:
          deprecated: true
          description: |-
            This is used when payment is to be confirmed and the card is not saved.
            This field will be deprecated soon, use the CardToken object instead
          nullable: true
          type: string
        shipping:
          allOf:
          - $ref: '#/components/schemas/Address'
          nullable: true
        billing:
          allOf:
          - $ref: '#/components/schemas/Address'
          nullable: true
        statement_descriptor_name:
          description: "For non-card charges, you can use this value as the complete\
            \ description that appears on your customers’ statements. Must contain\
            \ at least one letter, maximum 22 characters."
          example: Hyperswitch Router
          maxLength: 255
          nullable: true
          type: string
        statement_descriptor_suffix:
          description: Provides information about a card payment that customers see
            on their statements. Concatenated with the prefix (shortened descriptor)
            or statement descriptor that’s set on the account to form the complete
            statement descriptor. Maximum 22 characters for the concatenated descriptor.
          example: Payment for shoes purchase
          maxLength: 255
          nullable: true
          type: string
        order_details:
          description: "Information about the product , quantity and amount for connectors.\
            \ (e.g. Klarna)"
          example: |-
            [{
                    "product_name": "gillete creme",
                    "quantity": 15,
                    "amount" : 900
                    "product_img_link" : "https://dummy-img-link.com"
                }]
          items:
            $ref: '#/components/schemas/OrderDetailsWithAmount'
          nullable: true
          type: array
        client_secret:
          description: It's a token used for client side verification.
          example: pay_U42c409qyHwOkWo3vK60_secret_el9ksDkiB8hi6j9N78yo
          nullable: true
          type: string
        mandate_data:
          allOf:
          - $ref: '#/components/schemas/MandateData'
          nullable: true
        mandate_id:
          description: "A unique identifier to link the payment to a mandate, can\
            \ be use instead of payment_method_data"
          example: mandate_iwer89rnjef349dni3
          maxLength: 255
          nullable: true
          type: string
        browser_info:
          description: Additional details required by 3DS 2.0
          nullable: true
          type: object
        payment_experience:
          allOf:
          - $ref: '#/components/schemas/PaymentExperience'
          nullable: true
        payment_method_type:
          allOf:
          - $ref: '#/components/schemas/PaymentMethodType'
          nullable: true
        business_country:
          allOf:
          - $ref: '#/components/schemas/CountryAlpha2'
          nullable: true
        business_label:
          description: Business label of the merchant for this payment
          example: food
          nullable: true
          type: string
        merchant_connector_details:
          allOf:
          - $ref: '#/components/schemas/MerchantConnectorDetailsWrap'
          nullable: true
        allowed_payment_method_types:
          description: Allowed Payment Method Types for a given PaymentIntent
          items:
            $ref: '#/components/schemas/PaymentMethodType'
          nullable: true
          type: array
        business_sub_label:
          description: Business sub label for the payment
          nullable: true
          type: string
        retry_action:
          allOf:
          - $ref: '#/components/schemas/RetryAction'
          nullable: true
        metadata:
          description: "You can specify up to 50 keys, with key names up to 40 characters\
            \ long and values up to 500 characters long. Metadata is useful for storing\
            \ additional, structured information on an object."
          nullable: true
          type: object
        connector_metadata:
          allOf:
          - $ref: '#/components/schemas/ConnectorMetadata'
          nullable: true
        feature_metadata:
          allOf:
          - $ref: '#/components/schemas/FeatureMetadata'
          nullable: true
        payment_link:
          default: false
          description: Whether to get the payment link (if applicable)
          example: true
          nullable: true
          type: boolean
        payment_link_config:
          allOf:
          - $ref: '#/components/schemas/PaymentCreatePaymentLinkConfig'
          nullable: true
        profile_id:
          description: |-
            The business profile to use for this payment, if not passed the default business profile
            associated with the merchant account will be used.
          nullable: true
          type: string
        surcharge_details:
          allOf:
          - $ref: '#/components/schemas/RequestSurchargeDetails'
          nullable: true
        payment_type:
          allOf:
          - $ref: '#/components/schemas/PaymentType'
          nullable: true
        request_incremental_authorization:
          description: Request for an incremental authorization
          nullable: true
          type: boolean
        session_expiry:
          description: |-
            Will be used to expire client secret after certain amount of time to be supplied in seconds
            (900) for 15 mins
          example: 900
          format: int32
          minimum: 0
          nullable: true
          type: integer
        frm_metadata:
          description: additional data related to some frm connectors
          nullable: true
      type: object
    PaymentsResponse:
      example:
        payment_method_type: ""
        metadata: "{}"
        merchant_connector_id: merchant_connector_id
        reference_id: 993672945374576J
        statement_descriptor_name: Hyperswitch Router
        expires_on: 2022-09-10T10:11:12Z
        authentication_type: ""
        billing: ""
        shipping: ""
        incremental_authorization_allowed: true
        payment_method_data: ""
        frm_message: ""
        fingerprint: fingerprint
        client_secret: pay_U42c409qyHwOkWo3vK60_secret_el9ksDkiB8hi6j9N78yo
        payment_method: null
        attempts:
        - error_message: error_message
          capture_method: ""
          payment_method_type: ""
          amount: 6
          connector_metadata: ""
          reference_id: 993672945374576J
          connector_transaction_id: connector_transaction_id
          payment_token: payment_token
          mandate_id: mandate_id
          cancellation_reason: cancellation_reason
          unified_message: unified_message
          authentication_type: ""
          unified_code: unified_code
          connector: connector
          attempt_id: attempt_id
          currency: ""
          error_code: error_code
          payment_experience: ""
          payment_method: ""
          status: null
        - error_message: error_message
          capture_method: ""
          payment_method_type: ""
          amount: 6
          connector_metadata: ""
          reference_id: 993672945374576J
          connector_transaction_id: connector_transaction_id
          payment_token: payment_token
          mandate_id: mandate_id
          cancellation_reason: cancellation_reason
          unified_message: unified_message
          authentication_type: ""
          unified_code: unified_code
          connector: connector
          attempt_id: attempt_id
          currency: ""
          error_code: error_code
          payment_experience: ""
          payment_method: ""
          status: null
        manual_retry_allowed: true
        capture_method: ""
        error_message: Failed while verifying the card
        created: 2022-09-10T10:11:12Z
        connector_transaction_id: 993672945374576J
        amount_received: 6540
        cancellation_reason: cancellation_reason
        connector_label: stripe_US_food
        disputes:
        - connector_dispute_id: connector_dispute_id
          challenge_required_by: 2000-01-23T04:56:07.000+00:00
          dispute_stage: null
          connector_status: connector_status
          created_at: 2000-01-23T04:56:07.000+00:00
          connector_created_at: 2000-01-23T04:56:07.000+00:00
          dispute_id: dispute_id
          connector_reason: connector_reason
          dispute_status: null
          connector_reason_code: connector_reason_code
          connector_updated_at: 2000-01-23T04:56:07.000+00:00
        - connector_dispute_id: connector_dispute_id
          challenge_required_by: 2000-01-23T04:56:07.000+00:00
          dispute_stage: null
          connector_status: connector_status
          created_at: 2000-01-23T04:56:07.000+00:00
          connector_created_at: 2000-01-23T04:56:07.000+00:00
          dispute_id: dispute_id
          connector_reason: connector_reason
          dispute_status: null
          connector_reason_code: connector_reason_code
          connector_updated_at: 2000-01-23T04:56:07.000+00:00
        capture_on: 2022-09-10T10:11:12Z
        connector: stripe
        phone: "3141592653"
        profile_id: profile_id
        name: John Test
        business_sub_label: business_sub_label
        error_code: E0001
        status: ""
        connector_metadata: ""
        payment_token: 187282ab-40ef-47a9-9206-5099ba31e432
        amount_capturable: 6540
        description: It's my first payment request
        mandate_id: mandate_iwer89rnjef349dni3
        merchant_id: merchant_1668273825
        unified_message: unified_message
        ephemeral_key: ""
        order_details: |-
          [{
                  "product_name": "gillete creme",
                  "quantity": 15,
                  "amount" : 900
              }]
        surcharge_details: ""
        allowed_payment_method_types:
        - null
        - null
        payment_link: ""
        refunds:
        - error_message: error_message
          reason: reason
          amount: 0
          metadata: "{}"
          merchant_connector_id: merchant_connector_id
          created_at: 2000-01-23T04:56:07.000+00:00
          refund_id: refund_id
          updated_at: 2000-01-23T04:56:07.000+00:00
          connector: stripe
          payment_id: payment_id
          profile_id: profile_id
          currency: currency
          error_code: error_code
          status: null
        - error_message: error_message
          reason: reason
          amount: 0
          metadata: "{}"
          merchant_connector_id: merchant_connector_id
          created_at: 2000-01-23T04:56:07.000+00:00
          refund_id: refund_id
          updated_at: 2000-01-23T04:56:07.000+00:00
          connector: stripe
          payment_id: payment_id
          profile_id: profile_id
          currency: currency
          error_code: error_code
          status: null
        payment_id: pay_mbabizu24mvu3mela5njyhpit4
        off_session: true
        incremental_authorizations:
        - error_message: error_message
          amount: 7
          authorization_id: authorization_id
          error_code: error_code
          previously_authorized_amount: 9
          status: null
        - error_message: error_message
          amount: 7
          authorization_id: authorization_id
          error_code: error_code
          previously_authorized_amount: 9
          status: null
        return_url: https://hyperswitch.io
        currency: null
        payment_experience: ""
        email: johntest@test.com
        authorization_count: 2
        attempt_count: 5
        amount: 100
        captures:
        - capture_sequence: 5
          error_message: error_message
          amount: 1
          error_reason: error_reason
          connector: connector
          reference_id: reference_id
          authorized_attempt_id: authorized_attempt_id
          currency: ""
          error_code: error_code
          capture_id: capture_id
          connector_capture_id: connector_capture_id
          status: null
        - capture_sequence: 5
          error_message: error_message
          amount: 1
          error_reason: error_reason
          connector: connector
          reference_id: reference_id
          authorized_attempt_id: authorized_attempt_id
          currency: ""
          error_code: error_code
          capture_id: capture_id
          connector_capture_id: connector_capture_id
          status: null
        setup_future_usage: ""
        unified_code: unified_code
        business_label: business_label
        feature_metadata: ""
        next_action: ""
        business_country: ""
        net_amount: 110
        statement_descriptor_suffix: Payment for shoes purchase
        customer_id: cus_y3oqhf46pyzuxjbcn2giaqnb44
        mandate_data: ""
        merchant_decision: merchant_decision
      properties:
        payment_id:
          description: |-
            Unique identifier for the payment. This ensures idempotency for multiple payments
            that have been done by a single merchant.
          example: pay_mbabizu24mvu3mela5njyhpit4
          maxLength: 30
          minLength: 30
          nullable: true
          type: string
        merchant_id:
          description: |-
            This is an identifier for the merchant account. This is inferred from the API key
            provided during the request
          example: merchant_1668273825
          maxLength: 255
          nullable: true
          type: string
        status:
          allOf:
          - $ref: '#/components/schemas/IntentStatus'
          default: requires_confirmation
        amount:
          description: "The payment amount. Amount for the payment in lowest denomination\
            \ of the currency. (i.e) in cents for USD denomination, in paisa for INR\
            \ denomination etc.,"
          example: 100
          format: int64
          type: integer
        net_amount:
          description: |-
            The payment net amount. net_amount = amount + surcharge_details.surcharge_amount + surcharge_details.tax_amount,
            If no surcharge_details, net_amount = amount
          example: 110
          format: int64
          type: integer
        amount_capturable:
          description: The maximum amount that could be captured from the payment
          example: 6540
          format: int64
          minimum: 100
          nullable: true
          type: integer
        amount_received:
          description: The amount which is already captured from the payment
          example: 6540
          format: int64
          minimum: 100
          nullable: true
          type: integer
        connector:
          description: The connector used for the payment
          example: stripe
          nullable: true
          type: string
        client_secret:
          description: It's a token used for client side verification.
          example: pay_U42c409qyHwOkWo3vK60_secret_el9ksDkiB8hi6j9N78yo
          nullable: true
          type: string
        created:
          description: Time when the payment was created
          example: 2022-09-10T10:11:12Z
          format: date-time
          nullable: true
          type: string
        currency:
          $ref: '#/components/schemas/Currency'
        customer_id:
          description: The identifier for the customer object. If not provided the
            customer ID will be autogenerated.
          example: cus_y3oqhf46pyzuxjbcn2giaqnb44
          maxLength: 255
          nullable: true
          type: string
        description:
          description: A description of the payment
          example: It's my first payment request
          nullable: true
          type: string
        refunds:
          description: List of refund that happened on this intent
          items:
            $ref: '#/components/schemas/RefundResponse'
          nullable: true
          type: array
        disputes:
          description: List of dispute that happened on this intent
          items:
            $ref: '#/components/schemas/DisputeResponsePaymentsRetrieve'
          nullable: true
          type: array
        attempts:
          description: List of attempts that happened on this intent
          items:
            $ref: '#/components/schemas/PaymentAttemptResponse'
          nullable: true
          type: array
        captures:
          description: List of captures done on latest attempt
          items:
            $ref: '#/components/schemas/CaptureResponse'
          nullable: true
          type: array
        mandate_id:
          description: "A unique identifier to link the payment to a mandate, can\
            \ be use instead of payment_method_data"
          example: mandate_iwer89rnjef349dni3
          maxLength: 255
          nullable: true
          type: string
        mandate_data:
          allOf:
          - $ref: '#/components/schemas/MandateData'
          nullable: true
        setup_future_usage:
          allOf:
          - $ref: '#/components/schemas/FutureUsage'
          nullable: true
        off_session:
          description: "Set to true to indicate that the customer is not in your checkout\
            \ flow during this payment, and therefore is unable to authenticate. This\
            \ parameter is intended for scenarios where you collect card details and\
            \ charge them later. This parameter can only be used with confirm=true."
          example: true
          nullable: true
          type: boolean
        capture_on:
          description: |-
            A timestamp (ISO 8601 code) that determines when the payment should be captured.
            Providing this field will automatically set `capture` to true
          example: 2022-09-10T10:11:12Z
          format: date-time
          nullable: true
          type: string
        capture_method:
          allOf:
          - $ref: '#/components/schemas/CaptureMethod'
          nullable: true
        payment_method:
          $ref: '#/components/schemas/PaymentMethodType'
        payment_method_data:
          allOf:
          - $ref: '#/components/schemas/PaymentMethod'
          nullable: true
        payment_token:
          description: Provide a reference to a stored payment method
          example: 187282ab-40ef-47a9-9206-5099ba31e432
          nullable: true
          type: string
        shipping:
          allOf:
          - $ref: '#/components/schemas/Address'
          nullable: true
        billing:
          allOf:
          - $ref: '#/components/schemas/Address'
          nullable: true
        order_details:
          description: "Information about the product , quantity and amount for connectors.\
            \ (e.g. Klarna)"
          example: |-
            [{
                    "product_name": "gillete creme",
                    "quantity": 15,
                    "amount" : 900
                }]
          items:
            $ref: '#/components/schemas/OrderDetailsWithAmount'
          nullable: true
          type: array
        email:
          description: "description: The customer's email address"
          example: johntest@test.com
          maxLength: 255
          nullable: true
          type: string
        name:
          description: "description: The customer's name"
          example: John Test
          maxLength: 255
          nullable: true
          type: string
        phone:
          description: The customer's phone number
          example: "3141592653"
          maxLength: 255
          nullable: true
          type: string
        return_url:
          description: The URL to redirect after the completion of the operation
          example: https://hyperswitch.io
          nullable: true
          type: string
        authentication_type:
          allOf:
          - $ref: '#/components/schemas/AuthenticationType'
          default: three_ds
          nullable: true
        statement_descriptor_name:
          description: "For non-card charges, you can use this value as the complete\
            \ description that appears on your customers’ statements. Must contain\
            \ at least one letter, maximum 22 characters."
          example: Hyperswitch Router
          maxLength: 255
          nullable: true
          type: string
        statement_descriptor_suffix:
          description: Provides information about a card payment that customers see
            on their statements. Concatenated with the prefix (shortened descriptor)
            or statement descriptor that’s set on the account to form the complete
            statement descriptor. Maximum 255 characters for the concatenated descriptor.
          example: Payment for shoes purchase
          maxLength: 255
          nullable: true
          type: string
        next_action:
          allOf:
          - $ref: '#/components/schemas/NextActionData'
          nullable: true
        cancellation_reason:
          description: If the payment was cancelled the reason provided here
          nullable: true
          type: string
        error_code:
          description: If there was an error while calling the connectors the code
            is received here
          example: E0001
          nullable: true
          type: string
        error_message:
          description: If there was an error while calling the connector the error
            message is received here
          example: Failed while verifying the card
          nullable: true
          type: string
        unified_code:
          description: error code unified across the connectors is received here if
            there was an error while calling connector
          nullable: true
          type: string
        unified_message:
          description: error message unified across the connectors is received here
            if there was an error while calling connector
          nullable: true
          type: string
        payment_experience:
          allOf:
          - $ref: '#/components/schemas/PaymentExperience'
          nullable: true
        payment_method_type:
          allOf:
          - $ref: '#/components/schemas/PaymentMethodType'
          nullable: true
        connector_label:
          description: The connector used for this payment along with the country
            and business details
          example: stripe_US_food
          nullable: true
          type: string
        business_country:
          allOf:
          - $ref: '#/components/schemas/CountryAlpha2'
          nullable: true
        business_label:
          description: The business label of merchant for this payment
          nullable: true
          type: string
        business_sub_label:
          description: The business_sub_label for this payment
          nullable: true
          type: string
        allowed_payment_method_types:
          description: Allowed Payment Method Types for a given PaymentIntent
          items:
            $ref: '#/components/schemas/PaymentMethodType'
          nullable: true
          type: array
        ephemeral_key:
          allOf:
          - $ref: '#/components/schemas/EphemeralKeyCreateResponse'
          nullable: true
        manual_retry_allowed:
          description: If true the payment can be retried with same or different payment
            method which means the confirm call can be made again.
          nullable: true
          type: boolean
        connector_transaction_id:
          description: A unique identifier for a payment provided by the connector
          example: 993672945374576J
          nullable: true
          type: string
        frm_message:
          allOf:
          - $ref: '#/components/schemas/FrmMessage'
          nullable: true
        metadata:
          description: "You can specify up to 50 keys, with key names up to 40 characters\
            \ long and values up to 500 characters long. Metadata is useful for storing\
            \ additional, structured information on an object."
          nullable: true
          type: object
        connector_metadata:
          allOf:
          - $ref: '#/components/schemas/ConnectorMetadata'
          nullable: true
        feature_metadata:
          allOf:
          - $ref: '#/components/schemas/FeatureMetadata'
          nullable: true
        reference_id:
          description: reference to the payment at connector side
          example: 993672945374576J
          nullable: true
          type: string
        payment_link:
          allOf:
          - $ref: '#/components/schemas/PaymentLinkResponse'
          nullable: true
        profile_id:
          description: The business profile that is associated with this payment
          nullable: true
          type: string
        surcharge_details:
          allOf:
          - $ref: '#/components/schemas/RequestSurchargeDetails'
          nullable: true
        attempt_count:
          description: total number of attempts associated with this payment
          format: int32
          type: integer
        merchant_decision:
          description: "Denotes the action(approve or reject) taken by merchant in\
            \ case of manual review. Manual review can occur when the transaction\
            \ is marked as risky by the frm_processor, payment processor or when there\
            \ is underpayment/over payment incase of crypto payment"
          nullable: true
          type: string
        merchant_connector_id:
          description: Identifier of the connector ( merchant connector account )
            which was chosen to make the payment
          nullable: true
          type: string
        incremental_authorization_allowed:
          description: If true incremental authorization can be performed on this
            payment
          nullable: true
          type: boolean
        authorization_count:
          description: Total number of authorizations happened in an incremental_authorization
            payment
          format: int32
          nullable: true
          type: integer
        incremental_authorizations:
          description: List of incremental authorizations happened to the payment
          items:
            $ref: '#/components/schemas/IncrementalAuthorizationResponse'
          nullable: true
          type: array
        expires_on:
          description: Date Time expiry of the payment
          example: 2022-09-10T10:11:12Z
          format: date-time
          nullable: true
          type: string
        fingerprint:
          description: Payment Fingerprint
          nullable: true
          type: string
      required:
      - amount
      - attempt_count
      - currency
      - net_amount
      - payment_method
      - status
      type: object
    PaymentsRetrieveRequest:
      properties:
        resource_id:
          $ref: '#/components/schemas/PaymentIdType'
        merchant_id:
          description: The identifier for the Merchant Account.
          nullable: true
          type: string
        force_sync:
          description: Decider to enable or disable the connector call for retrieve
            request
          type: boolean
        param:
          description: The parameters passed to a retrieve request
          nullable: true
          type: string
        connector:
          description: The name of the connector
          nullable: true
          type: string
        merchant_connector_details:
          allOf:
          - $ref: '#/components/schemas/MerchantConnectorDetailsWrap'
          nullable: true
        client_secret:
          description: "This is a token which expires after 15 minutes, used from\
            \ the client to authenticate and create sessions from the SDK"
          nullable: true
          type: string
        expand_captures:
          description: If enabled provides list of captures linked to latest attempt
          nullable: true
          type: boolean
        expand_attempts:
          description: If enabled provides list of attempts linked to payment intent
          nullable: true
          type: boolean
      required:
      - force_sync
      - resource_id
      type: object
    PaymentsSessionRequest:
      example:
        payment_id: payment_id
        wallets:
        - null
        - null
        client_secret: client_secret
        merchant_connector_details: ""
      properties:
        payment_id:
          description: The identifier for the payment
          type: string
        client_secret:
          description: "This is a token which expires after 15 minutes, used from\
            \ the client to authenticate and create sessions from the SDK"
          type: string
        wallets:
          description: The list of the supported wallets
          items:
            $ref: '#/components/schemas/PaymentMethodType'
          type: array
        merchant_connector_details:
          allOf:
          - $ref: '#/components/schemas/MerchantConnectorDetailsWrap'
          nullable: true
      required:
      - client_secret
      - payment_id
      - wallets
      type: object
    PaymentsSessionResponse:
      example:
        session_token:
        - wallet_name: no_session_token_received
        - wallet_name: no_session_token_received
        payment_id: payment_id
        client_secret: client_secret
      properties:
        payment_id:
          description: The identifier for the payment
          type: string
        client_secret:
          description: "This is a token which expires after 15 minutes, used from\
            \ the client to authenticate and create sessions from the SDK"
          type: string
        session_token:
          description: The list of session token object
          items:
            $ref: '#/components/schemas/SessionToken'
          type: array
      required:
      - client_secret
      - payment_id
      - session_token
      type: object
    PaymentsStartRequest:
      properties:
        payment_id:
          description: |-
            Unique identifier for the payment. This ensures idempotency for multiple payments
            that have been done by a single merchant. This field is auto generated and is returned in the API response.
          type: string
        merchant_id:
          description: The identifier for the Merchant Account.
          type: string
        attempt_id:
          description: The identifier for the payment transaction
          type: string
      required:
      - attempt_id
      - merchant_id
      - payment_id
      type: object
    PayoutActionRequest:
      example:
        payout_id: payout_mbabizu24mvu3mela5njyhpit4
      properties:
        payout_id:
          description: |-
            Unique identifier for the payout. This ensures idempotency for multiple payouts
            that have been done by a single merchant. This field is auto generated and is returned in the API response.
          example: payout_mbabizu24mvu3mela5njyhpit4
          maxLength: 30
          minLength: 30
          type: string
      required:
      - payout_id
      type: object
    PayoutConnectors:
      enum:
      - adyen
      - wise
      type: string
    PayoutCreateRequest:
      example:
        metadata: "{}"
        description: It's my first payout request
        payout_type: null
        payout_method_data: ""
        merchant_id: merchant_1668273825
        billing: "{}"
        routing: ""
        payout_token: 187282ab-40ef-47a9-9206-5099ba31e432
        return_url: https://hyperswitch.io
        currency: null
        client_secret: pay_U42c409qyHwOkWo3vK60_secret_el9ksDkiB8hi6j9N78yo
        email: johntest@test.com
        amount: 1000
        phone_country_code: "+1"
        recurring: false
        auto_fulfill: true
        confirm: true
        payout_id: payout_mbabizu24mvu3mela5njyhpit4
        entity_type: null
        connector:
        - wise
        - adyen
        business_label: food
        phone: "3141592653"
        profile_id: profile_id
        name: John Test
        business_country: null
        customer_id: cus_y3oqhf46pyzuxjbcn2giaqnb44
      properties:
        payout_id:
          description: |-
            Unique identifier for the payout. This ensures idempotency for multiple payouts
            that have been done by a single merchant. This field is auto generated and is returned in the API response.
          example: payout_mbabizu24mvu3mela5njyhpit4
          maxLength: 30
          minLength: 30
          nullable: true
          type: string
        merchant_id:
          description: |-
            This is an identifier for the merchant account. This is inferred from the API key
            provided during the request
          example: merchant_1668273825
          maxLength: 255
          type: string
        amount:
          description: "The payout amount. Amount for the payout in lowest denomination\
            \ of the currency. (i.e) in cents for USD denomination, in paisa for INR\
            \ denomination etc.,"
          example: 1000
          format: int64
          type: integer
        currency:
          $ref: '#/components/schemas/Currency'
        routing:
          allOf:
          - $ref: '#/components/schemas/RoutingAlgorithm'
          nullable: true
        connector:
          description: This allows the merchant to manually select a connector with
            which the payout can go through
          example:
          - wise
          - adyen
          items:
            $ref: '#/components/schemas/Connector'
          nullable: true
          type: array
        confirm:
          default: false
          description: The boolean value to create payout with connector
          example: true
          type: boolean
        payout_type:
          $ref: '#/components/schemas/PayoutType'
        payout_method_data:
          allOf:
          - $ref: '#/components/schemas/PayoutMethodData'
          nullable: true
        billing:
          description: The billing address for the payout
          nullable: true
          type: object
        customer_id:
          description: The identifier for the customer object. If not provided the
            customer ID will be autogenerated.
          example: cus_y3oqhf46pyzuxjbcn2giaqnb44
          maxLength: 255
          type: string
        auto_fulfill:
          default: false
          description: "Set to true to confirm the payout without review, no further\
            \ action required"
          example: true
          type: boolean
        email:
          description: "description: The customer's email address"
          example: johntest@test.com
          maxLength: 255
          nullable: true
          type: string
        name:
          description: "description: The customer's name"
          example: John Test
          maxLength: 255
          nullable: true
          type: string
        phone:
          description: The customer's phone number
          example: "3141592653"
          maxLength: 255
          nullable: true
          type: string
        phone_country_code:
          description: The country code for the customer phone number
          example: "+1"
          maxLength: 255
          nullable: true
          type: string
        client_secret:
          description: It's a token used for client side verification.
          example: pay_U42c409qyHwOkWo3vK60_secret_el9ksDkiB8hi6j9N78yo
          type: string
        return_url:
          description: The URL to redirect after the completion of the operation
          example: https://hyperswitch.io
          type: string
        business_country:
          $ref: '#/components/schemas/CountryAlpha2'
        business_label:
          description: Business label of the merchant for this payout
          example: food
          nullable: true
          type: string
        description:
          description: A description of the payout
          example: It's my first payout request
          type: string
        entity_type:
          $ref: '#/components/schemas/PayoutEntityType'
        recurring:
          default: false
          description: Specifies whether or not the payout request is recurring
          nullable: true
          type: boolean
        metadata:
          description: "You can specify up to 50 keys, with key names up to 40 characters\
            \ long and values up to 500 characters long. Metadata is useful for storing\
            \ additional, structured information on an object."
          nullable: true
          type: object
        payout_token:
          description: Provide a reference to a stored payment method
          example: 187282ab-40ef-47a9-9206-5099ba31e432
          nullable: true
          type: string
        profile_id:
          description: |-
            The business profile to use for this payment, if not passed the default business profile
            associated with the merchant account will be used.
          nullable: true
          type: string
      required:
      - auto_fulfill
      - business_country
      - client_secret
      - confirm
      - currency
      - customer_id
      - description
      - entity_type
      - merchant_id
      - payout_type
      - return_url
      type: object
    PayoutCreateResponse:
      example:
        metadata: "{}"
        description: It's my first payout request
        payout_type: null
        merchant_id: merchant_1668273825
        billing: "{}"
        return_url: https://hyperswitch.io
        currency: null
        client_secret: pay_U42c409qyHwOkWo3vK60_secret_el9ksDkiB8hi6j9N78yo
        email: johntest@test.com
        error_message: Failed while verifying the card
        amount: 1000
        phone_country_code: "+1"
        recurring: false
        auto_fulfill: true
        payout_id: payout_mbabizu24mvu3mela5njyhpit4
        entity_type: null
        connector: wise
        business_label: food
        phone: "3141592653"
        profile_id: profile_id
        name: John Test
        business_country: null
        error_code: E0001
        customer_id: cus_y3oqhf46pyzuxjbcn2giaqnb44
        status: null
      properties:
        payout_id:
          description: |-
            Unique identifier for the payout. This ensures idempotency for multiple payouts
            that have been done by a single merchant. This field is auto generated and is returned in the API response.
          example: payout_mbabizu24mvu3mela5njyhpit4
          maxLength: 30
          minLength: 30
          type: string
        merchant_id:
          description: |-
            This is an identifier for the merchant account. This is inferred from the API key
            provided during the request
          example: merchant_1668273825
          maxLength: 255
          type: string
        amount:
          description: "The payout amount. Amount for the payout in lowest denomination\
            \ of the currency. (i.e) in cents for USD denomination, in paisa for INR\
            \ denomination etc.,"
          example: 1000
          format: int64
          type: integer
        currency:
          $ref: '#/components/schemas/Currency'
        connector:
          description: The connector used for the payout
          example: wise
          nullable: true
          type: string
        payout_type:
          $ref: '#/components/schemas/PayoutType'
        billing:
          description: The billing address for the payout
          nullable: true
          type: object
        customer_id:
          description: The identifier for the customer object. If not provided the
            customer ID will be autogenerated.
          example: cus_y3oqhf46pyzuxjbcn2giaqnb44
          maxLength: 255
          type: string
        auto_fulfill:
          default: false
          description: "Set to true to confirm the payout without review, no further\
            \ action required"
          example: true
          type: boolean
        email:
          description: "description: The customer's email address"
          example: johntest@test.com
          maxLength: 255
          nullable: true
          type: string
        name:
          description: "description: The customer's name"
          example: John Test
          maxLength: 255
          nullable: true
          type: string
        phone:
          description: The customer's phone number
          example: "3141592653"
          maxLength: 255
          nullable: true
          type: string
        phone_country_code:
          description: The country code for the customer phone number
          example: "+1"
          maxLength: 255
          nullable: true
          type: string
        client_secret:
          description: It's a token used for client side verification.
          example: pay_U42c409qyHwOkWo3vK60_secret_el9ksDkiB8hi6j9N78yo
          type: string
        return_url:
          description: The URL to redirect after the completion of the operation
          example: https://hyperswitch.io
          type: string
        business_country:
          $ref: '#/components/schemas/CountryAlpha2'
        business_label:
          description: Business label of the merchant for this payout
          example: food
          nullable: true
          type: string
        description:
          description: A description of the payout
          example: It's my first payout request
          type: string
        entity_type:
          $ref: '#/components/schemas/PayoutEntityType'
        recurring:
          default: false
          description: Specifies whether or not the payout request is recurring
          nullable: true
          type: boolean
        metadata:
          description: "You can specify up to 50 keys, with key names up to 40 characters\
            \ long and values up to 500 characters long. Metadata is useful for storing\
            \ additional, structured information on an object."
          nullable: true
          type: object
        status:
          $ref: '#/components/schemas/PayoutStatus'
        error_message:
          description: If there was an error while calling the connector the error
            message is received here
          example: Failed while verifying the card
          type: string
        error_code:
          description: If there was an error while calling the connectors the code
            is received here
          example: E0001
          type: string
        profile_id:
          description: The business profile that is associated with this payment
          type: string
      required:
      - amount
      - auto_fulfill
      - business_country
      - client_secret
      - currency
      - customer_id
      - description
      - entity_type
      - error_code
      - error_message
      - merchant_id
      - payout_id
      - payout_type
      - profile_id
      - return_url
      - status
      type: object
    PayoutEntityType:
      enum:
      - Individual
      - Company
      - NonProfit
      - PublicSector
      - lowercase
      - Personal
      type: string
    PayoutMethodData:
      oneOf:
      - $ref: '#/components/schemas/PaymentMethodData_oneOf'
      - $ref: '#/components/schemas/PayoutMethodData_oneOf'
    PayoutRequest:
      oneOf:
      - $ref: '#/components/schemas/PayoutRequest_oneOf'
      - $ref: '#/components/schemas/PayoutRequest_oneOf_1'
      - $ref: '#/components/schemas/PayoutRequest_oneOf_2'
    PayoutRetrieveBody:
      properties:
        force_sync:
          nullable: true
          type: boolean
      type: object
    PayoutRetrieveRequest:
      properties:
        payout_id:
          description: |-
            Unique identifier for the payout. This ensures idempotency for multiple payouts
            that have been done by a single merchant. This field is auto generated and is returned in the API response.
          example: payout_mbabizu24mvu3mela5njyhpit4
          maxLength: 30
          minLength: 30
          type: string
        force_sync:
          default: false
          description: |-
            `force_sync` with the connector to get payout details
            (defaults to false)
          example: true
          nullable: true
          type: boolean
      required:
      - payout_id
      type: object
    PayoutStatus:
      enum:
      - success
      - failed
      - cancelled
      - pending
      - ineligible
      - requires_creation
      - requires_payout_method_data
      - requires_fulfillment
      type: string
    PayoutType:
      enum:
      - card
      - bank
      type: string
    PaypalRedirection:
      type: object
    PaypalSessionTokenResponse:
      properties:
        session_token:
          description: The session token for PayPal
          type: string
      required:
      - session_token
      type: object
    PhoneDetails:
      properties:
        number:
          description: The contact number
          example: "9999999999"
          nullable: true
          type: string
        country_code:
          description: The country code attached to the number
          example: "+1"
          nullable: true
          type: string
      type: object
    PrimaryBusinessDetails:
      properties:
        country:
          $ref: '#/components/schemas/CountryAlpha2'
        business:
          example: food
          type: string
      required:
      - business
      - country
      type: object
    ProductType:
      enum:
      - physical
      - digital
      - travel
      - ride
      - event
      - accommodation
      type: string
    ReceiverDetails:
      properties:
        amount_received:
          description: The amount received by receiver
          format: int64
          type: integer
        amount_charged:
          description: The amount charged by ACH
          format: int64
          nullable: true
          type: integer
        amount_remaining:
          description: The amount remaining to be sent via ACH
          format: int64
          nullable: true
          type: integer
      required:
      - amount_received
      type: object
    ReconStatus:
      enum:
      - not_requested
      - requested
      - active
      - disabled
      type: string
    RedirectResponse:
      properties:
        param:
          nullable: true
          type: string
        json_payload:
          nullable: true
          type: object
      type: object
    RefundListRequest:
      allOf:
      - allOf:
        - $ref: '#/components/schemas/TimeRange'
        nullable: true
      - properties:
          payment_id:
            description: The identifier for the payment
            nullable: true
            type: string
          refund_id:
            description: The identifier for the refund
            nullable: true
            type: string
          profile_id:
            description: The identifier for business profile
            nullable: true
            type: string
          limit:
            description: Limit on the number of objects to return
            format: int64
            nullable: true
            type: integer
          offset:
            description: The starting point within a list of objects
            format: int64
            nullable: true
            type: integer
          connector:
            description: The list of connectors to filter refunds list
            items:
              type: string
            nullable: true
            type: array
          currency:
            description: The list of currencies to filter refunds list
            items:
              $ref: '#/components/schemas/Currency'
            nullable: true
            type: array
          refund_status:
            description: The list of refund statuses to filter refunds list
            items:
              $ref: '#/components/schemas/RefundStatus'
            nullable: true
            type: array
        type: object
      example:
        refund_status:
        - null
        - null
        offset: 6
        connector:
        - connector
        - connector
        payment_id: payment_id
        profile_id: profile_id
        limit: 0
        currency:
        - null
        - null
        refund_id: refund_id
    RefundListResponse:
      example:
        data:
        - error_message: error_message
          reason: reason
          amount: 0
          metadata: "{}"
          merchant_connector_id: merchant_connector_id
          created_at: 2000-01-23T04:56:07.000+00:00
          refund_id: refund_id
          updated_at: 2000-01-23T04:56:07.000+00:00
          connector: stripe
          payment_id: payment_id
          profile_id: profile_id
          currency: currency
          error_code: error_code
          status: null
        - error_message: error_message
          reason: reason
          amount: 0
          metadata: "{}"
          merchant_connector_id: merchant_connector_id
          created_at: 2000-01-23T04:56:07.000+00:00
          refund_id: refund_id
          updated_at: 2000-01-23T04:56:07.000+00:00
          connector: stripe
          payment_id: payment_id
          profile_id: profile_id
          currency: currency
          error_code: error_code
          status: null
        total_count: 6
        count: 0
      properties:
        count:
          description: The number of refunds included in the list
          minimum: 0
          type: integer
        total_count:
          description: The total number of refunds in the list
          format: int64
          type: integer
        data:
          description: The List of refund response object
          items:
            $ref: '#/components/schemas/RefundResponse'
          type: array
      required:
      - count
      - data
      - total_count
      type: object
    RefundRequest:
      example:
        reason: Customer returned the product
        amount: 6540
        metadata: "{}"
        refund_type: ""
        payment_id: pay_mbabizu24mvu3mela5njyhpit4
        merchant_id: y3oqhf46pyzuxjbcn2giaqnb44
        refund_id: ref_mbabizu24mvu3mela5njyhpit4
        merchant_connector_details: ""
      properties:
        refund_id:
          description: "Unique Identifier for the Refund. This is to ensure idempotency\
            \ for multiple partial refund initiated against the same payment. If the\
            \ identifiers is not defined by the merchant, this filed shall be auto\
            \ generated and provide in the API response. It is recommended to generate\
            \ uuid(v4) as the refund_id."
          example: ref_mbabizu24mvu3mela5njyhpit4
          maxLength: 30
          minLength: 30
          nullable: true
          type: string
        payment_id:
          description: "Total amount for which the refund is to be initiated. Amount\
            \ for the payment in lowest denomination of the currency. (i.e) in cents\
            \ for USD denomination, in paisa for INR denomination etc. If not provided,\
            \ this will default to the full payment amount"
          example: pay_mbabizu24mvu3mela5njyhpit4
          maxLength: 30
          minLength: 30
          type: string
        merchant_id:
          description: The identifier for the Merchant Account
          example: y3oqhf46pyzuxjbcn2giaqnb44
          maxLength: 255
          nullable: true
          type: string
        amount:
          description: "Total amount for which the refund is to be initiated. Amount\
            \ for the payment in lowest denomination of the currency. (i.e) in cents\
            \ for USD denomination, in paisa for INR denomination etc., If not provided,\
            \ this will default to the full payment amount"
          example: 6540
          format: int64
          minimum: 100
          nullable: true
          type: integer
        reason:
          description: An arbitrary string attached to the object. Often useful for
            displaying to users and your customer support executive
          example: Customer returned the product
          maxLength: 255
          nullable: true
          type: string
        refund_type:
          allOf:
          - $ref: '#/components/schemas/RefundType'
          default: Instant
          nullable: true
        metadata:
          description: "You can specify up to 50 keys, with key names up to 40 characters\
            \ long and values up to 500 characters long. Metadata is useful for storing\
            \ additional, structured information on an object."
          nullable: true
          type: object
        merchant_connector_details:
          allOf:
          - $ref: '#/components/schemas/MerchantConnectorDetailsWrap'
          nullable: true
      required:
      - payment_id
      type: object
    RefundResponse:
      example:
        error_message: error_message
        reason: reason
        amount: 0
        metadata: "{}"
        merchant_connector_id: merchant_connector_id
        created_at: 2000-01-23T04:56:07.000+00:00
        refund_id: refund_id
        updated_at: 2000-01-23T04:56:07.000+00:00
        connector: stripe
        payment_id: payment_id
        profile_id: profile_id
        currency: currency
        error_code: error_code
        status: null
      properties:
        refund_id:
          description: The identifier for refund
          type: string
        payment_id:
          description: The identifier for payment
          type: string
        amount:
          description: "The refund amount, which should be less than or equal to the\
            \ total payment amount. Amount for the payment in lowest denomination\
            \ of the currency. (i.e) in cents for USD denomination, in paisa for INR\
            \ denomination etc"
          format: int64
          type: integer
        currency:
          description: The three-letter ISO currency code
          type: string
        reason:
          description: An arbitrary string attached to the object. Often useful for
            displaying to users and your customer support executive
          nullable: true
          type: string
        status:
          $ref: '#/components/schemas/RefundStatus'
        metadata:
          description: "You can specify up to 50 keys, with key names up to 40 characters\
            \ long and values up to 500 characters long. Metadata is useful for storing\
            \ additional, structured information on an object"
          nullable: true
          type: object
        error_message:
          description: The error message
          nullable: true
          type: string
        error_code:
          description: The code for the error
          nullable: true
          type: string
        created_at:
          description: The timestamp at which refund is created
          format: date-time
          nullable: true
          type: string
        updated_at:
          description: The timestamp at which refund is updated
          format: date-time
          nullable: true
          type: string
        connector:
          description: The connector used for the refund and the corresponding payment
          example: stripe
          type: string
        profile_id:
          description: The id of business profile for this refund
          nullable: true
          type: string
        merchant_connector_id:
          description: The merchant_connector_id of the processor through which this
            payment went through
          nullable: true
          type: string
      required:
      - amount
      - connector
      - currency
      - payment_id
      - refund_id
      - status
      type: object
    RefundStatus:
      description: The status for refunds
      enum:
      - succeeded
      - failed
      - pending
      - review
      type: string
    RefundType:
      enum:
      - scheduled
      - instant
      type: string
    RefundUpdateRequest:
      example:
        reason: Customer returned the product
        metadata: "{}"
      properties:
        reason:
          description: An arbitrary string attached to the object. Often useful for
            displaying to users and your customer support executive
          example: Customer returned the product
          maxLength: 255
          nullable: true
          type: string
        metadata:
          description: "You can specify up to 50 keys, with key names up to 40 characters\
            \ long and values up to 500 characters long. Metadata is useful for storing\
            \ additional, structured information on an object."
          nullable: true
          type: object
      type: object
    RequestPaymentMethodTypes:
      properties:
        payment_method_type:
          $ref: '#/components/schemas/PaymentMethodType'
        payment_experience:
          allOf:
          - $ref: '#/components/schemas/PaymentExperience'
          nullable: true
        card_networks:
          items:
            $ref: '#/components/schemas/CardNetwork'
          nullable: true
          type: array
        accepted_currencies:
          allOf:
          - $ref: '#/components/schemas/AcceptedCurrencies'
          nullable: true
        accepted_countries:
          allOf:
          - $ref: '#/components/schemas/AcceptedCountries'
          nullable: true
        minimum_amount:
          description: "Minimum amount supported by the processor. To be represented\
            \ in the lowest denomination of the target currency (For example, for\
            \ USD it should be in cents)"
          example: 1
          format: int32
          nullable: true
          type: integer
        maximum_amount:
          description: |-
            Maximum amount supported by the processor. To be represented in the lowest denomination of
            the target currency (For example, for USD it should be in cents)
          example: 1313
          format: int32
          nullable: true
          type: integer
        recurring_enabled:
          default: true
          description: Boolean to enable recurring payments / mandates. Default is
            true.
          example: false
          type: boolean
        installment_payment_enabled:
          default: true
          description: Boolean to enable installment / EMI / BNPL payments. Default
            is true.
          example: false
          type: boolean
      required:
      - installment_payment_enabled
      - payment_method_type
      - recurring_enabled
      type: object
    RequestSurchargeDetails:
      properties:
        surcharge_amount:
          format: int64
          type: integer
        tax_amount:
          format: int64
          nullable: true
          type: integer
      required:
      - surcharge_amount
      type: object
    RequiredFieldInfo:
      description: Required fields info used while listing the payment_method_data
      properties:
        required_field:
          description: Required field for a payment_method through a payment_method_type
          type: string
        display_name:
          description: Display name of the required field in the front-end
          type: string
        field_type:
          $ref: '#/components/schemas/FieldType'
        value:
          nullable: true
          type: string
      required:
      - display_name
      - field_type
      - required_field
      type: object
    RetrieveApiKeyResponse:
      description: The response body for retrieving an API Key.
      properties:
        key_id:
          description: The identifier for the API Key.
          example: 5hEEqkgJUyuxgSKGArHA4mWSnX
          maxLength: 64
          type: string
        merchant_id:
          description: The identifier for the Merchant Account.
          example: y3oqhf46pyzuxjbcn2giaqnb44
          maxLength: 64
          type: string
        name:
          description: The unique name for the API Key to help you identify it.
          example: Sandbox integration key
          maxLength: 64
          type: string
        description:
          description: The description to provide more context about the API Key.
          example: Key used by our developers to integrate with the sandbox environment
          maxLength: 256
          nullable: true
          type: string
        prefix:
          description: The first few characters of the plaintext API Key to help you
            identify it.
          maxLength: 64
          type: string
        created:
          description: The time at which the API Key was created.
          example: 2022-09-10T10:11:12Z
          format: date-time
          type: string
        expiration:
          $ref: '#/components/schemas/ApiKeyExpiration'
      required:
      - created
      - expiration
      - key_id
      - merchant_id
      - name
      - prefix
      type: object
    RetrievePaymentLinkRequest:
      example:
        client_secret: client_secret
      properties:
        client_secret:
          nullable: true
          type: string
      type: object
    RetrievePaymentLinkResponse:
      example:
        link_to_pay: link_to_pay
        amount: 0
        payment_link_id: payment_link_id
        created_at: 2000-01-23T04:56:07.000+00:00
        description: description
        currency: ""
        merchant_id: merchant_id
        expiry: 2000-01-23T04:56:07.000+00:00
        status: null
      properties:
        payment_link_id:
          type: string
        merchant_id:
          type: string
        link_to_pay:
          type: string
        amount:
          format: int64
          type: integer
        created_at:
          format: date-time
          type: string
        expiry:
          format: date-time
          nullable: true
          type: string
        description:
          nullable: true
          type: string
        status:
          $ref: '#/components/schemas/PaymentLinkStatus'
        currency:
          allOf:
          - $ref: '#/components/schemas/Currency'
          nullable: true
      required:
      - amount
      - created_at
      - link_to_pay
      - merchant_id
      - payment_link_id
      - status
      type: object
    RetryAction:
      enum:
      - manual_retry
      - requeue
      type: string
    RevokeApiKeyResponse:
      description: The response body for revoking an API Key.
      properties:
        merchant_id:
          description: The identifier for the Merchant Account.
          example: y3oqhf46pyzuxjbcn2giaqnb44
          maxLength: 64
          type: string
        key_id:
          description: The identifier for the API Key.
          example: 5hEEqkgJUyuxgSKGArHA4mWSnX
          maxLength: 64
          type: string
        revoked:
          description: Indicates whether the API key was revoked or not.
          example: true
          type: boolean
      required:
      - key_id
      - merchant_id
      - revoked
      type: object
    RewardData:
      properties:
        merchant_id:
          description: The merchant ID with which we have to call the connector
          type: string
      required:
      - merchant_id
      type: object
    RoutingAlgorithm:
      description: The routing algorithm to be used to process the incoming request
        from merchant to outgoing payment processor or payment method. The default
        is 'Custom'
      enum:
      - round_robin
      - max_conversion
      - min_cost
      - custom
      example: custom
      type: string
    SamsungPayWalletData:
      properties:
        token:
          description: The encrypted payment token from Samsung
          type: string
      required:
      - token
      type: object
    SdkNextAction:
      properties:
        next_action:
          $ref: '#/components/schemas/NextActionCall'
      required:
      - next_action
      type: object
    SecretInfoToInitiateSdk:
      properties:
        display:
          type: string
        payment:
          type: string
      required:
      - display
      - payment
      type: object
    SepaAndBacsBillingDetails:
      properties:
        email:
          description: The Email ID for SEPA and BACS billing
          example: example@me.com
          type: string
        name:
          description: The billing name for SEPA and BACS billing
          example: Jane Doe
          type: string
      required:
      - email
      - name
      type: object
    SepaBankTransfer:
      properties:
        bank_name:
          description: Bank name
          example: Deutsche Bank
          nullable: true
          type: string
        bank_country_code:
          allOf:
          - $ref: '#/components/schemas/CountryAlpha2'
          nullable: true
        bank_city:
          description: Bank city
          example: California
          nullable: true
          type: string
        iban:
          description: International Bank Account Number (iban) - used in many countries
            for identifying a bank along with it's customer.
          example: DE89370400440532013000
          type: string
        bic:
          description: "[8 / 11 digits] Bank Identifier Code (bic) / Swift Code -\
            \ used in many countries for identifying a bank and it's branches"
          example: HSBCGB2LXXX
          type: string
      required:
      - bic
      - iban
      type: object
    SepaBankTransferInstructions:
      properties:
        account_holder_name:
          example: Jane Doe
          type: string
        bic:
          example: "1024419982"
          type: string
        country:
          type: string
        iban:
          example: "123456789"
          type: string
      required:
      - account_holder_name
      - bic
      - country
      - iban
      type: object
    SessionToken:
      example:
        wallet_name: no_session_token_received
      nullable: true
      properties:
        wallet_name:
          enum:
          - no_session_token_received
          type: string
      required:
      - wallet_name
      type: object
    SessionTokenInfo:
      properties:
        certificate:
          type: string
        certificate_keys:
          type: string
        merchant_identifier:
          type: string
        display_name:
          type: string
        initiative:
          type: string
        initiative_context:
          type: string
      required:
      - certificate
      - certificate_keys
      - display_name
      - initiative
      - initiative_context
      - merchant_identifier
      type: object
    SurchargeDetailsResponse:
      properties:
        surcharge:
          $ref: '#/components/schemas/SurchargeResponse'
        tax_on_surcharge:
          allOf:
          - $ref: '#/components/schemas/SurchargePercentage'
          nullable: true
        display_surcharge_amount:
          description: surcharge amount for this payment
          format: double
          type: number
        display_tax_on_surcharge_amount:
          description: tax on surcharge amount for this payment
          format: double
          type: number
        display_total_surcharge_amount:
          description: sum of display_surcharge_amount and display_tax_on_surcharge_amount
          format: double
          type: number
        display_final_amount:
          description: "sum of original amount,"
          format: double
          type: number
      required:
      - display_final_amount
      - display_surcharge_amount
      - display_tax_on_surcharge_amount
      - display_total_surcharge_amount
      - surcharge
      type: object
    SurchargePercentage:
      properties:
        percentage:
          format: float
          type: number
      required:
      - percentage
      type: object
    SurchargeResponse:
      discriminator:
        propertyName: type
      oneOf:
      - $ref: '#/components/schemas/SurchargeResponse_oneOf'
      - $ref: '#/components/schemas/SurchargeResponse_oneOf_1'
    SwishQrData:
      type: object
    ThirdPartySdkSessionResponse:
      properties:
        secrets:
          $ref: '#/components/schemas/SecretInfoToInitiateSdk'
      required:
      - secrets
      type: object
    TimeRange:
      properties:
        start_time:
          description: The start time to filter payments list or to get list of filters.
            To get list of filters start time is needed to be passed
          format: date-time
          type: string
        end_time:
          description: The end time to filter payments list or to get list of filters.
            If not passed the default time is now
          format: date-time
          nullable: true
          type: string
      required:
      - start_time
      type: object
    TouchNGoRedirection:
      type: object
    UpdateApiKeyRequest:
      description: The request body for updating an API Key.
      properties:
        name:
          description: A unique name for the API Key to help you identify it.
          example: Sandbox integration key
          maxLength: 64
          nullable: true
          type: string
        description:
          description: A description to provide more context about the API Key.
          example: Key used by our developers to integrate with the sandbox environment
          maxLength: 256
          nullable: true
          type: string
        expiration:
          allOf:
          - $ref: '#/components/schemas/ApiKeyExpiration'
          nullable: true
      type: object
    UpiData:
      properties:
        vpa_id:
          example: successtest@iata
          nullable: true
          type: string
      type: object
    VoucherData:
      oneOf:
      - $ref: '#/components/schemas/VoucherData_oneOf'
      - enum:
        - efecty
        type: string
      - enum:
        - pago_efectivo
        type: string
      - enum:
        - red_compra
        type: string
      - enum:
        - red_pagos
        type: string
      - $ref: '#/components/schemas/VoucherData_oneOf_1'
      - $ref: '#/components/schemas/VoucherData_oneOf_2'
      - enum:
        - oxxo
        type: string
      - $ref: '#/components/schemas/VoucherData_oneOf_3'
      - $ref: '#/components/schemas/VoucherData_oneOf_4'
      - $ref: '#/components/schemas/VoucherData_oneOf_5'
      - $ref: '#/components/schemas/VoucherData_oneOf_6'
      - $ref: '#/components/schemas/VoucherData_oneOf_7'
      - $ref: '#/components/schemas/VoucherData_oneOf_8'
    WalletData:
      oneOf:
      - $ref: '#/components/schemas/WalletData_oneOf'
      - $ref: '#/components/schemas/WalletData_oneOf_1'
      - $ref: '#/components/schemas/WalletData_oneOf_2'
      - $ref: '#/components/schemas/WalletData_oneOf_3'
      - $ref: '#/components/schemas/WalletData_oneOf_4'
      - $ref: '#/components/schemas/WalletData_oneOf_5'
      - $ref: '#/components/schemas/WalletData_oneOf_6'
      - $ref: '#/components/schemas/WalletData_oneOf_7'
      - $ref: '#/components/schemas/WalletData_oneOf_8'
      - $ref: '#/components/schemas/WalletData_oneOf_9'
      - $ref: '#/components/schemas/WalletData_oneOf_10'
      - $ref: '#/components/schemas/WalletData_oneOf_11'
      - $ref: '#/components/schemas/WalletData_oneOf_12'
      - $ref: '#/components/schemas/WalletData_oneOf_13'
      - $ref: '#/components/schemas/WalletData_oneOf_14'
      - $ref: '#/components/schemas/WalletData_oneOf_15'
      - $ref: '#/components/schemas/WalletData_oneOf_16'
      - $ref: '#/components/schemas/WalletData_oneOf_17'
      - $ref: '#/components/schemas/WalletData_oneOf_18'
      - $ref: '#/components/schemas/WalletData_oneOf_19'
      - $ref: '#/components/schemas/WalletData_oneOf_20'
      - $ref: '#/components/schemas/WalletData_oneOf_21'
      - $ref: '#/components/schemas/WalletData_oneOf_22'
      - $ref: '#/components/schemas/WalletData_oneOf_23'
      - $ref: '#/components/schemas/WalletData_oneOf_24'
      - $ref: '#/components/schemas/WalletData_oneOf_25'
    WeChatPay:
      type: object
    WeChatPayQr:
      type: object
    WeChatPayRedirection:
      type: object
    WebhookDetails:
      properties:
        webhook_version:
          description: The version for Webhook
          example: 1.0.2
          maxLength: 255
          nullable: true
          type: string
        webhook_username:
          description: The user name for Webhook login
          example: ekart_retail
          maxLength: 255
          nullable: true
          type: string
        webhook_password:
          description: The password for Webhook login
          example: ekart@123
          maxLength: 255
          nullable: true
          type: string
        webhook_url:
          description: The url for the webhook endpoint
          example: www.ekart.com/webhooks
          nullable: true
          type: string
        payment_created_enabled:
          description: "If this property is true, a webhook message is posted whenever\
            \ a new payment is created"
          example: true
          nullable: true
          type: boolean
        payment_succeeded_enabled:
          description: "If this property is true, a webhook message is posted whenever\
            \ a payment is successful"
          example: true
          nullable: true
          type: boolean
        payment_failed_enabled:
          description: "If this property is true, a webhook message is posted whenever\
            \ a payment fails"
          example: true
          nullable: true
          type: boolean
      type: object
    AcceptedCountries_oneOf:
      properties:
        type:
          enum:
          - enable_only
          type: string
        list:
          items:
            $ref: '#/components/schemas/CountryAlpha2'
          type: array
      required:
      - list
      - type
      type: object
    AcceptedCountries_oneOf_1:
      properties:
        type:
          enum:
          - disable_only
          type: string
        list:
          items:
            $ref: '#/components/schemas/CountryAlpha2'
          type: array
      required:
      - list
      - type
      type: object
    AcceptedCountries_oneOf_2:
      properties:
        type:
          enum:
          - all_accepted
          type: string
      required:
      - type
      type: object
    AcceptedCurrencies_oneOf:
      properties:
        type:
          enum:
          - enable_only
          type: string
        list:
          items:
            $ref: '#/components/schemas/Currency'
          type: array
      required:
      - list
      - type
      type: object
    AcceptedCurrencies_oneOf_1:
      properties:
        type:
          enum:
          - disable_only
          type: string
        list:
          items:
            $ref: '#/components/schemas/Currency'
          type: array
      required:
      - list
      - type
      type: object
    BankDebitData_oneOf_ach_bank_debit:
      description: Payment Method data for Ach bank debit
      properties:
        billing_details:
          $ref: '#/components/schemas/BankDebitBilling'
        account_number:
          description: Account number for ach bank debit payment
          example: "000123456789"
          type: string
        routing_number:
          description: Routing number for ach bank debit payment
          example: "110000000"
          type: string
        card_holder_name:
          example: John Test
          type: string
        bank_account_holder_name:
          example: John Doe
          type: string
        bank_name:
          example: ACH
          type: string
        bank_type:
          example: Checking
          type: string
        bank_holder_type:
          example: Personal
          type: string
      required:
      - account_number
      - bank_account_holder_name
      - bank_holder_type
      - bank_name
      - bank_type
      - billing_details
      - card_holder_name
      - routing_number
      type: object
    BankDebitData_oneOf:
      properties:
        ach_bank_debit:
          $ref: '#/components/schemas/BankDebitData_oneOf_ach_bank_debit'
      required:
      - ach_bank_debit
      type: object
    BankDebitData_oneOf_1_sepa_bank_debit:
      properties:
        billing_details:
          $ref: '#/components/schemas/BankDebitBilling'
        iban:
          description: International bank account number (iban) for SEPA
          example: DE89370400440532013000
          type: string
        bank_account_holder_name:
          description: Owner name for bank debit
          example: A. Schneider
          type: string
      required:
      - bank_account_holder_name
      - billing_details
      - iban
      type: object
    BankDebitData_oneOf_1:
      properties:
        sepa_bank_debit:
          $ref: '#/components/schemas/BankDebitData_oneOf_1_sepa_bank_debit'
      required:
      - sepa_bank_debit
      type: object
    BankDebitData_oneOf_2_becs_bank_debit:
      properties:
        billing_details:
          $ref: '#/components/schemas/BankDebitBilling'
        account_number:
          description: Account number for Becs payment method
          example: "000123456"
          type: string
        bsb_number:
          description: Bank-State-Branch (bsb) number
          example: "000000"
          type: string
        bank_account_holder_name:
          description: Owner name for bank debit
          example: A. Schneider
          nullable: true
          type: string
      required:
      - account_number
      - billing_details
      - bsb_number
      type: object
    BankDebitData_oneOf_2:
      properties:
        becs_bank_debit:
          $ref: '#/components/schemas/BankDebitData_oneOf_2_becs_bank_debit'
      required:
      - becs_bank_debit
      type: object
    BankDebitData_oneOf_3_bacs_bank_debit:
      properties:
        billing_details:
          $ref: '#/components/schemas/BankDebitBilling'
        account_number:
          description: Account number for Bacs payment method
          example: "00012345"
          type: string
        sort_code:
          description: Sort code for Bacs payment method
          example: "108800"
          type: string
        bank_account_holder_name:
          description: holder name for bank debit
          example: A. Schneider
          type: string
      required:
      - account_number
      - bank_account_holder_name
      - billing_details
      - sort_code
      type: object
    BankDebitData_oneOf_3:
      properties:
        bacs_bank_debit:
          $ref: '#/components/schemas/BankDebitData_oneOf_3_bacs_bank_debit'
      required:
      - bacs_bank_debit
      type: object
    BankRedirectData_oneOf_bancontact_card:
      properties:
        card_number:
          description: The card number
          example: "4242424242424242"
          type: string
        card_exp_month:
          description: The card's expiry month
          example: "24"
          type: string
        card_exp_year:
          description: The card's expiry year
          example: "24"
          type: string
        card_holder_name:
          description: The card holder's name
          example: John Test
          type: string
        billing_details:
          allOf:
          - $ref: '#/components/schemas/BankRedirectBilling'
          nullable: true
      required:
      - card_exp_month
      - card_exp_year
      - card_holder_name
      - card_number
      type: object
    BankRedirectData_oneOf:
      properties:
        bancontact_card:
          $ref: '#/components/schemas/BankRedirectData_oneOf_bancontact_card'
      required:
      - bancontact_card
      type: object
    BankRedirectData_oneOf_1:
      properties:
        bizum:
          type: object
      required:
      - bizum
      type: object
    BankRedirectData_oneOf_2_blik:
      properties:
        blik_code:
          nullable: true
          type: string
      type: object
    BankRedirectData_oneOf_2:
      properties:
        blik:
          $ref: '#/components/schemas/BankRedirectData_oneOf_2_blik'
      required:
      - blik
      type: object
    BankRedirectData_oneOf_3_eps:
      properties:
        billing_details:
          allOf:
          - $ref: '#/components/schemas/BankRedirectBilling'
          nullable: true
        bank_name:
          $ref: '#/components/schemas/BankNames'
        country:
          $ref: '#/components/schemas/CountryAlpha2'
      required:
      - bank_name
      - country
      type: object
    BankRedirectData_oneOf_3:
      properties:
        eps:
          $ref: '#/components/schemas/BankRedirectData_oneOf_3_eps'
      required:
      - eps
      type: object
    BankRedirectData_oneOf_4_giropay:
      properties:
        billing_details:
          $ref: '#/components/schemas/BankRedirectBilling'
        bank_account_bic:
          description: |-
            Bank account details for Giropay
            Bank account bic code
          nullable: true
          type: string
        bank_account_iban:
          description: Bank account iban
          nullable: true
          type: string
        country:
          $ref: '#/components/schemas/CountryAlpha2'
      required:
      - billing_details
      - country
      type: object
    BankRedirectData_oneOf_4:
      properties:
        giropay:
          $ref: '#/components/schemas/BankRedirectData_oneOf_4_giropay'
      required:
      - giropay
      type: object
    BankRedirectData_oneOf_5:
      properties:
        ideal:
          $ref: '#/components/schemas/BankRedirectData_oneOf_3_eps'
      required:
      - ideal
      type: object
    BankRedirectData_oneOf_6_interac:
      properties:
        country:
          $ref: '#/components/schemas/CountryAlpha2'
        email:
          example: john.doe@example.com
          type: string
      required:
      - country
      - email
      type: object
    BankRedirectData_oneOf_6:
      properties:
        interac:
          $ref: '#/components/schemas/BankRedirectData_oneOf_6_interac'
      required:
      - interac
      type: object
    BankRedirectData_oneOf_7_online_banking_czech_republic:
      properties:
        issuer:
          $ref: '#/components/schemas/BankNames'
      required:
      - issuer
      type: object
    BankRedirectData_oneOf_7:
      properties:
        online_banking_czech_republic:
          $ref: '#/components/schemas/BankRedirectData_oneOf_7_online_banking_czech_republic'
      required:
      - online_banking_czech_republic
      type: object
    BankRedirectData_oneOf_8_online_banking_finland:
      properties:
        email:
          nullable: true
          type: string
      type: object
    BankRedirectData_oneOf_8:
      properties:
        online_banking_finland:
          $ref: '#/components/schemas/BankRedirectData_oneOf_8_online_banking_finland'
      required:
      - online_banking_finland
      type: object
    BankRedirectData_oneOf_9:
      properties:
        online_banking_poland:
          $ref: '#/components/schemas/BankRedirectData_oneOf_7_online_banking_czech_republic'
      required:
      - online_banking_poland
      type: object
    BankRedirectData_oneOf_10:
      properties:
        online_banking_slovakia:
          $ref: '#/components/schemas/BankRedirectData_oneOf_7_online_banking_czech_republic'
      required:
      - online_banking_slovakia
      type: object
    BankRedirectData_oneOf_11_open_banking_uk:
      properties:
        issuer:
          $ref: '#/components/schemas/BankNames'
        country:
          $ref: '#/components/schemas/CountryAlpha2'
      required:
      - country
      - issuer
      type: object
    BankRedirectData_oneOf_11:
      properties:
        open_banking_uk:
          $ref: '#/components/schemas/BankRedirectData_oneOf_11_open_banking_uk'
      required:
      - open_banking_uk
      type: object
    BankRedirectData_oneOf_12_przelewy24:
      properties:
        bank_name:
          allOf:
          - $ref: '#/components/schemas/BankNames'
          nullable: true
        billing_details:
          $ref: '#/components/schemas/BankRedirectBilling'
      required:
      - billing_details
      type: object
    BankRedirectData_oneOf_12:
      properties:
        przelewy24:
          $ref: '#/components/schemas/BankRedirectData_oneOf_12_przelewy24'
      required:
      - przelewy24
      type: object
    BankRedirectData_oneOf_13_sofort:
      properties:
        billing_details:
          $ref: '#/components/schemas/BankRedirectBilling'
        country:
          $ref: '#/components/schemas/CountryAlpha2'
        preferred_language:
          description: The preferred language
          example: en
          type: string
      required:
      - billing_details
      - country
      - preferred_language
      type: object
    BankRedirectData_oneOf_13:
      properties:
        sofort:
          $ref: '#/components/schemas/BankRedirectData_oneOf_13_sofort'
      required:
      - sofort
      type: object
    BankRedirectData_oneOf_14_trustly:
      properties:
        country:
          $ref: '#/components/schemas/CountryAlpha2'
      required:
      - country
      type: object
    BankRedirectData_oneOf_14:
      properties:
        trustly:
          $ref: '#/components/schemas/BankRedirectData_oneOf_14_trustly'
      required:
      - trustly
      type: object
    BankRedirectData_oneOf_15:
      properties:
        online_banking_fpx:
          $ref: '#/components/schemas/BankRedirectData_oneOf_7_online_banking_czech_republic'
      required:
      - online_banking_fpx
      type: object
    BankRedirectData_oneOf_16:
      properties:
        online_banking_thailand:
          $ref: '#/components/schemas/BankRedirectData_oneOf_7_online_banking_czech_republic'
      required:
      - online_banking_thailand
      type: object
    BankTransferData_oneOf_ach_bank_transfer:
      properties:
        billing_details:
          $ref: '#/components/schemas/AchBillingDetails'
      required:
      - billing_details
      type: object
    BankTransferData_oneOf:
      properties:
        ach_bank_transfer:
          $ref: '#/components/schemas/BankTransferData_oneOf_ach_bank_transfer'
      required:
      - ach_bank_transfer
      type: object
    BankTransferData_oneOf_1_sepa_bank_transfer:
      properties:
        billing_details:
          $ref: '#/components/schemas/SepaAndBacsBillingDetails'
        country:
          $ref: '#/components/schemas/CountryAlpha2'
      required:
      - billing_details
      - country
      type: object
    BankTransferData_oneOf_1:
      properties:
        sepa_bank_transfer:
          $ref: '#/components/schemas/BankTransferData_oneOf_1_sepa_bank_transfer'
      required:
      - sepa_bank_transfer
      type: object
    BankTransferData_oneOf_2_bacs_bank_transfer:
      properties:
        billing_details:
          $ref: '#/components/schemas/SepaAndBacsBillingDetails'
      required:
      - billing_details
      type: object
    BankTransferData_oneOf_2:
      properties:
        bacs_bank_transfer:
          $ref: '#/components/schemas/BankTransferData_oneOf_2_bacs_bank_transfer'
      required:
      - bacs_bank_transfer
      type: object
    BankTransferData_oneOf_3_multibanco_bank_transfer:
      properties:
        billing_details:
          $ref: '#/components/schemas/MultibancoBillingDetails'
      required:
      - billing_details
      type: object
    BankTransferData_oneOf_3:
      properties:
        multibanco_bank_transfer:
          $ref: '#/components/schemas/BankTransferData_oneOf_3_multibanco_bank_transfer'
      required:
      - multibanco_bank_transfer
      type: object
    BankTransferData_oneOf_4_permata_bank_transfer:
      properties:
        billing_details:
          $ref: '#/components/schemas/DokuBillingDetails'
      required:
      - billing_details
      type: object
    BankTransferData_oneOf_4:
      properties:
        permata_bank_transfer:
          $ref: '#/components/schemas/BankTransferData_oneOf_4_permata_bank_transfer'
      required:
      - permata_bank_transfer
      type: object
    BankTransferData_oneOf_5:
      properties:
        bca_bank_transfer:
          $ref: '#/components/schemas/BankTransferData_oneOf_4_permata_bank_transfer'
      required:
      - bca_bank_transfer
      type: object
    BankTransferData_oneOf_6:
      properties:
        bni_va_bank_transfer:
          $ref: '#/components/schemas/BankTransferData_oneOf_4_permata_bank_transfer'
      required:
      - bni_va_bank_transfer
      type: object
    BankTransferData_oneOf_7:
      properties:
        bri_va_bank_transfer:
          $ref: '#/components/schemas/BankTransferData_oneOf_4_permata_bank_transfer'
      required:
      - bri_va_bank_transfer
      type: object
    BankTransferData_oneOf_8:
      properties:
        cimb_va_bank_transfer:
          $ref: '#/components/schemas/BankTransferData_oneOf_4_permata_bank_transfer'
      required:
      - cimb_va_bank_transfer
      type: object
    BankTransferData_oneOf_9:
      properties:
        danamon_va_bank_transfer:
          $ref: '#/components/schemas/BankTransferData_oneOf_4_permata_bank_transfer'
      required:
      - danamon_va_bank_transfer
      type: object
    BankTransferData_oneOf_10:
      properties:
        mandiri_va_bank_transfer:
          $ref: '#/components/schemas/BankTransferData_oneOf_4_permata_bank_transfer'
      required:
      - mandiri_va_bank_transfer
      type: object
    BankTransferData_oneOf_11:
      properties:
        pix:
          type: object
      required:
      - pix
      type: object
    BankTransferData_oneOf_12:
      properties:
        pse:
          type: object
      required:
      - pse
      type: object
    BankTransferInstructions_oneOf:
      properties:
        doku_bank_transfer_instructions:
          $ref: '#/components/schemas/DokuBankTransferInstructions'
      required:
      - doku_bank_transfer_instructions
      type: object
    BankTransferInstructions_oneOf_1:
      properties:
        ach_credit_transfer:
          $ref: '#/components/schemas/AchTransfer'
      required:
      - ach_credit_transfer
      type: object
    BankTransferInstructions_oneOf_2:
      properties:
        sepa_bank_instructions:
          $ref: '#/components/schemas/SepaBankTransferInstructions'
      required:
      - sepa_bank_instructions
      type: object
    BankTransferInstructions_oneOf_3:
      properties:
        bacs_bank_instructions:
          $ref: '#/components/schemas/BacsBankTransferInstructions'
      required:
      - bacs_bank_instructions
      type: object
    BankTransferInstructions_oneOf_4:
      properties:
        multibanco:
          $ref: '#/components/schemas/MultibancoTransferInstructions'
      required:
      - multibanco
      type: object
    BlocklistRequest_oneOf:
      example:
        data: data
        type: card_bin
      properties:
        type:
          enum:
          - card_bin
          type: string
        data:
          type: string
      required:
      - data
      - type
      type: object
    BlocklistRequest_oneOf_1:
      properties:
        type:
          enum:
          - fingerprint
          type: string
        data:
          type: string
      required:
      - data
      - type
      type: object
    BlocklistRequest_oneOf_2:
      properties:
        type:
          enum:
          - extended_card_bin
          type: string
        data:
          type: string
      required:
      - data
      - type
      type: object
    CardRedirectData_oneOf:
      properties:
        knet:
          type: object
      required:
      - knet
      type: object
    CardRedirectData_oneOf_1:
      properties:
        benefit:
          type: object
      required:
      - benefit
      type: object
    CardRedirectData_oneOf_2:
      properties:
        momo_atm:
          type: object
      required:
      - momo_atm
      type: object
    CardRedirectData_oneOf_3:
      properties:
        card_redirect:
          type: object
      required:
      - card_redirect
      type: object
    FieldType_oneOf_user_country:
      properties:
        options:
          items:
            type: string
          type: array
      required:
      - options
      type: object
    FieldType_oneOf:
      properties:
        user_country:
          $ref: '#/components/schemas/FieldType_oneOf_user_country'
      required:
      - user_country
      type: object
    FieldType_oneOf_1:
      properties:
        user_currency:
          $ref: '#/components/schemas/FieldType_oneOf_user_country'
      required:
      - user_currency
      type: object
    FieldType_oneOf_2:
      properties:
        user_address_country:
          $ref: '#/components/schemas/FieldType_oneOf_user_country'
      required:
      - user_address_country
      type: object
    FieldType_oneOf_3:
      properties:
        drop_down:
          $ref: '#/components/schemas/FieldType_oneOf_user_country'
      required:
      - drop_down
      type: object
    GiftCardData_oneOf:
      properties:
        givex:
          $ref: '#/components/schemas/GiftCardDetails'
      required:
      - givex
      type: object
    GiftCardData_oneOf_1:
      properties:
        pay_safe_card:
          type: object
      required:
      - pay_safe_card
      type: object
    MandateType_oneOf:
      example:
        single_use:
          end_date: 2023-09-10T23:59:59Z
          amount: 6540
          metadata: "{}"
          currency: null
          start_date: 2022-09-10T00:00:00Z
      properties:
        single_use:
          $ref: '#/components/schemas/MandateAmountData'
      required:
      - single_use
      type: object
    MandateType_oneOf_1:
      properties:
        multi_use:
          allOf:
          - $ref: '#/components/schemas/MandateAmountData'
          nullable: true
      required:
      - multi_use
      type: object
    NextActionData_oneOf:
      description: Contains the url for redirection flow
      properties:
        redirect_to_url:
          type: string
        type:
          enum:
          - redirect_to_url
          type: string
      required:
      - redirect_to_url
      - type
      type: object
    NextActionData_oneOf_1:
      description: "Informs the next steps for bank transfer and also contains the\
        \ charges details (ex: amount received, amount charged etc)"
      properties:
        bank_transfer_steps_and_charges_details:
          $ref: '#/components/schemas/BankTransferNextStepsData'
        type:
          enum:
          - display_bank_transfer_information
          type: string
      required:
      - bank_transfer_steps_and_charges_details
      - type
      type: object
    NextActionData_oneOf_2:
      description: Contains third party sdk session token response
      properties:
        session_token:
          allOf:
          - $ref: '#/components/schemas/SessionToken'
          nullable: true
        type:
          enum:
          - third_party_sdk_session_token
          type: string
      required:
      - type
      type: object
    NextActionData_oneOf_3:
      description: "Contains url for Qr code image, this qr code has to be shown in\
        \ sdk"
      properties:
        image_data_url:
          description: Hyperswitch generated image data source url
          type: string
        display_to_timestamp:
          format: int64
          nullable: true
          type: integer
        qr_code_url:
          description: The url for Qr code given by the connector
          type: string
        type:
          enum:
          - qr_code_information
          type: string
      required:
      - image_data_url
      - qr_code_url
      - type
      type: object
    NextActionData_oneOf_4:
      description: Contains the download url and the reference number for transaction
      properties:
        voucher_details:
          type: string
        type:
          enum:
          - display_voucher_information
          type: string
      required:
      - type
      - voucher_details
      type: object
    NextActionData_oneOf_5:
      description: "Contains duration for displaying a wait screen, wait screen with\
        \ timer is displayed by sdk"
      properties:
        display_from_timestamp:
          type: integer
        display_to_timestamp:
          nullable: true
          type: integer
        type:
          enum:
          - wait_screen_information
          type: string
      required:
      - display_from_timestamp
      - type
      type: object
    OutgoingWebhookContent_oneOf:
      properties:
        type:
          enum:
          - payment_details
          type: string
        object:
          $ref: '#/components/schemas/PaymentsResponse'
      required:
      - object
      - type
      type: object
    OutgoingWebhookContent_oneOf_1:
      properties:
        type:
          enum:
          - refund_details
          type: string
        object:
          $ref: '#/components/schemas/RefundResponse'
      required:
      - object
      - type
      type: object
    OutgoingWebhookContent_oneOf_2:
      properties:
        type:
          enum:
          - dispute_details
          type: string
        object:
          $ref: '#/components/schemas/DisputeResponse'
      required:
      - object
      - type
      type: object
    OutgoingWebhookContent_oneOf_3:
      properties:
        type:
          enum:
          - mandate_details
          type: string
        object:
          $ref: '#/components/schemas/MandateResponse'
      required:
      - object
      - type
      type: object
    PayLaterData_oneOf_klarna_redirect:
      description: For KlarnaRedirect as PayLater Option
      properties:
        billing_email:
          description: The billing email
          type: string
        billing_country:
          $ref: '#/components/schemas/CountryAlpha2'
      required:
      - billing_country
      - billing_email
      type: object
    PayLaterData_oneOf:
      properties:
        klarna_redirect:
          $ref: '#/components/schemas/PayLaterData_oneOf_klarna_redirect'
      required:
      - klarna_redirect
      type: object
    PayLaterData_oneOf_1_klarna_sdk:
      description: For Klarna Sdk as PayLater Option
      properties:
        token:
          description: The token for the sdk workflow
          type: string
      required:
      - token
      type: object
    PayLaterData_oneOf_1:
      properties:
        klarna_sdk:
          $ref: '#/components/schemas/PayLaterData_oneOf_1_klarna_sdk'
      required:
      - klarna_sdk
      type: object
    PayLaterData_oneOf_2:
      properties:
        affirm_redirect:
          description: For Affirm redirect as PayLater Option
          type: object
      required:
      - affirm_redirect
      type: object
    PayLaterData_oneOf_3_afterpay_clearpay_redirect:
      description: For AfterpayClearpay redirect as PayLater Option
      properties:
        billing_email:
          description: The billing email
          type: string
        billing_name:
          description: The billing name
          type: string
      required:
      - billing_email
      - billing_name
      type: object
    PayLaterData_oneOf_3:
      properties:
        afterpay_clearpay_redirect:
          $ref: '#/components/schemas/PayLaterData_oneOf_3_afterpay_clearpay_redirect'
      required:
      - afterpay_clearpay_redirect
      type: object
    PayLaterData_oneOf_4:
      properties:
        pay_bright_redirect:
          description: For PayBright Redirect as PayLater Option
          type: object
      required:
      - pay_bright_redirect
      type: object
    PayLaterData_oneOf_5:
      properties:
        walley_redirect:
          description: For WalleyRedirect as PayLater Option
          type: object
      required:
      - walley_redirect
      type: object
    PayLaterData_oneOf_6:
      properties:
        alma_redirect:
          description: For Alma Redirection as PayLater Option
          type: object
      required:
      - alma_redirect
      type: object
    PayLaterData_oneOf_7:
      properties:
        atome_redirect:
          type: object
      required:
      - atome_redirect
      type: object
    PaymentIdType_oneOf:
      properties:
        PaymentIntentId:
          description: The identifier for payment intent
          type: string
      required:
      - PaymentIntentId
      type: object
    PaymentIdType_oneOf_1:
      properties:
        ConnectorTransactionId:
          description: The identifier for connector transaction
          type: string
      required:
      - ConnectorTransactionId
      type: object
    PaymentIdType_oneOf_2:
      properties:
        PaymentAttemptId:
          description: The identifier for payment attempt
          type: string
      required:
      - PaymentAttemptId
      type: object
    PaymentIdType_oneOf_3:
      properties:
        PreprocessingId:
          description: The identifier for preprocessing step
          type: string
      required:
      - PreprocessingId
      type: object
    PaymentMethodData_oneOf:
      properties:
        card:
          $ref: '#/components/schemas/Card'
      required:
      - card
      type: object
    PaymentMethodData_oneOf_1:
      properties:
        card_redirect:
          $ref: '#/components/schemas/CardRedirectData'
      required:
      - card_redirect
      type: object
    PaymentMethodData_oneOf_2:
      properties:
        wallet:
          $ref: '#/components/schemas/WalletData'
      required:
      - wallet
      type: object
    PaymentMethodData_oneOf_3:
      properties:
        pay_later:
          $ref: '#/components/schemas/PayLaterData'
      required:
      - pay_later
      type: object
    PaymentMethodData_oneOf_4:
      properties:
        bank_redirect:
          $ref: '#/components/schemas/BankRedirectData'
      required:
      - bank_redirect
      type: object
    PaymentMethodData_oneOf_5:
      properties:
        bank_debit:
          $ref: '#/components/schemas/BankDebitData'
      required:
      - bank_debit
      type: object
    PaymentMethodData_oneOf_6:
      properties:
        bank_transfer:
          $ref: '#/components/schemas/BankTransferData'
      required:
      - bank_transfer
      type: object
    PaymentMethodData_oneOf_7:
      properties:
        crypto:
          $ref: '#/components/schemas/CryptoData'
      required:
      - crypto
      type: object
    PaymentMethodData_oneOf_8:
      properties:
        upi:
          $ref: '#/components/schemas/UpiData'
      required:
      - upi
      type: object
    PaymentMethodData_oneOf_9:
      properties:
        voucher:
          $ref: '#/components/schemas/VoucherData'
      required:
      - voucher
      type: object
    PaymentMethodData_oneOf_10:
      properties:
        gift_card:
          $ref: '#/components/schemas/GiftCardData'
      required:
      - gift_card
      type: object
    PaymentMethodData_oneOf_11:
      properties:
        card_token:
          $ref: '#/components/schemas/CardToken'
      required:
      - card_token
      type: object
    PayoutMethodData_oneOf:
      properties:
        bank:
          $ref: '#/components/schemas/Bank'
      required:
      - bank
      type: object
    PayoutRequest_oneOf:
      properties:
        PayoutActionRequest:
          $ref: '#/components/schemas/PayoutActionRequest'
      required:
      - PayoutActionRequest
      type: object
    PayoutRequest_oneOf_1:
      properties:
        PayoutCreateRequest:
          $ref: '#/components/schemas/PayoutCreateRequest'
      required:
      - PayoutCreateRequest
      type: object
    PayoutRequest_oneOf_2:
      properties:
        PayoutRetrieveRequest:
          $ref: '#/components/schemas/PayoutRetrieveRequest'
      required:
      - PayoutRetrieveRequest
      type: object
    SurchargeResponse_oneOf:
      properties:
        type:
          enum:
          - fixed
          type: string
        value:
          description: Fixed Surcharge value
          format: int64
          type: integer
      required:
      - type
      - value
      type: object
    SurchargeResponse_oneOf_1:
      properties:
        type:
          enum:
          - rate
          type: string
        value:
          $ref: '#/components/schemas/SurchargePercentage'
      required:
      - type
      - value
      type: object
    VoucherData_oneOf:
      properties:
        boleto:
          $ref: '#/components/schemas/BoletoVoucherData'
      required:
      - boleto
      type: object
    VoucherData_oneOf_1:
      properties:
        alfamart:
          $ref: '#/components/schemas/AlfamartVoucherData'
      required:
      - alfamart
      type: object
    VoucherData_oneOf_2:
      properties:
        indomaret:
          $ref: '#/components/schemas/IndomaretVoucherData'
      required:
      - indomaret
      type: object
    VoucherData_oneOf_3:
      properties:
        seven_eleven:
          $ref: '#/components/schemas/JCSVoucherData'
      required:
      - seven_eleven
      type: object
    VoucherData_oneOf_4:
      properties:
        lawson:
          $ref: '#/components/schemas/JCSVoucherData'
      required:
      - lawson
      type: object
    VoucherData_oneOf_5:
      properties:
        mini_stop:
          $ref: '#/components/schemas/JCSVoucherData'
      required:
      - mini_stop
      type: object
    VoucherData_oneOf_6:
      properties:
        family_mart:
          $ref: '#/components/schemas/JCSVoucherData'
      required:
      - family_mart
      type: object
    VoucherData_oneOf_7:
      properties:
        seicomart:
          $ref: '#/components/schemas/JCSVoucherData'
      required:
      - seicomart
      type: object
    VoucherData_oneOf_8:
      properties:
        pay_easy:
          $ref: '#/components/schemas/JCSVoucherData'
      required:
      - pay_easy
      type: object
    WalletData_oneOf:
      properties:
        ali_pay_qr:
          type: object
      required:
      - ali_pay_qr
      type: object
    WalletData_oneOf_1:
      properties:
        ali_pay_redirect:
          type: object
      required:
      - ali_pay_redirect
      type: object
    WalletData_oneOf_2:
      properties:
        ali_pay_hk_redirect:
          type: object
      required:
      - ali_pay_hk_redirect
      type: object
    WalletData_oneOf_3:
      properties:
        momo_redirect:
          type: object
      required:
      - momo_redirect
      type: object
    WalletData_oneOf_4:
      properties:
        kakao_pay_redirect:
          type: object
      required:
      - kakao_pay_redirect
      type: object
    WalletData_oneOf_5:
      properties:
        go_pay_redirect:
          type: object
      required:
      - go_pay_redirect
      type: object
    WalletData_oneOf_6:
      properties:
        gcash_redirect:
          type: object
      required:
      - gcash_redirect
      type: object
    WalletData_oneOf_7:
      properties:
        apple_pay:
          $ref: '#/components/schemas/ApplePayWalletData'
      required:
      - apple_pay
      type: object
    WalletData_oneOf_8:
      properties:
        apple_pay_redirect:
          type: object
      required:
      - apple_pay_redirect
      type: object
    WalletData_oneOf_9:
      properties:
        apple_pay_third_party_sdk:
          type: object
      required:
      - apple_pay_third_party_sdk
      type: object
    WalletData_oneOf_10:
      properties:
        dana_redirect:
          description: Wallet data for DANA redirect flow
          type: object
      required:
      - dana_redirect
      type: object
    WalletData_oneOf_11:
      properties:
        google_pay:
          $ref: '#/components/schemas/GooglePayWalletData'
      required:
      - google_pay
      type: object
    WalletData_oneOf_12:
      properties:
        google_pay_redirect:
          type: object
      required:
      - google_pay_redirect
      type: object
    WalletData_oneOf_13:
      properties:
        google_pay_third_party_sdk:
          type: object
      required:
      - google_pay_third_party_sdk
      type: object
    WalletData_oneOf_14:
      properties:
        mb_way_redirect:
          $ref: '#/components/schemas/MbWayRedirection'
      required:
      - mb_way_redirect
      type: object
    WalletData_oneOf_15:
      properties:
        mobile_pay_redirect:
          type: object
      required:
      - mobile_pay_redirect
      type: object
    WalletData_oneOf_16:
      properties:
        paypal_redirect:
          type: object
      required:
      - paypal_redirect
      type: object
    WalletData_oneOf_17:
      properties:
        paypal_sdk:
          $ref: '#/components/schemas/PayPalWalletData'
      required:
      - paypal_sdk
      type: object
    WalletData_oneOf_18:
      properties:
        samsung_pay:
          $ref: '#/components/schemas/SamsungPayWalletData'
      required:
      - samsung_pay
      type: object
    WalletData_oneOf_19:
      properties:
        twint_redirect:
          description: Wallet data for Twint Redirection
          type: object
      required:
      - twint_redirect
      type: object
    WalletData_oneOf_20:
      properties:
        vipps_redirect:
          description: Wallet data for Vipps Redirection
          type: object
      required:
      - vipps_redirect
      type: object
    WalletData_oneOf_21:
      properties:
        touch_n_go_redirect:
          type: object
      required:
      - touch_n_go_redirect
      type: object
    WalletData_oneOf_22:
      properties:
        we_chat_pay_redirect:
          type: object
      required:
      - we_chat_pay_redirect
      type: object
    WalletData_oneOf_23:
      properties:
        we_chat_pay_qr:
          type: object
      required:
      - we_chat_pay_qr
      type: object
    WalletData_oneOf_24:
      properties:
        cashapp_qr:
          type: object
      required:
      - cashapp_qr
      type: object
    WalletData_oneOf_25:
      properties:
        swish_qr:
          type: object
      required:
      - swish_qr
      type: object
  securitySchemes:
    admin_api_key:
      description: Admin API keys allow you to perform some privileged actions such
        as creating a merchant account and Merchant Connector account.
      in: header
      name: api-key
      type: apiKey
    api_key:
      description: API keys are the most common method of authentication and can be
        obtained from the HyperSwitch dashboard.
      in: header
      name: api-key
      type: apiKey
    ephemeral_key:
      description: "Ephemeral keys provide temporary access to singular data, such\
        \ as access to a single customer object for a short period of time."
      in: header
      name: api-key
      type: apiKey
    publishable_key:
      description: Publishable keys are a type of keys that can be public and have
        limited scope of usage.
      in: header
      name: api-key
      type: apiKey

