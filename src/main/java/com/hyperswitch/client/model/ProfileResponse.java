/*
 * Hyperswitch - API Documentation
 *  ## Get started  Hyperswitch provides a collection of APIs that enable you to process and manage payments. Our APIs accept and return JSON in the HTTP body, and return standard HTTP response codes.  You can consume the APIs directly using your favorite HTTP/REST library.  We have a testing environment referred to \"sandbox\", which you can setup to test API calls without affecting production data. Currently, our sandbox environment is live while our production environment is under development and will be available soon. You can sign up on our Dashboard to get API keys to access Hyperswitch API.  ### Environment  Use the following base URLs when making requests to the APIs:  | Environment   |  Base URL                          | |---------------|------------------------------------| | Sandbox       | <https://sandbox.hyperswitch.io>   | | Production    | <https://api.hyperswitch.io>       |  ## Authentication  When you sign up on our [dashboard](https://app.hyperswitch.io) and create a merchant account, you are given a secret key (also referred as api-key) and a publishable key. You may authenticate all API requests with Hyperswitch server by providing the appropriate key in the request Authorization header.  | Key             |  Description                                                                                  | |-----------------|-----------------------------------------------------------------------------------------------| | api-key         | Private key. Used to authenticate all API requests from your merchant server                  | | publishable key | Unique identifier for your account. Used to authenticate API requests from your app's client  |  Never share your secret api keys. Keep them guarded and secure. 
 *
 * The version of the OpenAPI document: 0.1.0
 * Contact: hyperswitch@juspay.in
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.hyperswitch.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.hyperswitch.client.model.AuthenticationConnectorDetails;
import com.hyperswitch.client.model.BusinessPaymentLinkConfig;
import com.hyperswitch.client.model.BusinessPayoutLinkConfig;
import com.hyperswitch.client.model.ExtendedCardInfoConfig;
import com.hyperswitch.client.model.OrderFulfillmentTimeOrigin;
import com.hyperswitch.client.model.WebhookDetails;
import java.util.ArrayList;
import java.util.List;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * ProfileResponse
 */
@JsonPropertyOrder({
  ProfileResponse.JSON_PROPERTY_MERCHANT_ID,
  ProfileResponse.JSON_PROPERTY_ID,
  ProfileResponse.JSON_PROPERTY_PROFILE_NAME,
  ProfileResponse.JSON_PROPERTY_RETURN_URL,
  ProfileResponse.JSON_PROPERTY_ENABLE_PAYMENT_RESPONSE_HASH,
  ProfileResponse.JSON_PROPERTY_PAYMENT_RESPONSE_HASH_KEY,
  ProfileResponse.JSON_PROPERTY_REDIRECT_TO_MERCHANT_WITH_HTTP_POST,
  ProfileResponse.JSON_PROPERTY_WEBHOOK_DETAILS,
  ProfileResponse.JSON_PROPERTY_METADATA,
  ProfileResponse.JSON_PROPERTY_APPLEPAY_VERIFIED_DOMAINS,
  ProfileResponse.JSON_PROPERTY_SESSION_EXPIRY,
  ProfileResponse.JSON_PROPERTY_PAYMENT_LINK_CONFIG,
  ProfileResponse.JSON_PROPERTY_AUTHENTICATION_CONNECTOR_DETAILS,
  ProfileResponse.JSON_PROPERTY_USE_BILLING_AS_PAYMENT_METHOD_BILLING,
  ProfileResponse.JSON_PROPERTY_EXTENDED_CARD_INFO_CONFIG,
  ProfileResponse.JSON_PROPERTY_COLLECT_SHIPPING_DETAILS_FROM_WALLET_CONNECTOR_IF_REQUIRED,
  ProfileResponse.JSON_PROPERTY_COLLECT_BILLING_DETAILS_FROM_WALLET_CONNECTOR_IF_REQUIRED,
  ProfileResponse.JSON_PROPERTY_ALWAYS_COLLECT_SHIPPING_DETAILS_FROM_WALLET_CONNECTOR,
  ProfileResponse.JSON_PROPERTY_ALWAYS_COLLECT_BILLING_DETAILS_FROM_WALLET_CONNECTOR,
  ProfileResponse.JSON_PROPERTY_IS_CONNECTOR_AGNOSTIC_MIT_ENABLED,
  ProfileResponse.JSON_PROPERTY_PAYOUT_LINK_CONFIG,
  ProfileResponse.JSON_PROPERTY_OUTGOING_WEBHOOK_CUSTOM_HTTP_HEADERS,
  ProfileResponse.JSON_PROPERTY_ORDER_FULFILLMENT_TIME,
  ProfileResponse.JSON_PROPERTY_ORDER_FULFILLMENT_TIME_ORIGIN,
  ProfileResponse.JSON_PROPERTY_TAX_CONNECTOR_ID,
  ProfileResponse.JSON_PROPERTY_IS_TAX_CONNECTOR_ENABLED,
  ProfileResponse.JSON_PROPERTY_IS_NETWORK_TOKENIZATION_ENABLED,
  ProfileResponse.JSON_PROPERTY_SHOULD_COLLECT_CVV_DURING_PAYMENT
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class ProfileResponse {
  public static final String JSON_PROPERTY_MERCHANT_ID = "merchant_id";
  private String merchantId;

  public static final String JSON_PROPERTY_ID = "id";
  private String id;

  public static final String JSON_PROPERTY_PROFILE_NAME = "profile_name";
  private String profileName;

  public static final String JSON_PROPERTY_RETURN_URL = "return_url";
  private JsonNullable<String> returnUrl = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ENABLE_PAYMENT_RESPONSE_HASH = "enable_payment_response_hash";
  private Boolean enablePaymentResponseHash = true;

  public static final String JSON_PROPERTY_PAYMENT_RESPONSE_HASH_KEY = "payment_response_hash_key";
  private JsonNullable<String> paymentResponseHashKey = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_REDIRECT_TO_MERCHANT_WITH_HTTP_POST = "redirect_to_merchant_with_http_post";
  private Boolean redirectToMerchantWithHttpPost = false;

  public static final String JSON_PROPERTY_WEBHOOK_DETAILS = "webhook_details";
  private JsonNullable<WebhookDetails> webhookDetails = JsonNullable.<WebhookDetails>undefined();

  public static final String JSON_PROPERTY_METADATA = "metadata";
  private JsonNullable<Object> metadata = JsonNullable.<Object>undefined();

  public static final String JSON_PROPERTY_APPLEPAY_VERIFIED_DOMAINS = "applepay_verified_domains";
  private JsonNullable<List<String>> applepayVerifiedDomains = JsonNullable.<List<String>>undefined();

  public static final String JSON_PROPERTY_SESSION_EXPIRY = "session_expiry";
  private JsonNullable<Long> sessionExpiry = JsonNullable.<Long>undefined();

  public static final String JSON_PROPERTY_PAYMENT_LINK_CONFIG = "payment_link_config";
  private JsonNullable<BusinessPaymentLinkConfig> paymentLinkConfig = JsonNullable.<BusinessPaymentLinkConfig>undefined();

  public static final String JSON_PROPERTY_AUTHENTICATION_CONNECTOR_DETAILS = "authentication_connector_details";
  private JsonNullable<AuthenticationConnectorDetails> authenticationConnectorDetails = JsonNullable.<AuthenticationConnectorDetails>undefined();

  public static final String JSON_PROPERTY_USE_BILLING_AS_PAYMENT_METHOD_BILLING = "use_billing_as_payment_method_billing";
  private JsonNullable<Boolean> useBillingAsPaymentMethodBilling = JsonNullable.<Boolean>undefined();

  public static final String JSON_PROPERTY_EXTENDED_CARD_INFO_CONFIG = "extended_card_info_config";
  private JsonNullable<ExtendedCardInfoConfig> extendedCardInfoConfig = JsonNullable.<ExtendedCardInfoConfig>undefined();

  public static final String JSON_PROPERTY_COLLECT_SHIPPING_DETAILS_FROM_WALLET_CONNECTOR_IF_REQUIRED = "collect_shipping_details_from_wallet_connector_if_required";
  private JsonNullable<Boolean> collectShippingDetailsFromWalletConnectorIfRequired = JsonNullable.<Boolean>of(false);

  public static final String JSON_PROPERTY_COLLECT_BILLING_DETAILS_FROM_WALLET_CONNECTOR_IF_REQUIRED = "collect_billing_details_from_wallet_connector_if_required";
  private JsonNullable<Boolean> collectBillingDetailsFromWalletConnectorIfRequired = JsonNullable.<Boolean>of(false);

  public static final String JSON_PROPERTY_ALWAYS_COLLECT_SHIPPING_DETAILS_FROM_WALLET_CONNECTOR = "always_collect_shipping_details_from_wallet_connector";
  private JsonNullable<Boolean> alwaysCollectShippingDetailsFromWalletConnector = JsonNullable.<Boolean>of(false);

  public static final String JSON_PROPERTY_ALWAYS_COLLECT_BILLING_DETAILS_FROM_WALLET_CONNECTOR = "always_collect_billing_details_from_wallet_connector";
  private JsonNullable<Boolean> alwaysCollectBillingDetailsFromWalletConnector = JsonNullable.<Boolean>of(false);

  public static final String JSON_PROPERTY_IS_CONNECTOR_AGNOSTIC_MIT_ENABLED = "is_connector_agnostic_mit_enabled";
  private JsonNullable<Boolean> isConnectorAgnosticMitEnabled = JsonNullable.<Boolean>undefined();

  public static final String JSON_PROPERTY_PAYOUT_LINK_CONFIG = "payout_link_config";
  private JsonNullable<BusinessPayoutLinkConfig> payoutLinkConfig = JsonNullable.<BusinessPayoutLinkConfig>undefined();

  public static final String JSON_PROPERTY_OUTGOING_WEBHOOK_CUSTOM_HTTP_HEADERS = "outgoing_webhook_custom_http_headers";
  private JsonNullable<Object> outgoingWebhookCustomHttpHeaders = JsonNullable.<Object>undefined();

  public static final String JSON_PROPERTY_ORDER_FULFILLMENT_TIME = "order_fulfillment_time";
  private JsonNullable<Integer> orderFulfillmentTime = JsonNullable.<Integer>undefined();

  public static final String JSON_PROPERTY_ORDER_FULFILLMENT_TIME_ORIGIN = "order_fulfillment_time_origin";
  private JsonNullable<OrderFulfillmentTimeOrigin> orderFulfillmentTimeOrigin = JsonNullable.<OrderFulfillmentTimeOrigin>undefined();

  public static final String JSON_PROPERTY_TAX_CONNECTOR_ID = "tax_connector_id";
  private JsonNullable<String> taxConnectorId = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_IS_TAX_CONNECTOR_ENABLED = "is_tax_connector_enabled";
  private Boolean isTaxConnectorEnabled;

  public static final String JSON_PROPERTY_IS_NETWORK_TOKENIZATION_ENABLED = "is_network_tokenization_enabled";
  private Boolean isNetworkTokenizationEnabled = false;

  public static final String JSON_PROPERTY_SHOULD_COLLECT_CVV_DURING_PAYMENT = "should_collect_cvv_during_payment";
  private Boolean shouldCollectCvvDuringPayment;

  public ProfileResponse() {
  }

  public ProfileResponse merchantId(String merchantId) {
    
    this.merchantId = merchantId;
    return this;
  }

   /**
   * The identifier for Merchant Account
   * @return merchantId
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_MERCHANT_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getMerchantId() {
    return merchantId;
  }


  @JsonProperty(JSON_PROPERTY_MERCHANT_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setMerchantId(String merchantId) {
    this.merchantId = merchantId;
  }


  public ProfileResponse id(String id) {
    
    this.id = id;
    return this;
  }

   /**
   * The identifier for profile. This must be used for creating merchant accounts, payments and payouts
   * @return id
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setId(String id) {
    this.id = id;
  }


  public ProfileResponse profileName(String profileName) {
    
    this.profileName = profileName;
    return this;
  }

   /**
   * Name of the profile
   * @return profileName
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_PROFILE_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getProfileName() {
    return profileName;
  }


  @JsonProperty(JSON_PROPERTY_PROFILE_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setProfileName(String profileName) {
    this.profileName = profileName;
  }


  public ProfileResponse returnUrl(String returnUrl) {
    this.returnUrl = JsonNullable.<String>of(returnUrl);
    
    return this;
  }

   /**
   * The URL to redirect after the completion of the operation
   * @return returnUrl
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public String getReturnUrl() {
        return returnUrl.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_RETURN_URL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getReturnUrl_JsonNullable() {
    return returnUrl;
  }
  
  @JsonProperty(JSON_PROPERTY_RETURN_URL)
  public void setReturnUrl_JsonNullable(JsonNullable<String> returnUrl) {
    this.returnUrl = returnUrl;
  }

  public void setReturnUrl(String returnUrl) {
    this.returnUrl = JsonNullable.<String>of(returnUrl);
  }


  public ProfileResponse enablePaymentResponseHash(Boolean enablePaymentResponseHash) {
    
    this.enablePaymentResponseHash = enablePaymentResponseHash;
    return this;
  }

   /**
   * A boolean value to indicate if payment response hash needs to be enabled
   * @return enablePaymentResponseHash
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_ENABLE_PAYMENT_RESPONSE_HASH)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Boolean getEnablePaymentResponseHash() {
    return enablePaymentResponseHash;
  }


  @JsonProperty(JSON_PROPERTY_ENABLE_PAYMENT_RESPONSE_HASH)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setEnablePaymentResponseHash(Boolean enablePaymentResponseHash) {
    this.enablePaymentResponseHash = enablePaymentResponseHash;
  }


  public ProfileResponse paymentResponseHashKey(String paymentResponseHashKey) {
    this.paymentResponseHashKey = JsonNullable.<String>of(paymentResponseHashKey);
    
    return this;
  }

   /**
   * Refers to the hash key used for calculating the signature for webhooks and redirect response. If the value is not provided, a value is automatically generated.
   * @return paymentResponseHashKey
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public String getPaymentResponseHashKey() {
        return paymentResponseHashKey.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PAYMENT_RESPONSE_HASH_KEY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getPaymentResponseHashKey_JsonNullable() {
    return paymentResponseHashKey;
  }
  
  @JsonProperty(JSON_PROPERTY_PAYMENT_RESPONSE_HASH_KEY)
  public void setPaymentResponseHashKey_JsonNullable(JsonNullable<String> paymentResponseHashKey) {
    this.paymentResponseHashKey = paymentResponseHashKey;
  }

  public void setPaymentResponseHashKey(String paymentResponseHashKey) {
    this.paymentResponseHashKey = JsonNullable.<String>of(paymentResponseHashKey);
  }


  public ProfileResponse redirectToMerchantWithHttpPost(Boolean redirectToMerchantWithHttpPost) {
    
    this.redirectToMerchantWithHttpPost = redirectToMerchantWithHttpPost;
    return this;
  }

   /**
   * A boolean value to indicate if redirect to merchant with http post needs to be enabled
   * @return redirectToMerchantWithHttpPost
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_REDIRECT_TO_MERCHANT_WITH_HTTP_POST)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Boolean getRedirectToMerchantWithHttpPost() {
    return redirectToMerchantWithHttpPost;
  }


  @JsonProperty(JSON_PROPERTY_REDIRECT_TO_MERCHANT_WITH_HTTP_POST)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setRedirectToMerchantWithHttpPost(Boolean redirectToMerchantWithHttpPost) {
    this.redirectToMerchantWithHttpPost = redirectToMerchantWithHttpPost;
  }


  public ProfileResponse webhookDetails(WebhookDetails webhookDetails) {
    this.webhookDetails = JsonNullable.<WebhookDetails>of(webhookDetails);
    
    return this;
  }

   /**
   * Get webhookDetails
   * @return webhookDetails
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public WebhookDetails getWebhookDetails() {
        return webhookDetails.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_WEBHOOK_DETAILS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<WebhookDetails> getWebhookDetails_JsonNullable() {
    return webhookDetails;
  }
  
  @JsonProperty(JSON_PROPERTY_WEBHOOK_DETAILS)
  public void setWebhookDetails_JsonNullable(JsonNullable<WebhookDetails> webhookDetails) {
    this.webhookDetails = webhookDetails;
  }

  public void setWebhookDetails(WebhookDetails webhookDetails) {
    this.webhookDetails = JsonNullable.<WebhookDetails>of(webhookDetails);
  }


  public ProfileResponse metadata(Object metadata) {
    this.metadata = JsonNullable.<Object>of(metadata);
    
    return this;
  }

   /**
   * Metadata is useful for storing additional, unstructured information on an object.
   * @return metadata
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public Object getMetadata() {
        return metadata.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_METADATA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Object> getMetadata_JsonNullable() {
    return metadata;
  }
  
  @JsonProperty(JSON_PROPERTY_METADATA)
  public void setMetadata_JsonNullable(JsonNullable<Object> metadata) {
    this.metadata = metadata;
  }

  public void setMetadata(Object metadata) {
    this.metadata = JsonNullable.<Object>of(metadata);
  }


  public ProfileResponse applepayVerifiedDomains(List<String> applepayVerifiedDomains) {
    this.applepayVerifiedDomains = JsonNullable.<List<String>>of(applepayVerifiedDomains);
    
    return this;
  }

  public ProfileResponse addApplepayVerifiedDomainsItem(String applepayVerifiedDomainsItem) {
    if (this.applepayVerifiedDomains == null || !this.applepayVerifiedDomains.isPresent()) {
      this.applepayVerifiedDomains = JsonNullable.<List<String>>of(new ArrayList<>());
    }
    try {
      this.applepayVerifiedDomains.get().add(applepayVerifiedDomainsItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Verified Apple Pay domains for a particular profile
   * @return applepayVerifiedDomains
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public List<String> getApplepayVerifiedDomains() {
        return applepayVerifiedDomains.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_APPLEPAY_VERIFIED_DOMAINS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<String>> getApplepayVerifiedDomains_JsonNullable() {
    return applepayVerifiedDomains;
  }
  
  @JsonProperty(JSON_PROPERTY_APPLEPAY_VERIFIED_DOMAINS)
  public void setApplepayVerifiedDomains_JsonNullable(JsonNullable<List<String>> applepayVerifiedDomains) {
    this.applepayVerifiedDomains = applepayVerifiedDomains;
  }

  public void setApplepayVerifiedDomains(List<String> applepayVerifiedDomains) {
    this.applepayVerifiedDomains = JsonNullable.<List<String>>of(applepayVerifiedDomains);
  }


  public ProfileResponse sessionExpiry(Long sessionExpiry) {
    this.sessionExpiry = JsonNullable.<Long>of(sessionExpiry);
    
    return this;
  }

   /**
   * Client Secret Default expiry for all payments created under this profile
   * @return sessionExpiry
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public Long getSessionExpiry() {
        return sessionExpiry.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_SESSION_EXPIRY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Long> getSessionExpiry_JsonNullable() {
    return sessionExpiry;
  }
  
  @JsonProperty(JSON_PROPERTY_SESSION_EXPIRY)
  public void setSessionExpiry_JsonNullable(JsonNullable<Long> sessionExpiry) {
    this.sessionExpiry = sessionExpiry;
  }

  public void setSessionExpiry(Long sessionExpiry) {
    this.sessionExpiry = JsonNullable.<Long>of(sessionExpiry);
  }


  public ProfileResponse paymentLinkConfig(BusinessPaymentLinkConfig paymentLinkConfig) {
    this.paymentLinkConfig = JsonNullable.<BusinessPaymentLinkConfig>of(paymentLinkConfig);
    
    return this;
  }

   /**
   * Get paymentLinkConfig
   * @return paymentLinkConfig
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public BusinessPaymentLinkConfig getPaymentLinkConfig() {
        return paymentLinkConfig.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PAYMENT_LINK_CONFIG)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<BusinessPaymentLinkConfig> getPaymentLinkConfig_JsonNullable() {
    return paymentLinkConfig;
  }
  
  @JsonProperty(JSON_PROPERTY_PAYMENT_LINK_CONFIG)
  public void setPaymentLinkConfig_JsonNullable(JsonNullable<BusinessPaymentLinkConfig> paymentLinkConfig) {
    this.paymentLinkConfig = paymentLinkConfig;
  }

  public void setPaymentLinkConfig(BusinessPaymentLinkConfig paymentLinkConfig) {
    this.paymentLinkConfig = JsonNullable.<BusinessPaymentLinkConfig>of(paymentLinkConfig);
  }


  public ProfileResponse authenticationConnectorDetails(AuthenticationConnectorDetails authenticationConnectorDetails) {
    this.authenticationConnectorDetails = JsonNullable.<AuthenticationConnectorDetails>of(authenticationConnectorDetails);
    
    return this;
  }

   /**
   * Get authenticationConnectorDetails
   * @return authenticationConnectorDetails
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public AuthenticationConnectorDetails getAuthenticationConnectorDetails() {
        return authenticationConnectorDetails.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_AUTHENTICATION_CONNECTOR_DETAILS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<AuthenticationConnectorDetails> getAuthenticationConnectorDetails_JsonNullable() {
    return authenticationConnectorDetails;
  }
  
  @JsonProperty(JSON_PROPERTY_AUTHENTICATION_CONNECTOR_DETAILS)
  public void setAuthenticationConnectorDetails_JsonNullable(JsonNullable<AuthenticationConnectorDetails> authenticationConnectorDetails) {
    this.authenticationConnectorDetails = authenticationConnectorDetails;
  }

  public void setAuthenticationConnectorDetails(AuthenticationConnectorDetails authenticationConnectorDetails) {
    this.authenticationConnectorDetails = JsonNullable.<AuthenticationConnectorDetails>of(authenticationConnectorDetails);
  }


  public ProfileResponse useBillingAsPaymentMethodBilling(Boolean useBillingAsPaymentMethodBilling) {
    this.useBillingAsPaymentMethodBilling = JsonNullable.<Boolean>of(useBillingAsPaymentMethodBilling);
    
    return this;
  }

   /**
   * Get useBillingAsPaymentMethodBilling
   * @return useBillingAsPaymentMethodBilling
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public Boolean getUseBillingAsPaymentMethodBilling() {
        return useBillingAsPaymentMethodBilling.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_USE_BILLING_AS_PAYMENT_METHOD_BILLING)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Boolean> getUseBillingAsPaymentMethodBilling_JsonNullable() {
    return useBillingAsPaymentMethodBilling;
  }
  
  @JsonProperty(JSON_PROPERTY_USE_BILLING_AS_PAYMENT_METHOD_BILLING)
  public void setUseBillingAsPaymentMethodBilling_JsonNullable(JsonNullable<Boolean> useBillingAsPaymentMethodBilling) {
    this.useBillingAsPaymentMethodBilling = useBillingAsPaymentMethodBilling;
  }

  public void setUseBillingAsPaymentMethodBilling(Boolean useBillingAsPaymentMethodBilling) {
    this.useBillingAsPaymentMethodBilling = JsonNullable.<Boolean>of(useBillingAsPaymentMethodBilling);
  }


  public ProfileResponse extendedCardInfoConfig(ExtendedCardInfoConfig extendedCardInfoConfig) {
    this.extendedCardInfoConfig = JsonNullable.<ExtendedCardInfoConfig>of(extendedCardInfoConfig);
    
    return this;
  }

   /**
   * Get extendedCardInfoConfig
   * @return extendedCardInfoConfig
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public ExtendedCardInfoConfig getExtendedCardInfoConfig() {
        return extendedCardInfoConfig.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_EXTENDED_CARD_INFO_CONFIG)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<ExtendedCardInfoConfig> getExtendedCardInfoConfig_JsonNullable() {
    return extendedCardInfoConfig;
  }
  
  @JsonProperty(JSON_PROPERTY_EXTENDED_CARD_INFO_CONFIG)
  public void setExtendedCardInfoConfig_JsonNullable(JsonNullable<ExtendedCardInfoConfig> extendedCardInfoConfig) {
    this.extendedCardInfoConfig = extendedCardInfoConfig;
  }

  public void setExtendedCardInfoConfig(ExtendedCardInfoConfig extendedCardInfoConfig) {
    this.extendedCardInfoConfig = JsonNullable.<ExtendedCardInfoConfig>of(extendedCardInfoConfig);
  }


  public ProfileResponse collectShippingDetailsFromWalletConnectorIfRequired(Boolean collectShippingDetailsFromWalletConnectorIfRequired) {
    this.collectShippingDetailsFromWalletConnectorIfRequired = JsonNullable.<Boolean>of(collectShippingDetailsFromWalletConnectorIfRequired);
    
    return this;
  }

   /**
   * A boolean value to indicate if customer shipping details needs to be collected from wallet connector only if it is required field for connector (Eg. Apple Pay, Google Pay etc)
   * @return collectShippingDetailsFromWalletConnectorIfRequired
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public Boolean getCollectShippingDetailsFromWalletConnectorIfRequired() {
        return collectShippingDetailsFromWalletConnectorIfRequired.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_COLLECT_SHIPPING_DETAILS_FROM_WALLET_CONNECTOR_IF_REQUIRED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Boolean> getCollectShippingDetailsFromWalletConnectorIfRequired_JsonNullable() {
    return collectShippingDetailsFromWalletConnectorIfRequired;
  }
  
  @JsonProperty(JSON_PROPERTY_COLLECT_SHIPPING_DETAILS_FROM_WALLET_CONNECTOR_IF_REQUIRED)
  public void setCollectShippingDetailsFromWalletConnectorIfRequired_JsonNullable(JsonNullable<Boolean> collectShippingDetailsFromWalletConnectorIfRequired) {
    this.collectShippingDetailsFromWalletConnectorIfRequired = collectShippingDetailsFromWalletConnectorIfRequired;
  }

  public void setCollectShippingDetailsFromWalletConnectorIfRequired(Boolean collectShippingDetailsFromWalletConnectorIfRequired) {
    this.collectShippingDetailsFromWalletConnectorIfRequired = JsonNullable.<Boolean>of(collectShippingDetailsFromWalletConnectorIfRequired);
  }


  public ProfileResponse collectBillingDetailsFromWalletConnectorIfRequired(Boolean collectBillingDetailsFromWalletConnectorIfRequired) {
    this.collectBillingDetailsFromWalletConnectorIfRequired = JsonNullable.<Boolean>of(collectBillingDetailsFromWalletConnectorIfRequired);
    
    return this;
  }

   /**
   * A boolean value to indicate if customer billing details needs to be collected from wallet connector only if it is required field for connector (Eg. Apple Pay, Google Pay etc)
   * @return collectBillingDetailsFromWalletConnectorIfRequired
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public Boolean getCollectBillingDetailsFromWalletConnectorIfRequired() {
        return collectBillingDetailsFromWalletConnectorIfRequired.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_COLLECT_BILLING_DETAILS_FROM_WALLET_CONNECTOR_IF_REQUIRED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Boolean> getCollectBillingDetailsFromWalletConnectorIfRequired_JsonNullable() {
    return collectBillingDetailsFromWalletConnectorIfRequired;
  }
  
  @JsonProperty(JSON_PROPERTY_COLLECT_BILLING_DETAILS_FROM_WALLET_CONNECTOR_IF_REQUIRED)
  public void setCollectBillingDetailsFromWalletConnectorIfRequired_JsonNullable(JsonNullable<Boolean> collectBillingDetailsFromWalletConnectorIfRequired) {
    this.collectBillingDetailsFromWalletConnectorIfRequired = collectBillingDetailsFromWalletConnectorIfRequired;
  }

  public void setCollectBillingDetailsFromWalletConnectorIfRequired(Boolean collectBillingDetailsFromWalletConnectorIfRequired) {
    this.collectBillingDetailsFromWalletConnectorIfRequired = JsonNullable.<Boolean>of(collectBillingDetailsFromWalletConnectorIfRequired);
  }


  public ProfileResponse alwaysCollectShippingDetailsFromWalletConnector(Boolean alwaysCollectShippingDetailsFromWalletConnector) {
    this.alwaysCollectShippingDetailsFromWalletConnector = JsonNullable.<Boolean>of(alwaysCollectShippingDetailsFromWalletConnector);
    
    return this;
  }

   /**
   * A boolean value to indicate if customer shipping details needs to be collected from wallet connector irrespective of connector required fields (Eg. Apple pay, Google pay etc)
   * @return alwaysCollectShippingDetailsFromWalletConnector
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public Boolean getAlwaysCollectShippingDetailsFromWalletConnector() {
        return alwaysCollectShippingDetailsFromWalletConnector.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ALWAYS_COLLECT_SHIPPING_DETAILS_FROM_WALLET_CONNECTOR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Boolean> getAlwaysCollectShippingDetailsFromWalletConnector_JsonNullable() {
    return alwaysCollectShippingDetailsFromWalletConnector;
  }
  
  @JsonProperty(JSON_PROPERTY_ALWAYS_COLLECT_SHIPPING_DETAILS_FROM_WALLET_CONNECTOR)
  public void setAlwaysCollectShippingDetailsFromWalletConnector_JsonNullable(JsonNullable<Boolean> alwaysCollectShippingDetailsFromWalletConnector) {
    this.alwaysCollectShippingDetailsFromWalletConnector = alwaysCollectShippingDetailsFromWalletConnector;
  }

  public void setAlwaysCollectShippingDetailsFromWalletConnector(Boolean alwaysCollectShippingDetailsFromWalletConnector) {
    this.alwaysCollectShippingDetailsFromWalletConnector = JsonNullable.<Boolean>of(alwaysCollectShippingDetailsFromWalletConnector);
  }


  public ProfileResponse alwaysCollectBillingDetailsFromWalletConnector(Boolean alwaysCollectBillingDetailsFromWalletConnector) {
    this.alwaysCollectBillingDetailsFromWalletConnector = JsonNullable.<Boolean>of(alwaysCollectBillingDetailsFromWalletConnector);
    
    return this;
  }

   /**
   * A boolean value to indicate if customer billing details needs to be collected from wallet connector irrespective of connector required fields (Eg. Apple pay, Google pay etc)
   * @return alwaysCollectBillingDetailsFromWalletConnector
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public Boolean getAlwaysCollectBillingDetailsFromWalletConnector() {
        return alwaysCollectBillingDetailsFromWalletConnector.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ALWAYS_COLLECT_BILLING_DETAILS_FROM_WALLET_CONNECTOR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Boolean> getAlwaysCollectBillingDetailsFromWalletConnector_JsonNullable() {
    return alwaysCollectBillingDetailsFromWalletConnector;
  }
  
  @JsonProperty(JSON_PROPERTY_ALWAYS_COLLECT_BILLING_DETAILS_FROM_WALLET_CONNECTOR)
  public void setAlwaysCollectBillingDetailsFromWalletConnector_JsonNullable(JsonNullable<Boolean> alwaysCollectBillingDetailsFromWalletConnector) {
    this.alwaysCollectBillingDetailsFromWalletConnector = alwaysCollectBillingDetailsFromWalletConnector;
  }

  public void setAlwaysCollectBillingDetailsFromWalletConnector(Boolean alwaysCollectBillingDetailsFromWalletConnector) {
    this.alwaysCollectBillingDetailsFromWalletConnector = JsonNullable.<Boolean>of(alwaysCollectBillingDetailsFromWalletConnector);
  }


  public ProfileResponse isConnectorAgnosticMitEnabled(Boolean isConnectorAgnosticMitEnabled) {
    this.isConnectorAgnosticMitEnabled = JsonNullable.<Boolean>of(isConnectorAgnosticMitEnabled);
    
    return this;
  }

   /**
   * Indicates if the MIT (merchant initiated transaction) payments can be made connector agnostic, i.e., MITs may be processed through different connector than CIT (customer initiated transaction) based on the routing rules. If set to &#x60;false&#x60;, MIT will go through the same connector as the CIT.
   * @return isConnectorAgnosticMitEnabled
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public Boolean getIsConnectorAgnosticMitEnabled() {
        return isConnectorAgnosticMitEnabled.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_IS_CONNECTOR_AGNOSTIC_MIT_ENABLED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Boolean> getIsConnectorAgnosticMitEnabled_JsonNullable() {
    return isConnectorAgnosticMitEnabled;
  }
  
  @JsonProperty(JSON_PROPERTY_IS_CONNECTOR_AGNOSTIC_MIT_ENABLED)
  public void setIsConnectorAgnosticMitEnabled_JsonNullable(JsonNullable<Boolean> isConnectorAgnosticMitEnabled) {
    this.isConnectorAgnosticMitEnabled = isConnectorAgnosticMitEnabled;
  }

  public void setIsConnectorAgnosticMitEnabled(Boolean isConnectorAgnosticMitEnabled) {
    this.isConnectorAgnosticMitEnabled = JsonNullable.<Boolean>of(isConnectorAgnosticMitEnabled);
  }


  public ProfileResponse payoutLinkConfig(BusinessPayoutLinkConfig payoutLinkConfig) {
    this.payoutLinkConfig = JsonNullable.<BusinessPayoutLinkConfig>of(payoutLinkConfig);
    
    return this;
  }

   /**
   * Get payoutLinkConfig
   * @return payoutLinkConfig
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public BusinessPayoutLinkConfig getPayoutLinkConfig() {
        return payoutLinkConfig.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PAYOUT_LINK_CONFIG)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<BusinessPayoutLinkConfig> getPayoutLinkConfig_JsonNullable() {
    return payoutLinkConfig;
  }
  
  @JsonProperty(JSON_PROPERTY_PAYOUT_LINK_CONFIG)
  public void setPayoutLinkConfig_JsonNullable(JsonNullable<BusinessPayoutLinkConfig> payoutLinkConfig) {
    this.payoutLinkConfig = payoutLinkConfig;
  }

  public void setPayoutLinkConfig(BusinessPayoutLinkConfig payoutLinkConfig) {
    this.payoutLinkConfig = JsonNullable.<BusinessPayoutLinkConfig>of(payoutLinkConfig);
  }


  public ProfileResponse outgoingWebhookCustomHttpHeaders(Object outgoingWebhookCustomHttpHeaders) {
    this.outgoingWebhookCustomHttpHeaders = JsonNullable.<Object>of(outgoingWebhookCustomHttpHeaders);
    
    return this;
  }

   /**
   * These key-value pairs are sent as additional custom headers in the outgoing webhook request.
   * @return outgoingWebhookCustomHttpHeaders
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public Object getOutgoingWebhookCustomHttpHeaders() {
        return outgoingWebhookCustomHttpHeaders.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_OUTGOING_WEBHOOK_CUSTOM_HTTP_HEADERS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Object> getOutgoingWebhookCustomHttpHeaders_JsonNullable() {
    return outgoingWebhookCustomHttpHeaders;
  }
  
  @JsonProperty(JSON_PROPERTY_OUTGOING_WEBHOOK_CUSTOM_HTTP_HEADERS)
  public void setOutgoingWebhookCustomHttpHeaders_JsonNullable(JsonNullable<Object> outgoingWebhookCustomHttpHeaders) {
    this.outgoingWebhookCustomHttpHeaders = outgoingWebhookCustomHttpHeaders;
  }

  public void setOutgoingWebhookCustomHttpHeaders(Object outgoingWebhookCustomHttpHeaders) {
    this.outgoingWebhookCustomHttpHeaders = JsonNullable.<Object>of(outgoingWebhookCustomHttpHeaders);
  }


  public ProfileResponse orderFulfillmentTime(Integer orderFulfillmentTime) {
    this.orderFulfillmentTime = JsonNullable.<Integer>of(orderFulfillmentTime);
    
    return this;
  }

   /**
   * Will be used to determine the time till which your payment will be active once the payment session starts
   * minimum: 0
   * @return orderFulfillmentTime
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public Integer getOrderFulfillmentTime() {
        return orderFulfillmentTime.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ORDER_FULFILLMENT_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Integer> getOrderFulfillmentTime_JsonNullable() {
    return orderFulfillmentTime;
  }
  
  @JsonProperty(JSON_PROPERTY_ORDER_FULFILLMENT_TIME)
  public void setOrderFulfillmentTime_JsonNullable(JsonNullable<Integer> orderFulfillmentTime) {
    this.orderFulfillmentTime = orderFulfillmentTime;
  }

  public void setOrderFulfillmentTime(Integer orderFulfillmentTime) {
    this.orderFulfillmentTime = JsonNullable.<Integer>of(orderFulfillmentTime);
  }


  public ProfileResponse orderFulfillmentTimeOrigin(OrderFulfillmentTimeOrigin orderFulfillmentTimeOrigin) {
    this.orderFulfillmentTimeOrigin = JsonNullable.<OrderFulfillmentTimeOrigin>of(orderFulfillmentTimeOrigin);
    
    return this;
  }

   /**
   * Get orderFulfillmentTimeOrigin
   * @return orderFulfillmentTimeOrigin
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public OrderFulfillmentTimeOrigin getOrderFulfillmentTimeOrigin() {
        return orderFulfillmentTimeOrigin.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ORDER_FULFILLMENT_TIME_ORIGIN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<OrderFulfillmentTimeOrigin> getOrderFulfillmentTimeOrigin_JsonNullable() {
    return orderFulfillmentTimeOrigin;
  }
  
  @JsonProperty(JSON_PROPERTY_ORDER_FULFILLMENT_TIME_ORIGIN)
  public void setOrderFulfillmentTimeOrigin_JsonNullable(JsonNullable<OrderFulfillmentTimeOrigin> orderFulfillmentTimeOrigin) {
    this.orderFulfillmentTimeOrigin = orderFulfillmentTimeOrigin;
  }

  public void setOrderFulfillmentTimeOrigin(OrderFulfillmentTimeOrigin orderFulfillmentTimeOrigin) {
    this.orderFulfillmentTimeOrigin = JsonNullable.<OrderFulfillmentTimeOrigin>of(orderFulfillmentTimeOrigin);
  }


  public ProfileResponse taxConnectorId(String taxConnectorId) {
    this.taxConnectorId = JsonNullable.<String>of(taxConnectorId);
    
    return this;
  }

   /**
   * Merchant Connector id to be stored for tax_calculator connector
   * @return taxConnectorId
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public String getTaxConnectorId() {
        return taxConnectorId.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_TAX_CONNECTOR_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getTaxConnectorId_JsonNullable() {
    return taxConnectorId;
  }
  
  @JsonProperty(JSON_PROPERTY_TAX_CONNECTOR_ID)
  public void setTaxConnectorId_JsonNullable(JsonNullable<String> taxConnectorId) {
    this.taxConnectorId = taxConnectorId;
  }

  public void setTaxConnectorId(String taxConnectorId) {
    this.taxConnectorId = JsonNullable.<String>of(taxConnectorId);
  }


  public ProfileResponse isTaxConnectorEnabled(Boolean isTaxConnectorEnabled) {
    
    this.isTaxConnectorEnabled = isTaxConnectorEnabled;
    return this;
  }

   /**
   * Indicates if tax_calculator connector is enabled or not. If set to &#x60;true&#x60; tax_connector_id will be checked.
   * @return isTaxConnectorEnabled
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_IS_TAX_CONNECTOR_ENABLED)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Boolean getIsTaxConnectorEnabled() {
    return isTaxConnectorEnabled;
  }


  @JsonProperty(JSON_PROPERTY_IS_TAX_CONNECTOR_ENABLED)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setIsTaxConnectorEnabled(Boolean isTaxConnectorEnabled) {
    this.isTaxConnectorEnabled = isTaxConnectorEnabled;
  }


  public ProfileResponse isNetworkTokenizationEnabled(Boolean isNetworkTokenizationEnabled) {
    
    this.isNetworkTokenizationEnabled = isNetworkTokenizationEnabled;
    return this;
  }

   /**
   * Indicates if network tokenization is enabled or not.
   * @return isNetworkTokenizationEnabled
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_IS_NETWORK_TOKENIZATION_ENABLED)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Boolean getIsNetworkTokenizationEnabled() {
    return isNetworkTokenizationEnabled;
  }


  @JsonProperty(JSON_PROPERTY_IS_NETWORK_TOKENIZATION_ENABLED)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setIsNetworkTokenizationEnabled(Boolean isNetworkTokenizationEnabled) {
    this.isNetworkTokenizationEnabled = isNetworkTokenizationEnabled;
  }


  public ProfileResponse shouldCollectCvvDuringPayment(Boolean shouldCollectCvvDuringPayment) {
    
    this.shouldCollectCvvDuringPayment = shouldCollectCvvDuringPayment;
    return this;
  }

   /**
   * Indicates if CVV should be collected during payment or not.
   * @return shouldCollectCvvDuringPayment
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_SHOULD_COLLECT_CVV_DURING_PAYMENT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Boolean getShouldCollectCvvDuringPayment() {
    return shouldCollectCvvDuringPayment;
  }


  @JsonProperty(JSON_PROPERTY_SHOULD_COLLECT_CVV_DURING_PAYMENT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setShouldCollectCvvDuringPayment(Boolean shouldCollectCvvDuringPayment) {
    this.shouldCollectCvvDuringPayment = shouldCollectCvvDuringPayment;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ProfileResponse profileResponse = (ProfileResponse) o;
    return Objects.equals(this.merchantId, profileResponse.merchantId) &&
        Objects.equals(this.id, profileResponse.id) &&
        Objects.equals(this.profileName, profileResponse.profileName) &&
        equalsNullable(this.returnUrl, profileResponse.returnUrl) &&
        Objects.equals(this.enablePaymentResponseHash, profileResponse.enablePaymentResponseHash) &&
        equalsNullable(this.paymentResponseHashKey, profileResponse.paymentResponseHashKey) &&
        Objects.equals(this.redirectToMerchantWithHttpPost, profileResponse.redirectToMerchantWithHttpPost) &&
        equalsNullable(this.webhookDetails, profileResponse.webhookDetails) &&
        equalsNullable(this.metadata, profileResponse.metadata) &&
        equalsNullable(this.applepayVerifiedDomains, profileResponse.applepayVerifiedDomains) &&
        equalsNullable(this.sessionExpiry, profileResponse.sessionExpiry) &&
        equalsNullable(this.paymentLinkConfig, profileResponse.paymentLinkConfig) &&
        equalsNullable(this.authenticationConnectorDetails, profileResponse.authenticationConnectorDetails) &&
        equalsNullable(this.useBillingAsPaymentMethodBilling, profileResponse.useBillingAsPaymentMethodBilling) &&
        equalsNullable(this.extendedCardInfoConfig, profileResponse.extendedCardInfoConfig) &&
        equalsNullable(this.collectShippingDetailsFromWalletConnectorIfRequired, profileResponse.collectShippingDetailsFromWalletConnectorIfRequired) &&
        equalsNullable(this.collectBillingDetailsFromWalletConnectorIfRequired, profileResponse.collectBillingDetailsFromWalletConnectorIfRequired) &&
        equalsNullable(this.alwaysCollectShippingDetailsFromWalletConnector, profileResponse.alwaysCollectShippingDetailsFromWalletConnector) &&
        equalsNullable(this.alwaysCollectBillingDetailsFromWalletConnector, profileResponse.alwaysCollectBillingDetailsFromWalletConnector) &&
        equalsNullable(this.isConnectorAgnosticMitEnabled, profileResponse.isConnectorAgnosticMitEnabled) &&
        equalsNullable(this.payoutLinkConfig, profileResponse.payoutLinkConfig) &&
        equalsNullable(this.outgoingWebhookCustomHttpHeaders, profileResponse.outgoingWebhookCustomHttpHeaders) &&
        equalsNullable(this.orderFulfillmentTime, profileResponse.orderFulfillmentTime) &&
        equalsNullable(this.orderFulfillmentTimeOrigin, profileResponse.orderFulfillmentTimeOrigin) &&
        equalsNullable(this.taxConnectorId, profileResponse.taxConnectorId) &&
        Objects.equals(this.isTaxConnectorEnabled, profileResponse.isTaxConnectorEnabled) &&
        Objects.equals(this.isNetworkTokenizationEnabled, profileResponse.isNetworkTokenizationEnabled) &&
        Objects.equals(this.shouldCollectCvvDuringPayment, profileResponse.shouldCollectCvvDuringPayment);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(merchantId, id, profileName, hashCodeNullable(returnUrl), enablePaymentResponseHash, hashCodeNullable(paymentResponseHashKey), redirectToMerchantWithHttpPost, hashCodeNullable(webhookDetails), hashCodeNullable(metadata), hashCodeNullable(applepayVerifiedDomains), hashCodeNullable(sessionExpiry), hashCodeNullable(paymentLinkConfig), hashCodeNullable(authenticationConnectorDetails), hashCodeNullable(useBillingAsPaymentMethodBilling), hashCodeNullable(extendedCardInfoConfig), hashCodeNullable(collectShippingDetailsFromWalletConnectorIfRequired), hashCodeNullable(collectBillingDetailsFromWalletConnectorIfRequired), hashCodeNullable(alwaysCollectShippingDetailsFromWalletConnector), hashCodeNullable(alwaysCollectBillingDetailsFromWalletConnector), hashCodeNullable(isConnectorAgnosticMitEnabled), hashCodeNullable(payoutLinkConfig), hashCodeNullable(outgoingWebhookCustomHttpHeaders), hashCodeNullable(orderFulfillmentTime), hashCodeNullable(orderFulfillmentTimeOrigin), hashCodeNullable(taxConnectorId), isTaxConnectorEnabled, isNetworkTokenizationEnabled, shouldCollectCvvDuringPayment);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ProfileResponse {\n");
    sb.append("    merchantId: ").append(toIndentedString(merchantId)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    profileName: ").append(toIndentedString(profileName)).append("\n");
    sb.append("    returnUrl: ").append(toIndentedString(returnUrl)).append("\n");
    sb.append("    enablePaymentResponseHash: ").append(toIndentedString(enablePaymentResponseHash)).append("\n");
    sb.append("    paymentResponseHashKey: ").append(toIndentedString(paymentResponseHashKey)).append("\n");
    sb.append("    redirectToMerchantWithHttpPost: ").append(toIndentedString(redirectToMerchantWithHttpPost)).append("\n");
    sb.append("    webhookDetails: ").append(toIndentedString(webhookDetails)).append("\n");
    sb.append("    metadata: ").append(toIndentedString(metadata)).append("\n");
    sb.append("    applepayVerifiedDomains: ").append(toIndentedString(applepayVerifiedDomains)).append("\n");
    sb.append("    sessionExpiry: ").append(toIndentedString(sessionExpiry)).append("\n");
    sb.append("    paymentLinkConfig: ").append(toIndentedString(paymentLinkConfig)).append("\n");
    sb.append("    authenticationConnectorDetails: ").append(toIndentedString(authenticationConnectorDetails)).append("\n");
    sb.append("    useBillingAsPaymentMethodBilling: ").append(toIndentedString(useBillingAsPaymentMethodBilling)).append("\n");
    sb.append("    extendedCardInfoConfig: ").append(toIndentedString(extendedCardInfoConfig)).append("\n");
    sb.append("    collectShippingDetailsFromWalletConnectorIfRequired: ").append(toIndentedString(collectShippingDetailsFromWalletConnectorIfRequired)).append("\n");
    sb.append("    collectBillingDetailsFromWalletConnectorIfRequired: ").append(toIndentedString(collectBillingDetailsFromWalletConnectorIfRequired)).append("\n");
    sb.append("    alwaysCollectShippingDetailsFromWalletConnector: ").append(toIndentedString(alwaysCollectShippingDetailsFromWalletConnector)).append("\n");
    sb.append("    alwaysCollectBillingDetailsFromWalletConnector: ").append(toIndentedString(alwaysCollectBillingDetailsFromWalletConnector)).append("\n");
    sb.append("    isConnectorAgnosticMitEnabled: ").append(toIndentedString(isConnectorAgnosticMitEnabled)).append("\n");
    sb.append("    payoutLinkConfig: ").append(toIndentedString(payoutLinkConfig)).append("\n");
    sb.append("    outgoingWebhookCustomHttpHeaders: ").append(toIndentedString(outgoingWebhookCustomHttpHeaders)).append("\n");
    sb.append("    orderFulfillmentTime: ").append(toIndentedString(orderFulfillmentTime)).append("\n");
    sb.append("    orderFulfillmentTimeOrigin: ").append(toIndentedString(orderFulfillmentTimeOrigin)).append("\n");
    sb.append("    taxConnectorId: ").append(toIndentedString(taxConnectorId)).append("\n");
    sb.append("    isTaxConnectorEnabled: ").append(toIndentedString(isTaxConnectorEnabled)).append("\n");
    sb.append("    isNetworkTokenizationEnabled: ").append(toIndentedString(isNetworkTokenizationEnabled)).append("\n");
    sb.append("    shouldCollectCvvDuringPayment: ").append(toIndentedString(shouldCollectCvvDuringPayment)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

