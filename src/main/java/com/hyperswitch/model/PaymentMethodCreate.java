/*
 * Hyperswitch - API Documentation
 *  ## Get started  Hyperswitch provides a collection of APIs that enable you to process and manage payments. Our APIs accept and return JSON in the HTTP body, and return standard HTTP response codes.  You can consume the APIs directly using your favorite HTTP/REST library.  We have a testing environment referred to \"sandbox\", which you can setup to test API calls without affecting production data. Currently, our sandbox environment is live while our production environment is under development and will be available soon. You can sign up on our Dashboard to get API keys to access Hyperswitch API.  ### Environment  Use the following base URLs when making requests to the APIs:  | Environment   |  Base URL                          | |---------------|------------------------------------| | Sandbox       | <https://sandbox.hyperswitch.io>   | | Production    | <https://api.hyperswitch.io>       |  ## Authentication  When you sign up on our [dashboard](https://app.hyperswitch.io) and create a merchant account, you are given a secret key (also referred as api-key) and a publishable key. You may authenticate all API requests with Hyperswitch server by providing the appropriate key in the request Authorization header.  | Key             |  Description                                                                                  | |-----------------|-----------------------------------------------------------------------------------------------| | api-key         | Private key. Used to authenticate all API requests from your merchant server                  | | publishable key | Unique identifier for your account. Used to authenticate API requests from your app's client  |  Never share your secret api keys. Keep them guarded and secure. 
 *
 * The version of the OpenAPI document: 0.1.0
 * Contact: hyperswitch@juspay.in
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.hyperswitch.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.hyperswitch.model.CustomerPaymentMethodBankTransfer;
import com.hyperswitch.model.CustomerPaymentMethodBilling;
import com.hyperswitch.model.PaymentMethod;
import com.hyperswitch.model.PaymentMethodCreateCard;
import com.hyperswitch.model.PaymentMethodCreatePaymentMethodData;
import com.hyperswitch.model.PaymentMethodCreateWallet;
import com.hyperswitch.model.PaymentMethodIssuerCode;
import com.hyperswitch.model.PaymentMethodType;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * PaymentMethodCreate
 */
@JsonPropertyOrder({
  PaymentMethodCreate.JSON_PROPERTY_PAYMENT_METHOD,
  PaymentMethodCreate.JSON_PROPERTY_PAYMENT_METHOD_TYPE,
  PaymentMethodCreate.JSON_PROPERTY_PAYMENT_METHOD_ISSUER,
  PaymentMethodCreate.JSON_PROPERTY_PAYMENT_METHOD_ISSUER_CODE,
  PaymentMethodCreate.JSON_PROPERTY_CARD,
  PaymentMethodCreate.JSON_PROPERTY_METADATA,
  PaymentMethodCreate.JSON_PROPERTY_CUSTOMER_ID,
  PaymentMethodCreate.JSON_PROPERTY_CARD_NETWORK,
  PaymentMethodCreate.JSON_PROPERTY_BANK_TRANSFER,
  PaymentMethodCreate.JSON_PROPERTY_WALLET,
  PaymentMethodCreate.JSON_PROPERTY_CLIENT_SECRET,
  PaymentMethodCreate.JSON_PROPERTY_PAYMENT_METHOD_DATA,
  PaymentMethodCreate.JSON_PROPERTY_BILLING
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class PaymentMethodCreate {
  public static final String JSON_PROPERTY_PAYMENT_METHOD = "payment_method";
  private PaymentMethod paymentMethod;

  public static final String JSON_PROPERTY_PAYMENT_METHOD_TYPE = "payment_method_type";
  private JsonNullable<PaymentMethodType> paymentMethodType = JsonNullable.<PaymentMethodType>undefined();

  public static final String JSON_PROPERTY_PAYMENT_METHOD_ISSUER = "payment_method_issuer";
  private JsonNullable<String> paymentMethodIssuer = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_PAYMENT_METHOD_ISSUER_CODE = "payment_method_issuer_code";
  private JsonNullable<PaymentMethodIssuerCode> paymentMethodIssuerCode = JsonNullable.<PaymentMethodIssuerCode>undefined();

  public static final String JSON_PROPERTY_CARD = "card";
  private JsonNullable<PaymentMethodCreateCard> card = JsonNullable.<PaymentMethodCreateCard>undefined();

  public static final String JSON_PROPERTY_METADATA = "metadata";
  private JsonNullable<Object> metadata = JsonNullable.<Object>undefined();

  public static final String JSON_PROPERTY_CUSTOMER_ID = "customer_id";
  private JsonNullable<String> customerId = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_CARD_NETWORK = "card_network";
  private JsonNullable<String> cardNetwork = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_BANK_TRANSFER = "bank_transfer";
  private JsonNullable<CustomerPaymentMethodBankTransfer> bankTransfer = JsonNullable.<CustomerPaymentMethodBankTransfer>undefined();

  public static final String JSON_PROPERTY_WALLET = "wallet";
  private JsonNullable<PaymentMethodCreateWallet> wallet = JsonNullable.<PaymentMethodCreateWallet>undefined();

  public static final String JSON_PROPERTY_CLIENT_SECRET = "client_secret";
  private JsonNullable<String> clientSecret = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_PAYMENT_METHOD_DATA = "payment_method_data";
  private JsonNullable<PaymentMethodCreatePaymentMethodData> paymentMethodData = JsonNullable.<PaymentMethodCreatePaymentMethodData>undefined();

  public static final String JSON_PROPERTY_BILLING = "billing";
  private JsonNullable<CustomerPaymentMethodBilling> billing = JsonNullable.<CustomerPaymentMethodBilling>undefined();

  public PaymentMethodCreate() { 
  }

  public PaymentMethodCreate paymentMethod(PaymentMethod paymentMethod) {
    
    this.paymentMethod = paymentMethod;
    return this;
  }

   /**
   * Get paymentMethod
   * @return paymentMethod
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_PAYMENT_METHOD)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public PaymentMethod getPaymentMethod() {
    return paymentMethod;
  }


  @JsonProperty(JSON_PROPERTY_PAYMENT_METHOD)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setPaymentMethod(PaymentMethod paymentMethod) {
    this.paymentMethod = paymentMethod;
  }


  public PaymentMethodCreate paymentMethodType(PaymentMethodType paymentMethodType) {
    this.paymentMethodType = JsonNullable.<PaymentMethodType>of(paymentMethodType);
    
    return this;
  }

   /**
   * Get paymentMethodType
   * @return paymentMethodType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public PaymentMethodType getPaymentMethodType() {
        return paymentMethodType.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PAYMENT_METHOD_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<PaymentMethodType> getPaymentMethodType_JsonNullable() {
    return paymentMethodType;
  }
  
  @JsonProperty(JSON_PROPERTY_PAYMENT_METHOD_TYPE)
  public void setPaymentMethodType_JsonNullable(JsonNullable<PaymentMethodType> paymentMethodType) {
    this.paymentMethodType = paymentMethodType;
  }

  public void setPaymentMethodType(PaymentMethodType paymentMethodType) {
    this.paymentMethodType = JsonNullable.<PaymentMethodType>of(paymentMethodType);
  }


  public PaymentMethodCreate paymentMethodIssuer(String paymentMethodIssuer) {
    this.paymentMethodIssuer = JsonNullable.<String>of(paymentMethodIssuer);
    
    return this;
  }

   /**
   * The name of the bank/ provider issuing the payment method to the end user
   * @return paymentMethodIssuer
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Citibank", value = "The name of the bank/ provider issuing the payment method to the end user")
  @JsonIgnore

  public String getPaymentMethodIssuer() {
        return paymentMethodIssuer.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PAYMENT_METHOD_ISSUER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getPaymentMethodIssuer_JsonNullable() {
    return paymentMethodIssuer;
  }
  
  @JsonProperty(JSON_PROPERTY_PAYMENT_METHOD_ISSUER)
  public void setPaymentMethodIssuer_JsonNullable(JsonNullable<String> paymentMethodIssuer) {
    this.paymentMethodIssuer = paymentMethodIssuer;
  }

  public void setPaymentMethodIssuer(String paymentMethodIssuer) {
    this.paymentMethodIssuer = JsonNullable.<String>of(paymentMethodIssuer);
  }


  public PaymentMethodCreate paymentMethodIssuerCode(PaymentMethodIssuerCode paymentMethodIssuerCode) {
    this.paymentMethodIssuerCode = JsonNullable.<PaymentMethodIssuerCode>of(paymentMethodIssuerCode);
    
    return this;
  }

   /**
   * Get paymentMethodIssuerCode
   * @return paymentMethodIssuerCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public PaymentMethodIssuerCode getPaymentMethodIssuerCode() {
        return paymentMethodIssuerCode.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PAYMENT_METHOD_ISSUER_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<PaymentMethodIssuerCode> getPaymentMethodIssuerCode_JsonNullable() {
    return paymentMethodIssuerCode;
  }
  
  @JsonProperty(JSON_PROPERTY_PAYMENT_METHOD_ISSUER_CODE)
  public void setPaymentMethodIssuerCode_JsonNullable(JsonNullable<PaymentMethodIssuerCode> paymentMethodIssuerCode) {
    this.paymentMethodIssuerCode = paymentMethodIssuerCode;
  }

  public void setPaymentMethodIssuerCode(PaymentMethodIssuerCode paymentMethodIssuerCode) {
    this.paymentMethodIssuerCode = JsonNullable.<PaymentMethodIssuerCode>of(paymentMethodIssuerCode);
  }


  public PaymentMethodCreate card(PaymentMethodCreateCard card) {
    this.card = JsonNullable.<PaymentMethodCreateCard>of(card);
    
    return this;
  }

   /**
   * Get card
   * @return card
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public PaymentMethodCreateCard getCard() {
        return card.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_CARD)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<PaymentMethodCreateCard> getCard_JsonNullable() {
    return card;
  }
  
  @JsonProperty(JSON_PROPERTY_CARD)
  public void setCard_JsonNullable(JsonNullable<PaymentMethodCreateCard> card) {
    this.card = card;
  }

  public void setCard(PaymentMethodCreateCard card) {
    this.card = JsonNullable.<PaymentMethodCreateCard>of(card);
  }


  public PaymentMethodCreate metadata(Object metadata) {
    this.metadata = JsonNullable.<Object>of(metadata);
    
    return this;
  }

   /**
   * You can specify up to 50 keys, with key names up to 40 characters long and values up to 500 characters long. Metadata is useful for storing additional, structured information on an object.
   * @return metadata
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "You can specify up to 50 keys, with key names up to 40 characters long and values up to 500 characters long. Metadata is useful for storing additional, structured information on an object.")
  @JsonIgnore

  public Object getMetadata() {
        return metadata.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_METADATA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Object> getMetadata_JsonNullable() {
    return metadata;
  }
  
  @JsonProperty(JSON_PROPERTY_METADATA)
  public void setMetadata_JsonNullable(JsonNullable<Object> metadata) {
    this.metadata = metadata;
  }

  public void setMetadata(Object metadata) {
    this.metadata = JsonNullable.<Object>of(metadata);
  }


  public PaymentMethodCreate customerId(String customerId) {
    this.customerId = JsonNullable.<String>of(customerId);
    
    return this;
  }

   /**
   * The unique identifier of the customer.
   * @return customerId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "cus_y3oqhf46pyzuxjbcn2giaqnb44", value = "The unique identifier of the customer.")
  @JsonIgnore

  public String getCustomerId() {
        return customerId.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_CUSTOMER_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getCustomerId_JsonNullable() {
    return customerId;
  }
  
  @JsonProperty(JSON_PROPERTY_CUSTOMER_ID)
  public void setCustomerId_JsonNullable(JsonNullable<String> customerId) {
    this.customerId = customerId;
  }

  public void setCustomerId(String customerId) {
    this.customerId = JsonNullable.<String>of(customerId);
  }


  public PaymentMethodCreate cardNetwork(String cardNetwork) {
    this.cardNetwork = JsonNullable.<String>of(cardNetwork);
    
    return this;
  }

   /**
   * The card network
   * @return cardNetwork
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Visa", value = "The card network")
  @JsonIgnore

  public String getCardNetwork() {
        return cardNetwork.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_CARD_NETWORK)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getCardNetwork_JsonNullable() {
    return cardNetwork;
  }
  
  @JsonProperty(JSON_PROPERTY_CARD_NETWORK)
  public void setCardNetwork_JsonNullable(JsonNullable<String> cardNetwork) {
    this.cardNetwork = cardNetwork;
  }

  public void setCardNetwork(String cardNetwork) {
    this.cardNetwork = JsonNullable.<String>of(cardNetwork);
  }


  public PaymentMethodCreate bankTransfer(CustomerPaymentMethodBankTransfer bankTransfer) {
    this.bankTransfer = JsonNullable.<CustomerPaymentMethodBankTransfer>of(bankTransfer);
    
    return this;
  }

   /**
   * Get bankTransfer
   * @return bankTransfer
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public CustomerPaymentMethodBankTransfer getBankTransfer() {
        return bankTransfer.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_BANK_TRANSFER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<CustomerPaymentMethodBankTransfer> getBankTransfer_JsonNullable() {
    return bankTransfer;
  }
  
  @JsonProperty(JSON_PROPERTY_BANK_TRANSFER)
  public void setBankTransfer_JsonNullable(JsonNullable<CustomerPaymentMethodBankTransfer> bankTransfer) {
    this.bankTransfer = bankTransfer;
  }

  public void setBankTransfer(CustomerPaymentMethodBankTransfer bankTransfer) {
    this.bankTransfer = JsonNullable.<CustomerPaymentMethodBankTransfer>of(bankTransfer);
  }


  public PaymentMethodCreate wallet(PaymentMethodCreateWallet wallet) {
    this.wallet = JsonNullable.<PaymentMethodCreateWallet>of(wallet);
    
    return this;
  }

   /**
   * Get wallet
   * @return wallet
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public PaymentMethodCreateWallet getWallet() {
        return wallet.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_WALLET)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<PaymentMethodCreateWallet> getWallet_JsonNullable() {
    return wallet;
  }
  
  @JsonProperty(JSON_PROPERTY_WALLET)
  public void setWallet_JsonNullable(JsonNullable<PaymentMethodCreateWallet> wallet) {
    this.wallet = wallet;
  }

  public void setWallet(PaymentMethodCreateWallet wallet) {
    this.wallet = JsonNullable.<PaymentMethodCreateWallet>of(wallet);
  }


  public PaymentMethodCreate clientSecret(String clientSecret) {
    this.clientSecret = JsonNullable.<String>of(clientSecret);
    
    return this;
  }

   /**
   * For Client based calls, SDK will use the client_secret in order to call /payment_methods Client secret will be generated whenever a new payment method is created
   * @return clientSecret
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "For Client based calls, SDK will use the client_secret in order to call /payment_methods Client secret will be generated whenever a new payment method is created")
  @JsonIgnore

  public String getClientSecret() {
        return clientSecret.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_CLIENT_SECRET)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getClientSecret_JsonNullable() {
    return clientSecret;
  }
  
  @JsonProperty(JSON_PROPERTY_CLIENT_SECRET)
  public void setClientSecret_JsonNullable(JsonNullable<String> clientSecret) {
    this.clientSecret = clientSecret;
  }

  public void setClientSecret(String clientSecret) {
    this.clientSecret = JsonNullable.<String>of(clientSecret);
  }


  public PaymentMethodCreate paymentMethodData(PaymentMethodCreatePaymentMethodData paymentMethodData) {
    this.paymentMethodData = JsonNullable.<PaymentMethodCreatePaymentMethodData>of(paymentMethodData);
    
    return this;
  }

   /**
   * Get paymentMethodData
   * @return paymentMethodData
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public PaymentMethodCreatePaymentMethodData getPaymentMethodData() {
        return paymentMethodData.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PAYMENT_METHOD_DATA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<PaymentMethodCreatePaymentMethodData> getPaymentMethodData_JsonNullable() {
    return paymentMethodData;
  }
  
  @JsonProperty(JSON_PROPERTY_PAYMENT_METHOD_DATA)
  public void setPaymentMethodData_JsonNullable(JsonNullable<PaymentMethodCreatePaymentMethodData> paymentMethodData) {
    this.paymentMethodData = paymentMethodData;
  }

  public void setPaymentMethodData(PaymentMethodCreatePaymentMethodData paymentMethodData) {
    this.paymentMethodData = JsonNullable.<PaymentMethodCreatePaymentMethodData>of(paymentMethodData);
  }


  public PaymentMethodCreate billing(CustomerPaymentMethodBilling billing) {
    this.billing = JsonNullable.<CustomerPaymentMethodBilling>of(billing);
    
    return this;
  }

   /**
   * Get billing
   * @return billing
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public CustomerPaymentMethodBilling getBilling() {
        return billing.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_BILLING)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<CustomerPaymentMethodBilling> getBilling_JsonNullable() {
    return billing;
  }
  
  @JsonProperty(JSON_PROPERTY_BILLING)
  public void setBilling_JsonNullable(JsonNullable<CustomerPaymentMethodBilling> billing) {
    this.billing = billing;
  }

  public void setBilling(CustomerPaymentMethodBilling billing) {
    this.billing = JsonNullable.<CustomerPaymentMethodBilling>of(billing);
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PaymentMethodCreate paymentMethodCreate = (PaymentMethodCreate) o;
    return Objects.equals(this.paymentMethod, paymentMethodCreate.paymentMethod) &&
        equalsNullable(this.paymentMethodType, paymentMethodCreate.paymentMethodType) &&
        equalsNullable(this.paymentMethodIssuer, paymentMethodCreate.paymentMethodIssuer) &&
        equalsNullable(this.paymentMethodIssuerCode, paymentMethodCreate.paymentMethodIssuerCode) &&
        equalsNullable(this.card, paymentMethodCreate.card) &&
        equalsNullable(this.metadata, paymentMethodCreate.metadata) &&
        equalsNullable(this.customerId, paymentMethodCreate.customerId) &&
        equalsNullable(this.cardNetwork, paymentMethodCreate.cardNetwork) &&
        equalsNullable(this.bankTransfer, paymentMethodCreate.bankTransfer) &&
        equalsNullable(this.wallet, paymentMethodCreate.wallet) &&
        equalsNullable(this.clientSecret, paymentMethodCreate.clientSecret) &&
        equalsNullable(this.paymentMethodData, paymentMethodCreate.paymentMethodData) &&
        equalsNullable(this.billing, paymentMethodCreate.billing);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(paymentMethod, hashCodeNullable(paymentMethodType), hashCodeNullable(paymentMethodIssuer), hashCodeNullable(paymentMethodIssuerCode), hashCodeNullable(card), hashCodeNullable(metadata), hashCodeNullable(customerId), hashCodeNullable(cardNetwork), hashCodeNullable(bankTransfer), hashCodeNullable(wallet), hashCodeNullable(clientSecret), hashCodeNullable(paymentMethodData), hashCodeNullable(billing));
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PaymentMethodCreate {\n");
    sb.append("    paymentMethod: ").append(toIndentedString(paymentMethod)).append("\n");
    sb.append("    paymentMethodType: ").append(toIndentedString(paymentMethodType)).append("\n");
    sb.append("    paymentMethodIssuer: ").append(toIndentedString(paymentMethodIssuer)).append("\n");
    sb.append("    paymentMethodIssuerCode: ").append(toIndentedString(paymentMethodIssuerCode)).append("\n");
    sb.append("    card: ").append(toIndentedString(card)).append("\n");
    sb.append("    metadata: ").append(toIndentedString(metadata)).append("\n");
    sb.append("    customerId: ").append(toIndentedString(customerId)).append("\n");
    sb.append("    cardNetwork: ").append(toIndentedString(cardNetwork)).append("\n");
    sb.append("    bankTransfer: ").append(toIndentedString(bankTransfer)).append("\n");
    sb.append("    wallet: ").append(toIndentedString(wallet)).append("\n");
    sb.append("    clientSecret: ").append(toIndentedString(clientSecret)).append("\n");
    sb.append("    paymentMethodData: ").append(toIndentedString(paymentMethodData)).append("\n");
    sb.append("    billing: ").append(toIndentedString(billing)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

